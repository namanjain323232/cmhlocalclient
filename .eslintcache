[{"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\index.js":"1","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\App.js":"2","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\utils\\Shop.js":"3","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\reducers\\index.js":"4","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\firebase.js":"5","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\history.js":"6","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\Mainpage.js":"7","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\Footer.js":"8","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\Header.js":"9","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\Cart.js":"10","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\actions\\types.js":"11","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\actions\\auth.js":"12","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\home\\VendorDetails.js":"13","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\home\\GetAllVendors.js":"14","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\home\\GetVendorsSubcat.js":"15","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\AdminDashboard.js":"16","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Vendor.js":"17","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Categories\\CategoriesEdit.js":"18","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Categories\\CategoriesList.js":"19","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Subcategories\\SubcategoriesCreate.js":"20","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Categories\\CategoriesDelete.js":"21","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Subcategories\\SubcategoriesList.js":"22","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Subcategories\\SubcategoriesDelete.js":"23","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Subcategories\\SubcategoriesEdit.js":"24","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Questions\\QuestionsCreate.js":"25","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Questions\\QuestionsList.js":"26","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Questions\\QuestionsEdit.js":"27","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Categories\\CategoriesCreate.js":"28","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\VendorCategories.js":"29","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Questions\\QuestionsDelete.js":"30","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\SubcategoryQuestions\\SubcategoryQuestionsCreate.js":"31","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\SubcategoryQuestions\\SubcategoryQuestionsEdit.js":"32","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\SubcategoryQuestions\\SubcategoryQuestionsList.js":"33","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Timeslot\\TimeslotCreate.js":"34","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\SubcategoryQuestions\\SubcategoryQuestionsDelete.js":"35","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Timeslot\\TimeSlotList.js":"36","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Timeslot\\TimeslotDelete.js":"37","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Timeslot\\TimeslotEdit.js":"38","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Area\\AreaLoad.js":"39","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Area\\ListAreas.js":"40","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\pages\\Checkout.js":"41","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\pages\\Payment.js":"42","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\pages\\BookVendor.js":"43","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\drawer\\SideDrawer.js":"44","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\booking\\SelectTimeslot.js":"45","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\login\\Login.js":"46","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\login\\Register.js":"47","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\login\\RegisterComplete.js":"48","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\login\\ForgotPassword.js":"49","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\login\\VendorRegisterComplete.js":"50","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\user\\UserHistory.js":"51","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\login\\VendorRegister.js":"52","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\user\\UserPassword.js":"53","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorHistory.js":"54","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorNew.js":"55","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorDashboard.js":"56","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\routes\\UserRoute.js":"57","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorPassword.js":"58","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\Vendorsign.js":"59","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorProducts\\VendorEdit.js":"60","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\routes\\AdminRoute.js":"61","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorProducts\\VendorCreate.js":"62","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorInfo\\VendorInfoCreate.js":"63","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorInfo\\VendorsInfoList.js":"64","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorInfo\\VendorInfoEdit.js":"65","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Vendors\\VendorCatDelete.js":"66","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorCalendar\\VendorCalendarCreate.js":"67","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorCalendar\\VendorCalendarList.js":"68","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorProducts\\VendorListUser.js":"69","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorCalendar\\VendorCalendarBulk.js":"70","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Vendors\\VendorCatList.js":"71","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorCalendar\\BulkTimeslots.js":"72","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\stripe\\StripeCallback.js":"73","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorCalendar\\VendorCalendarEdit.js":"74","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\stripe\\StripeCancel.js":"75","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\stripe\\StripeSuccess.js":"76","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\actions\\subcategory.js":"77","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\actions\\category.js":"78","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\actions\\vendor.js":"79","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\utils\\Star.js":"80","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\reducers\\timeslotReducer.js":"81","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\reducers\\dayReducer.js":"82","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\reducers\\searchReducer.js":"83","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\reducers\\drawerReducer.js":"84","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\reducers\\cartReducer.js":"85","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\reducers\\userReducer.js":"86","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\actions\\index.js":"87","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\cards\\VendorCard.js":"88","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\reducers\\alertReducer.js":"89","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\reducers\\subcatQuestionReducer.js":"90","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\reducers\\utilReducer.js":"91","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\reducers\\questionReducer.js":"92","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\Mainbody.js":"93","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\utils\\Search.js":"94","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\actions\\user.js":"95","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\actions\\timeslot.js":"96","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\actions\\vendorCalendar.js":"97","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\actions\\stripe.js":"98","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\cards\\AdminVendorCard.js":"99","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\Modal.js":"100","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorInfo\\VendorInfoForm.js":"101","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\cards\\VendorCalCard.js":"102","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\AdminMenu.js":"103","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\actions\\vendorInfo.js":"104","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\utils\\FileUpload.js":"105","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorProducts\\VendorUpdateForm.js":"106","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorProducts\\VendorForm.js":"107","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorProducts\\PostcodeValues.js":"108","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\routes\\CounterToRedirect.js":"109","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorProducts\\AddressList.js":"110","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorProducts\\PostcodeSearch.js":"111","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\navigation\\VendorNav.js":"112","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\navigation\\AdminNav.js":"113","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\booking\\ShowVendorBookings.js":"114","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorCategories.js":"115","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\navigation\\ConnectNav.js":"116","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\navigation\\UserNav.js":"117","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\cards\\ShowPaymentInfo.js":"118","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\booking\\RenderTimeslot.js":"119","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\order\\Invoice.js":"120","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\booking\\SelectCalendar.js":"121","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\stripe\\StripeCheckout.js":"122","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\actions\\area.js":"123","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\actions\\subcatquestions.js":"124","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\actions\\rating.js":"125","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\SubcategoryQuestions\\SubcategoryQuestionsForm.js":"126","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\actions\\questions.js":"127","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Categories\\CategoriesForm.js":"128","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Questions\\QuestionsForm.js":"129","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\apis\\addressDistance.js":"130","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\reducers\\categoryReducer.js":"131","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\cards\\Jumbotron.js":"132","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\utils\\PostcodeSearch.js":"133","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\utils\\ListSubcategories.js":"134","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\utils\\CalendarBooking.js":"135","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorField.js":"136","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Subcategories\\SubcategoriesForm.js":"137","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\utils\\searchBar.js":"138","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\cards\\LoadingCard.js":"139","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\cards\\SingleVendor.js":"140","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\cards\\VendorCardCheckout.js":"141","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\utils\\GetSubcategories.js":"142","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\cards\\VendorListItems.js":"143","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\Modal\\StarRatingModal.js":"144","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\reducers\\subcategoryReducer.js":"145","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\reducers\\authReducer.js":"146","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\config\\keys.js":"147"},{"size":734,"mtime":1672816784837,"results":"148","hashOfConfig":"149"},{"size":14326,"mtime":1672696282216,"results":"150","hashOfConfig":"149"},{"size":13756,"mtime":1672696282333,"results":"151","hashOfConfig":"149"},{"size":1357,"mtime":1672696282368,"results":"152","hashOfConfig":"149"},{"size":709,"mtime":1673027803519,"results":"153","hashOfConfig":"149"},{"size":89,"mtime":1672696282360,"results":"154","hashOfConfig":"149"},{"size":185,"mtime":1672696282222,"results":"155","hashOfConfig":"149"},{"size":721,"mtime":1672696282218,"results":"156","hashOfConfig":"149"},{"size":5663,"mtime":1672696282218,"results":"157","hashOfConfig":"149"},{"size":3156,"mtime":1673027803495,"results":"158","hashOfConfig":"149"},{"size":1910,"mtime":1672696282201,"results":"159","hashOfConfig":"149"},{"size":1350,"mtime":1672696282194,"results":"160","hashOfConfig":"149"},{"size":2686,"mtime":1672816784836,"results":"161","hashOfConfig":"149"},{"size":1754,"mtime":1672696282297,"results":"162","hashOfConfig":"149"},{"size":2396,"mtime":1672696282298,"results":"163","hashOfConfig":"149"},{"size":1603,"mtime":1672696282227,"results":"164","hashOfConfig":"149"},{"size":298,"mtime":1672696282267,"results":"165","hashOfConfig":"149"},{"size":2368,"mtime":1672696282237,"results":"166","hashOfConfig":"149"},{"size":2967,"mtime":1672696282239,"results":"167","hashOfConfig":"149"},{"size":2340,"mtime":1672696282249,"results":"168","hashOfConfig":"149"},{"size":2465,"mtime":1672696282235,"results":"169","hashOfConfig":"149"},{"size":3273,"mtime":1672696282253,"results":"170","hashOfConfig":"149"},{"size":2370,"mtime":1673027803505,"results":"171","hashOfConfig":"149"},{"size":2578,"mtime":1673027803508,"results":"172","hashOfConfig":"149"},{"size":1872,"mtime":1672696282241,"results":"173","hashOfConfig":"149"},{"size":3276,"mtime":1672696282246,"results":"174","hashOfConfig":"149"},{"size":2535,"mtime":1672696282243,"results":"175","hashOfConfig":"149"},{"size":2132,"mtime":1672696282234,"results":"176","hashOfConfig":"149"},{"size":325,"mtime":1672696282268,"results":"177","hashOfConfig":"149"},{"size":2692,"mtime":1672696282242,"results":"178","hashOfConfig":"149"},{"size":1269,"mtime":1672696282256,"results":"179","hashOfConfig":"149"},{"size":1017,"mtime":1672696282259,"results":"180","hashOfConfig":"149"},{"size":4417,"mtime":1672696282261,"results":"181","hashOfConfig":"149"},{"size":2561,"mtime":1672696282263,"results":"182","hashOfConfig":"149"},{"size":2148,"mtime":1672696282257,"results":"183","hashOfConfig":"149"},{"size":2696,"mtime":1672696282262,"results":"184","hashOfConfig":"149"},{"size":2373,"mtime":1672696282265,"results":"185","hashOfConfig":"149"},{"size":3024,"mtime":1672696282266,"results":"186","hashOfConfig":"149"},{"size":1005,"mtime":1672696282230,"results":"187","hashOfConfig":"149"},{"size":1907,"mtime":1672696282232,"results":"188","hashOfConfig":"149"},{"size":33573,"mtime":1672746026546,"results":"189","hashOfConfig":"149"},{"size":654,"mtime":1672696282313,"results":"190","hashOfConfig":"149"},{"size":2170,"mtime":1672696282311,"results":"191","hashOfConfig":"149"},{"size":1759,"mtime":1672696282296,"results":"192","hashOfConfig":"149"},{"size":4311,"mtime":1672696282278,"results":"193","hashOfConfig":"149"},{"size":8561,"mtime":1672696282301,"results":"194","hashOfConfig":"149"},{"size":1943,"mtime":1672696282301,"results":"195","hashOfConfig":"149"},{"size":3343,"mtime":1672696282302,"results":"196","hashOfConfig":"149"},{"size":1987,"mtime":1672696282300,"results":"197","hashOfConfig":"149"},{"size":3648,"mtime":1672696282305,"results":"198","hashOfConfig":"149"},{"size":2975,"mtime":1672696282322,"results":"199","hashOfConfig":"149"},{"size":6180,"mtime":1672696282304,"results":"200","hashOfConfig":"149"},{"size":2157,"mtime":1672696282323,"results":"201","hashOfConfig":"149"},{"size":513,"mtime":1672696282345,"results":"202","hashOfConfig":"149"},{"size":843,"mtime":1672696282350,"results":"203","hashOfConfig":"149"},{"size":4056,"mtime":1672696282343,"results":"204","hashOfConfig":"149"},{"size":507,"mtime":1672696282316,"results":"205","hashOfConfig":"149"},{"size":2167,"mtime":1672696282352,"results":"206","hashOfConfig":"149"},{"size":2220,"mtime":1672696282359,"results":"207","hashOfConfig":"149"},{"size":4632,"mtime":1672696282356,"results":"208","hashOfConfig":"149"},{"size":1006,"mtime":1672696282314,"results":"209","hashOfConfig":"149"},{"size":4448,"mtime":1672696282355,"results":"210","hashOfConfig":"149"},{"size":3083,"mtime":1672696282346,"results":"211","hashOfConfig":"149"},{"size":0,"mtime":1672696282350,"results":"212","hashOfConfig":"149"},{"size":3578,"mtime":1672696282347,"results":"213","hashOfConfig":"149"},{"size":2960,"mtime":1672696282269,"results":"214","hashOfConfig":"149"},{"size":6345,"mtime":1672696282339,"results":"215","hashOfConfig":"149"},{"size":2129,"mtime":1672696282341,"results":"216","hashOfConfig":"149"},{"size":1994,"mtime":1672696282357,"results":"217","hashOfConfig":"149"},{"size":4222,"mtime":1672696282338,"results":"218","hashOfConfig":"149"},{"size":1698,"mtime":1672696282270,"results":"219","hashOfConfig":"149"},{"size":3957,"mtime":1672696282337,"results":"220","hashOfConfig":"149"},{"size":2101,"mtime":1672696282319,"results":"221","hashOfConfig":"149"},{"size":6756,"mtime":1672696282340,"results":"222","hashOfConfig":"149"},{"size":290,"mtime":1672696282319,"results":"223","hashOfConfig":"149"},{"size":1539,"mtime":1673027803517,"results":"224","hashOfConfig":"149"},{"size":1317,"mtime":1673027803480,"results":"225","hashOfConfig":"149"},{"size":1825,"mtime":1673027803474,"results":"226","hashOfConfig":"149"},{"size":2415,"mtime":1673027803489,"results":"227","hashOfConfig":"149"},{"size":577,"mtime":1672696282333,"results":"228","hashOfConfig":"149"},{"size":872,"mtime":1672696282371,"results":"229","hashOfConfig":"149"},{"size":247,"mtime":1672696282366,"results":"230","hashOfConfig":"149"},{"size":209,"mtime":1672696282369,"results":"231","hashOfConfig":"149"},{"size":219,"mtime":1672696282367,"results":"232","hashOfConfig":"149"},{"size":486,"mtime":1672696282364,"results":"233","hashOfConfig":"149"},{"size":565,"mtime":1672696282372,"results":"234","hashOfConfig":"149"},{"size":2058,"mtime":1672696282196,"results":"235","hashOfConfig":"149"},{"size":2564,"mtime":1672696282285,"results":"236","hashOfConfig":"149"},{"size":418,"mtime":1672696282363,"results":"237","hashOfConfig":"149"},{"size":866,"mtime":1672696282370,"results":"238","hashOfConfig":"149"},{"size":788,"mtime":1672696282373,"results":"239","hashOfConfig":"149"},{"size":929,"mtime":1672696282368,"results":"240","hashOfConfig":"149"},{"size":3591,"mtime":1673027803498,"results":"241","hashOfConfig":"149"},{"size":1223,"mtime":1672696282332,"results":"242","hashOfConfig":"149"},{"size":1901,"mtime":1673027803482,"results":"243","hashOfConfig":"149"},{"size":1032,"mtime":1672696282200,"results":"244","hashOfConfig":"149"},{"size":2427,"mtime":1673027803492,"results":"245","hashOfConfig":"149"},{"size":1830,"mtime":1672696282198,"results":"246","hashOfConfig":"149"},{"size":1034,"mtime":1672696282280,"results":"247","hashOfConfig":"149"},{"size":861,"mtime":1672696282223,"results":"248","hashOfConfig":"149"},{"size":6366,"mtime":1672696282349,"results":"249","hashOfConfig":"149"},{"size":862,"mtime":1673027803513,"results":"250","hashOfConfig":"149"},{"size":609,"mtime":1672696282228,"results":"251","hashOfConfig":"149"},{"size":1185,"mtime":1672696282206,"results":"252","hashOfConfig":"149"},{"size":3603,"mtime":1672696282326,"results":"253","hashOfConfig":"149"},{"size":4458,"mtime":1672696282358,"results":"254","hashOfConfig":"149"},{"size":5411,"mtime":1672696282357,"results":"255","hashOfConfig":"149"},{"size":187,"mtime":1672696282354,"results":"256","hashOfConfig":"149"},{"size":790,"mtime":1672696282316,"results":"257","hashOfConfig":"149"},{"size":1877,"mtime":1672696282353,"results":"258","hashOfConfig":"149"},{"size":1743,"mtime":1672696282353,"results":"259","hashOfConfig":"149"},{"size":1415,"mtime":1672696282309,"results":"260","hashOfConfig":"149"},{"size":1558,"mtime":1672696282306,"results":"261","hashOfConfig":"149"},{"size":788,"mtime":1672696282278,"results":"262","hashOfConfig":"149"},{"size":3721,"mtime":1672696282342,"results":"263","hashOfConfig":"149"},{"size":2518,"mtime":1672696282307,"results":"264","hashOfConfig":"149"},{"size":583,"mtime":1672696282308,"results":"265","hashOfConfig":"149"},{"size":841,"mtime":1672696282283,"results":"266","hashOfConfig":"149"},{"size":3377,"mtime":1672696282276,"results":"267","hashOfConfig":"149"},{"size":1673,"mtime":1672696282311,"results":"268","hashOfConfig":"149"},{"size":1703,"mtime":1672696282276,"results":"269","hashOfConfig":"149"},{"size":4702,"mtime":1672696282319,"results":"270","hashOfConfig":"149"},{"size":732,"mtime":1672696282193,"results":"271","hashOfConfig":"149"},{"size":1065,"mtime":1672696282200,"results":"272","hashOfConfig":"149"},{"size":983,"mtime":1672696282198,"results":"273","hashOfConfig":"149"},{"size":6320,"mtime":1672696282260,"results":"274","hashOfConfig":"149"},{"size":1131,"mtime":1673027803477,"results":"275","hashOfConfig":"149"},{"size":1677,"mtime":1672696282238,"results":"276","hashOfConfig":"149"},{"size":2818,"mtime":1672696282245,"results":"277","hashOfConfig":"149"},{"size":133,"mtime":1672696282207,"results":"278","hashOfConfig":"149"},{"size":959,"mtime":1672696282365,"results":"279","hashOfConfig":"149"},{"size":276,"mtime":1672696282281,"results":"280","hashOfConfig":"149"},{"size":3465,"mtime":1672696282330,"results":"281","hashOfConfig":"149"},{"size":987,"mtime":1672696282329,"results":"282","hashOfConfig":"149"},{"size":423,"mtime":1672696282325,"results":"283","hashOfConfig":"149"},{"size":604,"mtime":1672696282344,"results":"284","hashOfConfig":"149"},{"size":1977,"mtime":1672696282253,"results":"285","hashOfConfig":"149"},{"size":503,"mtime":1672696282334,"results":"286","hashOfConfig":"149"},{"size":539,"mtime":1672696282282,"results":"287","hashOfConfig":"149"},{"size":4985,"mtime":1673027818114,"results":"288","hashOfConfig":"149"},{"size":2967,"mtime":1672696282286,"results":"289","hashOfConfig":"149"},{"size":981,"mtime":1672696282327,"results":"290","hashOfConfig":"149"},{"size":2077,"mtime":1672696282288,"results":"291","hashOfConfig":"149"},{"size":1887,"mtime":1673027803501,"results":"292","hashOfConfig":"149"},{"size":1067,"mtime":1672696282370,"results":"293","hashOfConfig":"149"},{"size":253,"mtime":1672696282363,"results":"294","hashOfConfig":"149"},{"size":614,"mtime":1672732580790,"results":"295","hashOfConfig":"149"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"299"},"1sqv2dz",{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":2,"source":"302","usedDeprecatedRules":"299"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"299"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"299"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"299"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"299"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"299"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"299"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"299"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"299"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"299"},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"299"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"299"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"299"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"299"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"299"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"299"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"299"},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"299"},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"382","usedDeprecatedRules":"299"},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"299"},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"299"},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"299"},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"299"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"299"},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404","usedDeprecatedRules":"299"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"299"},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"299"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"299"},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"299"},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"299"},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"299"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"299"},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"299"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"299"},{"filePath":"434","messages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"299"},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"299"},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"299"},{"filePath":"447","messages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"299"},{"filePath":"450","messages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"299"},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"299"},{"filePath":"458","messages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"299"},{"filePath":"461","messages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"299"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"299"},{"filePath":"467","messages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"299"},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"299"},{"filePath":"475","messages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"299"},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"299"},{"filePath":"481","messages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"299"},{"filePath":"484","messages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"299"},{"filePath":"487","messages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"299"},{"filePath":"490","messages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"299"},{"filePath":"493","messages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"299"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"299"},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"501","messages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"299"},{"filePath":"504","messages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"299"},{"filePath":"507","messages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"299"},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"299"},{"filePath":"513","messages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"299"},{"filePath":"516","messages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"299"},{"filePath":"519","messages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"521","messages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"523","messages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"525","messages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"527"},{"filePath":"528","messages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"530","messages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"299"},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"299"},{"filePath":"536","messages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"299"},{"filePath":"539","messages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"541","messages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"543","usedDeprecatedRules":"299"},{"filePath":"544","messages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"546","usedDeprecatedRules":"299"},{"filePath":"547","messages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"299"},{"filePath":"550","messages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"299"},{"filePath":"553","messages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"299"},{"filePath":"556","messages":"557","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"299"},{"filePath":"559","messages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"561","usedDeprecatedRules":"299"},{"filePath":"562","messages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"564","messages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"299"},{"filePath":"567","messages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"569","messages":"570","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"571","usedDeprecatedRules":"299"},{"filePath":"572","messages":"573","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"574","usedDeprecatedRules":"299"},{"filePath":"575","messages":"576","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"577","messages":"578","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"579","usedDeprecatedRules":"299"},{"filePath":"580","messages":"581","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"582","messages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"584","usedDeprecatedRules":"299"},{"filePath":"585","messages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"587","usedDeprecatedRules":"299"},{"filePath":"588","messages":"589","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"590","messages":"591","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"592","usedDeprecatedRules":"299"},{"filePath":"593","messages":"594","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"595","messages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"597","messages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"599","usedDeprecatedRules":"299"},{"filePath":"600","messages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"602","messages":"603","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"604","usedDeprecatedRules":"299"},{"filePath":"605","messages":"606","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"607","messages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609","usedDeprecatedRules":"299"},{"filePath":"610","messages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"612","messages":"613","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"614","messages":"615","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"616","usedDeprecatedRules":"299"},{"filePath":"617","messages":"618","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"619","usedDeprecatedRules":"299"},{"filePath":"620","messages":"621","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"622","usedDeprecatedRules":"299"},{"filePath":"623","messages":"624","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"625","usedDeprecatedRules":"299"},{"filePath":"626","messages":"627","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"628","usedDeprecatedRules":"299"},{"filePath":"629","messages":"630","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"631","usedDeprecatedRules":"299"},{"filePath":"632","messages":"633","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"634","messages":"635","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"636","usedDeprecatedRules":"299"},{"filePath":"637","messages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"639","usedDeprecatedRules":"299"},{"filePath":"640","messages":"641","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"642","usedDeprecatedRules":"299"},{"filePath":"643","messages":"644","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"645","usedDeprecatedRules":"299"},{"filePath":"646","messages":"647","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"648","messages":"649","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"650","messages":"651","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"652","messages":"653","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"654","usedDeprecatedRules":"299"},{"filePath":"655","messages":"656","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"657","usedDeprecatedRules":"299"},{"filePath":"658","messages":"659","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"660","messages":"661","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"662","messages":"663","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"664","messages":"665","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"666","usedDeprecatedRules":"299"},{"filePath":"667","messages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"669","messages":"670","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"671","usedDeprecatedRules":"299"},{"filePath":"672","messages":"673","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"674","usedDeprecatedRules":"299"},{"filePath":"675","messages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"677","usedDeprecatedRules":"299"},{"filePath":"678","messages":"679","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"680","usedDeprecatedRules":"299"},{"filePath":"681","messages":"682","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"683","usedDeprecatedRules":"299"},{"filePath":"684","messages":"685","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"686","usedDeprecatedRules":"299"},{"filePath":"687","messages":"688","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"689","messages":"690","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\index.js",["691","692"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport styles from \"./styles.css\";\r\nimport App from \"./components/App\";\r\nimport reducers from \"./reducers\";\r\nimport \"antd/dist/antd.css\";\r\n<link rel=\"stylesheet\" href=\"./styles.css\" />;\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n",["693","694"],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\App.js",["695","696","697","698","699","700","701","702"],"import React, { useEffect } from \"react\";\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { auth } from \"../firebase\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport * as actions from \"../actions\";\r\nimport history from \"../history\";\r\n\r\nimport Mainpage from \"./Mainpage\";\r\nimport GetAllVendors from \"./home/GetAllVendors\";\r\n\r\nimport AdminDashboard from \"./admin/AdminDashboard\";\r\nimport CategoriesCreate from \"./admin/Categories/CategoriesCreate\";\r\nimport CategoriesList from \"./admin/Categories/CategoriesList\";\r\nimport CategoriesEdit from \"./admin/Categories/CategoriesEdit\";\r\nimport CategoriesDelete from \"./admin/Categories/CategoriesDelete\";\r\nimport SubcategoriesCreate from \"./admin/Subcategories/SubcategoriesCreate\";\r\nimport SubcategoriesList from \"./admin/Subcategories/SubcategoriesList\";\r\nimport SubcategoriesDelete from \"./admin/Subcategories/SubcategoriesDelete\";\r\nimport SubcategoriesEdit from \"./admin/Subcategories/SubcategoriesEdit\";\r\nimport QuestionsCreate from \"./admin/Questions/QuestionsCreate\";\r\nimport QuestionsList from \"./admin/Questions/QuestionsList\";\r\nimport QuestionsEdit from \"./admin/Questions/QuestionsEdit\";\r\nimport QuestionsDelete from \"./admin/Questions/QuestionsDelete\";\r\nimport SubcategoryQuestionsCreate from \"./admin/SubcategoryQuestions/SubcategoryQuestionsCreate\";\r\nimport SubcategoryQuestionsEdit from \"./admin/SubcategoryQuestions/SubcategoryQuestionsEdit\";\r\nimport SubcategoryQuestionsDelete from \"./admin/SubcategoryQuestions/SubcategoryQuestionsDelete\";\r\nimport SubcategoryQuestionsList from \"./admin/SubcategoryQuestions/SubcategoryQuestionsList\";\r\nimport TimeslotCreate from \"./admin/Timeslot/TimeslotCreate\";\r\nimport TimeslotList from \"./admin/Timeslot/TimeSlotList\";\r\nimport TimeslotEdit from \"./admin/Timeslot/TimeslotEdit\";\r\nimport TimeslotDelete from \"./admin/Timeslot/TimeslotDelete\";\r\nimport AreaLoad from \"./admin/Area/AreaLoad\";\r\nimport ListAreas from \"./admin/Area/ListAreas\";\r\n\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport Shop from \"./utils/Shop.js\";\r\nimport Cart from \"./Cart\";\r\nimport SideDrawer from \"./drawer/SideDrawer\";\r\nimport Checkout from \"./pages/Checkout\";\r\nimport Payment from \"./pages/Payment\";\r\nimport BookVendor from \"./pages/BookVendor\";\r\nimport SelectTimeslot from \"./booking/SelectTimeslot\";\r\n// home page\r\nimport VendorDetails from \"./home/VendorDetails\";\r\nimport GetVendorsSubcat from \"./home/GetVendorsSubcat\";\r\n\r\n//login and registration\r\nimport Login from \"./login/Login\";\r\nimport Register from \"./login/Register\";\r\nimport RegisterComplete from \"./login/RegisterComplete\";\r\nimport ForgotPassword from \"./login/ForgotPassword\";\r\nimport VendorRegister from \"./login/VendorRegister\";\r\nimport VendorRegisterComplete from \"./login/VendorRegisterComplete\";\r\n// use navigation\r\nimport UserHistory from \"./user/UserHistory\";\r\nimport UserPassword from \"./user/UserPassword\";\r\n//vendor navigation\r\nimport VendorHistory from \"./vendor/VendorHistory\";\r\nimport VendorPassword from \"./vendor/VendorPassword\";\r\nimport Vendor from \"./admin/Vendor\";\r\nimport VendorNew from \"./vendor/VendorNew\";\r\nimport VendorCategories from \"./admin/VendorCategories\";\r\nimport Vendorsign from \"./vendor/Vendorsign\";\r\nimport UserRoute from \"./routes/UserRoute\";\r\nimport AdminRoute from \"./routes/AdminRoute\";\r\n\r\nimport VendorDashboard from \"./vendor/VendorDashboard\";\r\nimport VendorCreate from \"./vendor/VendorProducts/VendorCreate\";\r\nimport VendorEdit from \"./vendor/VendorProducts/VendorEdit\";\r\nimport VendorInfoCreate from \"./vendor/VendorInfo/VendorInfoCreate\";\r\nimport VendorInfoEdit from \"./vendor/VendorInfo/VendorInfoEdit\";\r\nimport VendorsInfoList from \"./vendor/VendorInfo/VendorsInfoList\"\r\nimport VendorCatList from \"./admin/Vendors/VendorCatList\";\r\nimport VendorCatDelete from \"./admin/Vendors/VendorCatDelete\";\r\nimport VendorListUser from \"./vendor/VendorProducts/VendorListUser\";\r\nimport VendorCalendarCreate from \"./vendor/VendorCalendar/VendorCalendarCreate\";\r\nimport VendorCalendarList from \"./vendor/VendorCalendar/VendorCalendarList\";\r\nimport VendorCalendarEdit from \"./vendor/VendorCalendar/VendorCalendarEdit\";\r\nimport VendorCalendarBulk from \"./vendor/VendorCalendar/VendorCalendarBulk\";\r\nimport BulkTimeslots from \"./vendor/VendorCalendar/BulkTimeslots\";\r\n\r\nimport StripeCallback from \"./stripe/StripeCallback\";\r\nimport StripeSuccess from \"./stripe/StripeSuccess\";\r\nimport StripeCancel from \"./stripe/StripeCancel\";\r\n\r\nimport { LOGGED_IN_USER } from \"../actions/types\";\r\nimport { currentUser, admintUser } from \"../actions/auth\";\r\nimport axios from \"axios\";\r\n\r\nconst App = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { user } = useSelector(state => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        const idTokenResult = await user.getIdTokenResult();\r\n        currentUser(idTokenResult.token)\r\n          .then((res) => dispatch({\r\n            type: LOGGED_IN_USER,\r\n            payload: {\r\n              name: res.data.name,\r\n              email: res.data.email,\r\n              token: idTokenResult.token,\r\n              role: res.data.role,\r\n              _id: res.data._id,\r\n              address: res.data.address,\r\n              createdAt: res.data.createdAt,\r\n              stripe_account_id: res.data.stripe_account_id,\r\n              stripe_seller: res.data.stripe_seller,\r\n              stripeSession: res.data.stripeSession\r\n            }\r\n          }))\r\n          .catch((err) => console.log(err));\r\n      }\r\n    });\r\n    //clean up\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  axios.interceptors.response.use(\r\n    (res) => res,\r\n    (err) => {\r\n      return new Promise(function (resolve, reject) {\r\n        if (err && err.response && err.response.status === 401) {\r\n          const unsubscribe = auth.onAuthStateChanged(async (user) => {\r\n            if (user) {\r\n              await user.getIdToken(true).\r\n                then((idtoken) => {\r\n                  currentUser(idtoken)\r\n                    .then((res) => {\r\n                      dispatch({\r\n                        type: LOGGED_IN_USER,\r\n                        payload: {\r\n                          name: res.data.name,\r\n                          email: res.data.email,\r\n                          token: idtoken,\r\n                          role: res.data.role,\r\n                          _id: res.data._id,\r\n                          address: res.data.address,\r\n                          createdAt: res.data.createdAt,\r\n                          stripe_account_id: res.data.stripe_account_id,\r\n                          stripe_seller: res.data.stripe_seller,\r\n                          stripeSession: res.data.stripeSession\r\n                        }\r\n                      });\r\n                      err.config.headers[\"authtoken\"] = idtoken;\r\n                      axios.request(err.config).\r\n                        then((d) => {\r\n                          resolve(d);\r\n                        })\r\n                        .catch((ex) => {\r\n                          console.log(ex);\r\n                          reject(ex);\r\n                        });\r\n                    })\r\n                    .catch((err) => {\r\n                      console.log(err)\r\n                      reject(err);\r\n                    });\r\n                })\r\n                .catch((err) => {\r\n                  console.log(err)\r\n                  reject(err);\r\n                });\r\n            }\r\n          });\r\n          return () => unsubscribe();\r\n        }\r\n        throw err;\r\n      });\r\n    }\r\n\r\n  )\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <Router history={history}>\r\n        <Header />\r\n        <SideDrawer />\r\n        <ToastContainer />\r\n        {/* login and registration routes */}\r\n        <Switch>\r\n          <Route path=\"/login\" exact component={Login} />\r\n          <Route path=\"/register\" exact component={Register} />\r\n          <Route path=\"/registercomplete\" exact component={RegisterComplete} />\r\n          <Route path=\"/vendorregister\" exact component={VendorRegister} />\r\n          <Route path=\"/vendorregistercomplete\" exact component={VendorRegisterComplete} />\r\n          <Route path=\"/forgot/password\" exact component={ForgotPassword} />\r\n          {/* Home page routes */}\r\n          <Route path=\"/\" exact component={Mainpage} />\r\n          <Route path=\"/vendor\" exact component={VendorDashboard} />\r\n          <Route path=\"/allvendors\" exact component={GetAllVendors} />\r\n          <Route path=\"/vendorcat/:slug\" exact component={GetVendorsSubcat} />\r\n\r\n          <Route path=\"/vendordetails/:id\" exact component={VendorDetails} />\r\n          <Route path=\"/shop\" exact component={Shop} />\r\n          <Route path=\"/cart\" exact component={Cart} />\r\n\r\n          {/* if {user && user.role===\"admin\"}\r\n        ( */}\r\n          {/* admin routes   */}\r\n          {(user && user.role === \"admin\") ?\r\n            <>\r\n              <AdminRoute path=\"/admin/dashboard\" exact component={AdminDashboard} />\r\n              <AdminRoute path=\"/admin/categories/categoriescreate\" exact component={CategoriesCreate} />\r\n              <AdminRoute path=\"/admin/categories/categorieslist\" exact component={CategoriesList} />\r\n              <AdminRoute path=\"/admin/categories/categoriesedit/:slug\" exact component={CategoriesEdit} />\r\n              <AdminRoute path=\"/admin/categories/categoriesdelete/:slug\" component={CategoriesDelete} />\r\n\r\n              <AdminRoute path=\"/admin/subcategories/subcategoriescreate\" exact component={SubcategoriesCreate} />\r\n              <AdminRoute path=\"/admin/subcategories/subcategorieslist\" exact component={SubcategoriesList} />\r\n              <AdminRoute path=\"/admin/subcategories/subcategoriesdelete/:slug\" component={SubcategoriesDelete} />\r\n              <AdminRoute path=\"/admin/subcategories/subcategoriesedit/:slug\" component={SubcategoriesEdit} />\r\n\r\n              <AdminRoute path=\"/admin/questions/questionscreate\" exact component={QuestionsCreate} />\r\n              <AdminRoute path=\"/admin/questions/questionslist\" component={QuestionsList} />\r\n              <AdminRoute path=\"/admin/questions/questionsedit/:id\" component={QuestionsEdit} />\r\n              <AdminRoute path=\"/admin/questions/questionsdelete/:id\" component={QuestionsDelete} />\r\n              <AdminRoute path=\"/vendor/vendorsinfolist\" exact component={VendorsInfoList} />\r\n              <AdminRoute path=\"/vendor/vendorcatlist\" exact component={VendorCatList} />\r\n\r\n              <AdminRoute path=\"/admin/subcatquestions/subcatquestionscreate\" component={SubcategoryQuestionsCreate} />\r\n              <AdminRoute path=\"/admin/subcatquestions/subcatquestionsedit/:id\" component={SubcategoryQuestionsEdit} />\r\n              <AdminRoute path=\"/admin/subcatquestions/subcatquestionsdelete/:id\" component={SubcategoryQuestionsDelete} />\r\n              <AdminRoute path=\"/admin/subcatquestions/subcatquestionslist\" exact component={SubcategoryQuestionsList} />\r\n              <AdminRoute path=\"/admin/vendor\" exact component={Vendor} />\r\n\r\n              <AdminRoute path= \"/admin/timeslot/timeslotcreate\" exact component= {TimeslotCreate} />\r\n              <AdminRoute path= \"/admin/timeslot/listslots\" exact component= {TimeslotList} />\r\n              <AdminRoute path= \"/admin/timeslot/editslot/:id\" exact component= {TimeslotEdit} />\r\n              <AdminRoute path= \"/admin/timeslot/deleteslot/:id\" exact component= {TimeslotDelete} />\r\n\r\n              <AdminRoute path=\"/admin/areas/addareas\" exact component={AreaLoad} />\r\n              <AdminRoute path=\"/admin/areas/listareas\" exact component={ListAreas} />\r\n            </>\r\n            :\r\n            <>\r\n              {/* vendor routes */}\r\n              <UserRoute path=\"/vendor/vendorcreate\" exact component={VendorCreate} />\r\n              <UserRoute path=\"/vendor/vendoredit/:id\" exact component={VendorEdit} />\r\n\r\n              {/* user routes */}\r\n              <UserRoute path=\"/user/history\" exact component={UserHistory} />\r\n              <UserRoute path=\"/user/userpassword\" exact component={UserPassword} />\r\n              <UserRoute exact path=\"/vendor/dashboard\" component={VendorDashboard} />\r\n              <UserRoute path=\"/vendor/password\" exact component={VendorPassword} />\r\n              <UserRoute path=\"/vendor/vendordetails\" exact component={VendorNew} />\r\n              <UserRoute path=\"/vendor/vendorcategories\" exact component={VendorCategories} />\r\n              <UserRoute path=\"/vendor/vendorcatdelete/:id\" exact component={VendorCatDelete} />\r\n              <UserRoute path=\"/vendor/vendorcatlistuser/:userid\" exact component={VendorListUser} />\r\n\r\n              <UserRoute path=\"/vendor/vendorinfocreate\" exact component={VendorInfoCreate} />\r\n              <UserRoute path=\"/vendor/vendorinfoedit/:email\" exact component={VendorInfoEdit} />\r\n              <UserRoute path=\"/vendor/vendorcalcreate/:userid\" exact component={VendorCalendarCreate} />\r\n              <UserRoute path=\"/vendor/vendorcallist/:userid\" exact component={VendorCalendarList} />\r\n              <UserRoute path=\"/vendor/vendorcaledit/:id\" exact component={VendorCalendarEdit} />\r\n              <UserRoute path=\"/vendor/vendorcalbulk/:id\" exact component={VendorCalendarBulk} />\r\n              <UserRoute path=\"/vendor/bulktimeslots/:id/:fromDate/:toDate\" exact component={BulkTimeslots} />\r\n\r\n              <UserRoute path=\"/checkout\" exact component={Checkout} />\r\n              <UserRoute path=\"/payment\" exact component={Payment} />\r\n              <UserRoute path=\"/bookvendor/:id\" exact component={BookVendor} />\r\n              <UserRoute path=\"/selectslot/:vendor/:selectedvalue\" exact component={SelectTimeslot} />\r\n\r\n              {/* Route for vendor stripe callback */}\r\n              <UserRoute path=\"/stripe/callback\" component={StripeCallback} />\r\n              <UserRoute path=\"/stripesuccess/:vendor\" component={StripeSuccess} />\r\n              <UserRoute path=\"/stripecancel\" component={StripeCancel} />\r\n\r\n              {/* <Footer /> */}\r\n            </>}\r\n        </Switch>\r\n\r\n      </Router>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default connect(null, actions)(App);","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\utils\\Shop.js",["703","704","705","706","707","708","709"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Menu, Slider, Checkbox, Button, Tooltip, Empty, Tag } from \"antd\";\r\nimport { getVendorsByCount, getVendorsByFilter } from \"../../actions/vendor\";\r\nimport { fetchCategories } from \"../../actions/category\";\r\nimport { fetchSubcategories } from \"../../actions/subcategory\";\r\nimport VendorCard from \"../cards/VendorCard\";\r\nimport { DownSquareOutlined, StarOutlined, CloseOutlined, RightCircleFilled, CheckCircleOutlined } from \"@ant-design/icons\";\r\nimport Star from \"./Star\";\r\nimport Autocomplete from \"react-google-autocomplete\";\r\n\r\nconst { SubMenu, ItemGroup } = Menu;\r\n\r\nconst Shop = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { search } = useSelector(state => ({ ...state }));\r\n    const didMountRef = useRef(false);\r\n    const [vendors, setVendors] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    //   const [area, setArea] = useState([]);\r\n    const [price, setPrice] = useState(undefined);\r\n    const [ok, setOk] = useState(false);\r\n    const [categories, setCategories] = useState([]);\r\n    const [category, setCategory] = useState([]);\r\n    const [star, setStar] = useState([]);\r\n    const [subcategories, setSubcategories] = useState([]);\r\n    const [sub, setSub] = useState(\"\");\r\n    const [areas, setAreas] = useState([]);\r\n    const [selectedArea, setSelectedArea] = useState(null);\r\n    const { text } = search;\r\n\r\n    useEffect(() => {\r\n        loadVendors();\r\n        loadCategories();\r\n        loadSubcategories();\r\n    }, []);\r\n\r\n    // load vendors by count when the page loads for the first time\r\n    const loadVendors = () => {\r\n        setLoading(true);\r\n        getVendorsByCount(12).then(v => setVendors(v.data));\r\n        setLoading(false);\r\n    };\r\n\r\n    const loadCategories = () => (fetchCategories().then(res => setCategories(res.data)));\r\n\r\n    const loadSubcategories = () => (fetchSubcategories().then(res => setSubcategories(res.data)));\r\n\r\n    //load vendors based on user search text input in search bar\r\n    useEffect(() => {\r\n        if (didMountRef.current) {\r\n            const delay = setTimeout(() => {\r\n                loadVendorsByFilter({ query: text });\r\n                if (!text) {\r\n                    loadVendors();\r\n                }\r\n            }, 300);\r\n            return () => clearTimeout(delay);\r\n        }\r\n        else {\r\n            didMountRef.current = true;\r\n        }\r\n    }, [text]);\r\n\r\n    const loadVendorsByFilter = (arg) => {\r\n        getVendorsByFilter(arg)\r\n            .then((res) => {\r\n                setVendors(res.data)\r\n            })\r\n            .catch((res) => {\r\n                console.log(\"filter catch : \" + res)\r\n            });\r\n    }\r\n\r\n    // load vendors based on price range selected\r\n    useEffect(() => {\r\n        if (didMountRef.current) {\r\n            handleFilters();\r\n            window.scrollTo({\r\n                top: 0,\r\n                left: 0,\r\n                behavior: \"smooth\"\r\n            });\r\n        }\r\n        else {\r\n            didMountRef.current = true;\r\n        }\r\n    }, [ok]);\r\n\r\n    const handleSlider = (value) => {\r\n        dispatch({\r\n            type: \"SEARCH_QUERY\",\r\n            payload: { text: \"\" }\r\n        })\r\n        setPrice(value);\r\n        setTimeout(() => {\r\n            setOk(!ok)\r\n        }, 300)\r\n    }\r\n\r\n    const clearSliderFilter = () => {\r\n\r\n        dispatch({\r\n            type: \"SEARCH_QUERY\",\r\n            payload: { text: \"\" }\r\n        });\r\n        setPrice(undefined);\r\n        setTimeout(() => {\r\n            setOk(!ok)\r\n        }, 300)\r\n    }\r\n\r\n    const clearRatingFilter = () => {\r\n\r\n        dispatch({\r\n            type: \"SEARCH_QUERY\",\r\n            payload: { text: \"\" }\r\n        });\r\n        setStar([]);\r\n        setTimeout(() => {\r\n            setOk(!ok)\r\n        }, 300)\r\n    }\r\n\r\n    const clearSubCategoryFilter = (e) => {\r\n\r\n        dispatch({\r\n            type: \"SEARCH_QUERY\",\r\n            payload: { text: \"\" }\r\n        });\r\n        setSub(\"\")\r\n        setTimeout(() => {\r\n            setOk(!ok)\r\n        }, 300)\r\n        e.preventDefault();\r\n    }\r\n\r\n    //handle change for categories\r\n    const handleCategoryChange = (e) => {\r\n        dispatch({\r\n            type: \"SEARCH_QUERY\",\r\n            payload: { text: \"\" }\r\n        })\r\n        const catInState = [...category];\r\n        const catChecked = e.target.value;\r\n        //check if the category id already exists in the array of current categories. \r\n        //if the item is found, it returns index of the item otherwise it returns -1\r\n        const catAlreadyInState = catInState.indexOf(catChecked);\r\n        if (catAlreadyInState === -1) {\r\n            catInState.push(catChecked);\r\n        } else {\r\n            catInState.splice(catAlreadyInState, 1);\r\n        }\r\n        setCategory(catInState);\r\n        setTimeout(() => {\r\n            setOk(!ok)\r\n        }, 300)\r\n    }\r\n\r\n    const handleStarClicked = (num) => {\r\n        dispatch({\r\n            type: \"SEARCH_QUERY\",\r\n            payload: { text: \"\" }\r\n        })\r\n        var selectedStars = [...star];\r\n        const alreadySelectedStars = selectedStars.indexOf(num);\r\n        if (alreadySelectedStars === -1) {\r\n            selectedStars.push(num);\r\n        } else {\r\n            selectedStars.splice(alreadySelectedStars, 1);\r\n        }\r\n\r\n        setStar(selectedStars);\r\n        setTimeout(() => {\r\n            setOk(!ok)\r\n        }, 300)\r\n    }\r\n\r\n    const handleAreas = (area) => {\r\n        setSelectedArea(area);\r\n        setAreas(result => [...result, area]);\r\n        // setAreas(areas.filter(a => a.place_id != area.place_id));\r\n\r\n    }\r\n\r\n    //handle selection of star ratings\r\n    const showStars = () => (\r\n        <div className=\"pr-4 pl-4 pb-2\">\r\n            <Star starClicked={handleStarClicked} numberOfStars={5} selected={[...star].indexOf(5) > -1} />\r\n            <Star starClicked={handleStarClicked} numberOfStars={4} selected={[...star].indexOf(4) > -1} />\r\n            <Star starClicked={handleStarClicked} numberOfStars={3} selected={[...star].indexOf(3) > -1} />\r\n            <Star starClicked={handleStarClicked} numberOfStars={2} selected={[...star].indexOf(2) > -1} />\r\n            <Star starClicked={handleStarClicked} numberOfStars={1} selected={[...star].indexOf(1) > -1} />\r\n        </div>\r\n    )\r\n\r\n    const showAreas = () => (\r\n        [...areas].map((s) => (\r\n            <Tag\r\n                color='blue'\r\n                className=\"p-1 m-1\"\r\n                key={s.place_id}\r\n                style={{ cursor: \"pointer\" }}\r\n            >{s.formatted_address}</Tag>\r\n        ))\r\n    )\r\n\r\nconst handleSubCategory = (sub) => {\r\n    console.log(sub);\r\n    dispatch({\r\n        type: \"SEARCH_QUERY\",\r\n        payload: { text: \"\" }\r\n    })\r\n    setSub(sub);\r\n    setTimeout(() => {\r\n        setOk(!ok)\r\n    }, 300)\r\n}\r\n\r\nconst handleFilters = () => {\r\n    console.log(price);\r\n    loadVendorsByFilter({ query: text, price: price, category: category, stars: star, sub: sub })\r\n}\r\n\r\nreturn (\r\n    <div className=\"container-fluid\">\r\n        <div className=\"row mt-2\">\r\n            <div className=\"col col-md-3 mt-2\">\r\n                <h4>Search/Filter</h4>\r\n                <hr />\r\n                <Menu defaultOpenKeys={[\"1\", \"2\", \"3\", \"4\", \"5\"]} mode=\"inline\">\r\n                    <SubMenu key=\"1\" title={<span className=\"h6\">Area</span>}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-md-10\">\r\n                                <Autocomplete\r\n                                    apiKey=\"AIzaSyAG4N6GONCjaMkk-QnJw1eHeConkKFrzGY\"//\"AIzaSyBnYVkxZoAHzYSlNAq167HjQ3seFcUPa7Q\" //--AIzaSyAG4N6GONCjaMkk-QnJw1eHeConkKFrzGY\r\n                                    onPlaceSelected={(place) => {\r\n                                        handleAreas(place);\r\n                                    }}\r\n                                    className=\"ml-3 w-100\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col col-md-10\">\r\n                                <div className=\"pl-4 pr-4\">\r\n                                    {showAreas()}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </SubMenu>\r\n                    <SubMenu key=\"2\" title={<span className=\"h6\">\r\n                        Price\r\n                    </span>\r\n                    }>\r\n                        <div className=\"row\">\r\n                            <div className=\"col col-md-9\">\r\n                                <Slider className=\"ml-4 mt-2\"\r\n                                    tipFormatter={(v) => `£${v}`}\r\n                                    range\r\n                                    value={price == undefined ? [0, 0] : price}\r\n                                    onChange={handleSlider}\r\n                                    max=\"500\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"col col-md-2\">\r\n                                <Tooltip title=\"Clear Price\">\r\n                                    <Button size=\"small\" shape=\"circle\" type=\"dashed\" onClick={clearSliderFilter}\r\n                                        icon={<CloseOutlined className=\"d-block\" style={{ fontSize: \"medium\" }} />} />\r\n                                </Tooltip>\r\n                            </div>\r\n                            <div className=\"col-md-12 mt-1 mb-1\">\r\n                                <b className=\"text-primary ml-4\"> {(price ? `£${price[0]} - £${price[1]}` : \"\")} </b>\r\n                            </div>\r\n                        </div>\r\n                    </SubMenu>\r\n                    <SubMenu key=\"3\" title={<span className=\"h6\">\r\n                        <DownSquareOutlined /> Categories\r\n                    </span>\r\n                    }>\r\n                        <div style={{ marginTop: \"-10px\" }}>\r\n\r\n                            {categories && categories.map((c) => (\r\n                                <div className=\"pt-2 fixedHeight overflowScroll\" key={c._id}>\r\n                                    <Checkbox className=\"pb-2 pl-4 pr-4\"\r\n                                        onChange={handleCategoryChange}\r\n                                        value={c._id}\r\n                                        name=\"category\"\r\n                                        checked={category.includes(c._id)}\r\n                                    >{c.name}</Checkbox>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </SubMenu>\r\n                    <SubMenu key=\"4\" title={<span className=\"h6 mt-2\">\r\n                        <StarOutlined style={{ marginTop: \"-2px\" }} /> Rating\r\n                        <Tooltip title=\"Clear Ratings\">\r\n                            <Button size=\"small\" shape=\"circle\" type=\"dashed\" onClick={clearRatingFilter}\r\n                                style={{ float: \"right\", top: \"10px\", paddingLeft: \"3px\" }}\r\n                                icon={<CloseOutlined className=\"d-block\" style={{ fontSize: \"medium\" }} />} />\r\n                        </Tooltip>\r\n                    </span>\r\n                    }>\r\n                        <div style={{ marginTop: \"-10px\" }}>\r\n                            {showStars()}\r\n                        </div>\r\n                    </SubMenu>\r\n                    <SubMenu key=\"5\" title={<span className=\"h6 mt-2\">\r\n                        <DownSquareOutlined /> Sub Category\r\n                        <Tooltip title=\"Clear Sub Category\">\r\n                            <Button size=\"small\" shape=\"circle\" type=\"dashed\" onClick={clearSubCategoryFilter}\r\n                                style={{ float: \"right\", top: \"10px\", paddingLeft: \"3px\" }}\r\n                                icon={<CloseOutlined className=\"d-block\" style={{ fontSize: \"medium\" }} />} />\r\n                        </Tooltip>\r\n                    </span>\r\n                    }>\r\n                        <div className=\"pl-4 pr-4\">\r\n                            {subcategories && subcategories.map((s) => (\r\n                                <Tag\r\n                                    color={`${s._id == sub._id ? '#1d2d50' : ''}`} //#108ee9\r\n                                    onClick={() => handleSubCategory(s)}\r\n                                    className=\"p-1 m-1\"\r\n                                    key={s._id}\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                >{s.name}</Tag>\r\n                            ))\r\n                            }\r\n                        </div>\r\n                    </SubMenu>\r\n                </Menu>\r\n            </div>\r\n            <div className=\"col col-md-9\">\r\n                {loading ? <h4 className=\"text-danger\">Loading...</h4>\r\n                    : <h4>Vendors</h4>\r\n                }\r\n\r\n                {vendors.length < 1 && <Empty description={<b>\"Sorry, we couldn't find any results !\"</b>} />}\r\n\r\n                <div className=\"col col-md-12\">\r\n                    <div className=\"row\">\r\n\r\n                        {vendors.map((v) => (\r\n                            <div className=\"col col-md-4\"\r\n                                key={v._id}\r\n                                style={{ cursor: \"pointer\" }}\r\n                            >\r\n                                <VendorCard vendor={v} />\r\n                            </div>\r\n\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Shop;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\reducers\\index.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\firebase.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\history.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\Mainpage.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\Footer.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\Header.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\Cart.js",["710","711","712"],"import React from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { getVendorsTotal } from \"../actions/vendor\";\r\nimport VendorCardCheckout from \"./cards/VendorCardCheckout\";\r\nimport {userCart} from \"../actions/user\";\r\n\r\nconst Cart= ({history}) => {\r\n\r\n  const {user,cart} = useSelector( (state) => ({...state}));\r\n  const dispatch = useDispatch();\r\n\r\n  const getCartTotal= () => {\r\n      return cart.reduce( (currentValue, nextValue) => {\r\n          return currentValue + nextValue.count * nextValue.price\r\n      },0)\r\n  }\r\n\r\n  // const cartval= cart[0].subcategories\r\n\r\n  {console.log(\"VALUE OF CART\",cart)}\r\n\r\n  const saveOrderToDB= () => {\r\n      userCart(cart,user.token)\r\n      .then ( res => {\r\n         console.log(\"Cart response ZZZ\",res.data)\r\n         if (res.data.ok) history.push(\"/checkout\");\r\n      })\r\n      .catch ((err) => console.log(err));\r\n      }\r\n  const showCartItems= () => (\r\n    <div className= \"table-responsive\">\r\n      <table className= \"table table-bordered\">\r\n        <thead className= \"thead-light\">\r\n         <tr>\r\n             <th scope=\"col\">Image</th>\r\n             <th scope=\"col\">Name</th>\r\n             <th scope=\"col\">Sub Catgeory</th>\r\n             <th scope=\"col\">Area</th>\r\n             <th scope=\"col\">Price</th>\r\n             <th scope=\"col\">Booking Date</th>\r\n             <th scope=\"col\"> Booked Timeslots</th>\r\n             <th scope=\"col\">Count</th>\r\n             <th scope=\"col\"> Remove</th>\r\n         </tr>\r\n        </thead>\r\n        {cart.map( (v) => (\r\n            <VendorCardCheckout key={v._id} v = {v} />\r\n        ))}\r\n      </table>\r\n      </div>\r\n  )\r\n\r\n  return (\r\n      <div className= \"container-fluid\">\r\n        <div className= \"row mt-2\">\r\n         <div className= \"col col-md-8\">\r\n            <h4>Cart / {cart.length} Vendors</h4> \r\n             { !cart.length ? <p className= \"h6\">No helper selected. <Link to=\"/shop\">Find a helper</Link></p>\r\n              : showCartItems()\r\n             }\r\n         </div>\r\n         <div className= \"col col-md-4\">\r\n             <h4>Order Summary</h4>\r\n             <hr />\r\n             <p className= \"font-weight-bold\">Selected Helper</p>\r\n             \r\n             {cart.map((c,i) => (\r\n                 <div key={i}>\r\n                   <p>{c.vendorInfoId.name}  {c.subcategories[0].name} =  £{c.price * c.count}</p>\r\n                 </div>\r\n             ))}\r\n             \r\n             <hr />\r\n              Total : <b> £{getCartTotal()}</b>\r\n             <hr />\r\n             {\r\n               user ? \r\n               <button onClick= {saveOrderToDB} \r\n                       className= \"btn btn-sm btn-primary mt-2 font-weight-bold\"\r\n                       disabled= {!cart.length}\r\n                       >Proceed to Checkout</button>  \r\n               : (\r\n                 <button className= \"btn btn-sm btn-secondary font-weight-bold mt-2\">\r\n                  <Link to= {{\r\n                    pathname: \"/login\",\r\n                    state: { from:\"cart\"}\r\n                  }} >\r\n                    Login to Checkout\r\n                  </Link>                 \r\n                 </button>  \r\n               )\r\n             }\r\n         </div>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Cart;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\actions\\types.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\actions\\auth.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\home\\VendorDetails.js",["713","714"],"import React, {useState, useEffect} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getVendorCategory, vendorRating, getRelatedVendors } from \"../../actions/vendor\";\r\nimport SingleVendor from \"../cards/SingleVendor\";\r\nimport VendorCard from \"../cards/VendorCard\";\r\n\r\nconst VendorDetails= ({match}) => {\r\n\r\n const {user}  = useSelector( state => ({ ...state})); \r\n const [vendor, setVendor] = useState(\"\");\r\n const [loading,setLoading] = useState(false);\r\n const [star,setStar] = useState(0);\r\n const [related, setRelated] = useState([]);\r\n const {id} = match.params;\r\n\r\n \r\n useEffect( () => {\r\n     loadVendorDetails(); \r\n },[id]);\r\n\r\n useEffect( () => {\r\n     if (vendor.ratings && user) {\r\n        let existingRatingObject= vendor.ratings.find( \r\n            (e) => e.postedBy.toString() === user._id.toString()\r\n        );\r\n         existingRatingObject && setStar(existingRatingObject.star);\r\n     }\r\n })\r\n\r\n const loadVendorDetails= () => {\r\n     setLoading(true);\r\n      getVendorCategory(id)\r\n      .then ( (res) => {\r\n               setVendor(res.data);\r\n               getRelatedVendors(res.data._id).then ( res => setRelated(res.data));\r\n               setLoading(false);\r\n\r\n            }) \r\n      .catch ( (err) => {\r\n          console.log(err);\r\n      });\r\n }\r\n\r\n const onRatingClick = (newRating,name) => {    \r\n    setStar(newRating);\r\n    console.log(\"rating VALUE before update\",star,name,user.token);\r\n    vendorRating(name,newRating,user.token)\r\n    .then ( (res) => {\r\n        console.log(\"Rating after Update\",res);\r\n        loadVendorDetails();\r\n    })\r\n    \r\n }\r\n\r\n return (\r\n     <div className= \"container\">\r\n       <div className= \"row pt-4\">\r\n        { loading ? <h1>Loading...</h1>\r\n                :  <SingleVendor vendor= {vendor}  \r\n                                 onRatingClick= {onRatingClick}\r\n                                 rating= {star}\r\n                                 /> \r\n        }          \r\n       </div>  \r\n       <div className=\"row\">\r\n        <div className= \"col pt-5 pb-5\">\r\n         <hr />\r\n          <h4>Other Vendors in your area</h4>\r\n         <hr />\r\n         <div className= \"row pb-5 \">\r\n         {related.length \r\n           ? related.map( (r) => <div className= \"col col-md-4\" key={r._id}> <VendorCard  vendor= {r}/> </div>)\r\n           : <div className= \"text-\"> </div>\r\n           }\r\n             \r\n                  \r\n         </div>\r\n        \r\n        </div>\r\n\r\n       </div>      \r\n     </div>\r\n )\r\n}\r\n\r\nexport default VendorDetails;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\home\\GetAllVendors.js",["715"],"import React, {useState, useEffect} from \"react\";\r\nimport {getVendors, getVendorsTotal} from \"../../actions/vendor\";\r\nimport VendorCard from \"../cards/VendorCard\";\r\nimport LoadingCard from \"../cards/LoadingCard\";\r\nimport {Pagination} from \"antd\";\r\n\r\nconst GetAllVendors= () => {\r\n\r\n    const [vendors, setVendors] = useState([]);\r\n    const [loading,setLoading] = useState(false);\r\n    const [page,setPage] = useState(1);\r\n    const [vendorsTotal, setVendorsTotal]= useState(0);\r\n\r\n    useEffect( () => {\r\n      loadAllVendorCats();\r\n    },[page]);\r\n\r\n    useEffect( () => {\r\n        getVendorsTotal().then( res => setVendorsTotal(res.data));\r\n    },[]);\r\n\r\n    const loadAllVendorCats= () => {\r\n        setLoading(true);\r\n        getVendors(\"desc\",page).then ( res => setVendors(res.data) );\r\n        setLoading(false);\r\n    }\r\n\r\n    return (\r\n    <div>\r\n        \r\n        <div className= \"container\">\r\n         \r\n          { loading ? <LoadingCard  count= {4}/> \r\n                    : \r\n            <div className=\"row mb-2\">\r\n              {vendors.map( (vendor) => {\r\n                return(\r\n                <div className= \"col col-md-4\" key={vendor._id}>\r\n                  <VendorCard  vendor= {vendor}/>\r\n                </div>\r\n                )\r\n              })}       \r\n            </div>\r\n          }           \r\n      </div>\r\n       <div className=\"row\">\r\n         <nav className= \"col col-md-4 offset-md-4 pt-5 p-3 d-flex justify-content-center\">\r\n        \r\n         <Pagination  current= {page}\r\n                    total= {(vendorsTotal / 3) * 10}\r\n                    onChange={ (value) => setPage(value)}\r\n          />         \r\n          </nav>\r\n          \r\n        </div>\r\n    </div>\r\n    )   \r\n\r\n}\r\n\r\nexport default GetAllVendors;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\home\\GetVendorsSubcat.js",["716","717","718"],"import React, {useState, useEffect} from \"react\";\r\nimport {toast} from \"react-toastify\";\r\nimport VendorCard from \"../cards/VendorCard\";\r\nimport LoadingCard from \"../cards/LoadingCard\";\r\nimport {fetchSubcategory,fetchSubcatVendors} from \"../../actions/subcategory\";\r\nimport {Pagination} from \"antd\";\r\n\r\n\r\nconst GetVendorsSubcat= ({match}) => {\r\n    \r\n    const [subcat, setSubcat] = useState([]);\r\n    const [vendors,setVendors] = useState([]);\r\n    const [loading,setLoading] = useState(false);\r\n    const [page,setPage] = useState(1);\r\n    const [vendorsTotal, setVendorsTotal]= useState(0);\r\n\r\n    useEffect( () => {\r\n        loadSubcat();\r\n        loadVendorsSubcat();\r\n    },[]);\r\n\r\n   const loadSubcat= (() => {\r\n      setLoading(true);\r\n      fetchSubcategory(match.params.slug).then ( (sub) => setSubcat(sub.data));\r\n      setLoading(false);\r\n   });\r\n\r\n    const loadVendorsSubcat = () => {\r\n        setLoading(true);\r\n        fetchSubcatVendors(match.params.slug)\r\n        .then ( (res) => {\r\n            setVendors(res.data)\r\n            setLoading(false);\r\n         })\r\n        .catch ( (err) => {\r\n            console.log(err);\r\n            setLoading(false);\r\n            toast.error(err.message);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          <div className= \"container-fluid\">\r\n               { loading ? <h4 className= \"text-center p-3 mt-5 mb-5  jumbotron\">Loading....</h4>\r\n                      : <h4 className= \"float-center p-3 mt-5 mb-5 jumbotron\">                      \r\n                       We found {vendors.length} {subcat.name} in your area\r\n                      </h4>\r\n            }\r\n             <div className=\"row ml-2\" key={vendors._id}> \r\n             {vendors.map( (vendor) => (      \r\n                 <VendorCard \r\n                     vendor= {vendor}\r\n                     key={vendor._id}\r\n                 />              \r\n             ))}\r\n            </div>            \r\n            \r\n          <div className=\"row \">\r\n            <nav className= \"col col-md-4 offset-md-4 pt-5 p-3 d-flex justify-content-center\">        \r\n              <Pagination  current= {page}\r\n                    total= {(vendorsTotal / 3) * 10}\r\n                    onChange={ (value) => setPage(value)}          />         \r\n            </nav>          \r\n          </div>\r\n        </div>           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GetVendorsSubcat;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\AdminDashboard.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Vendor.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Categories\\CategoriesEdit.js",["719","720"],"import _ from \"lodash\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { editCategory, fetchCategory} from \"../../../actions/category\";\r\nimport AdminMenu from \"../AdminMenu\";\r\nimport AdminNav from \"../../navigation/AdminNav\";\r\nimport CategoriesForm from \"./CategoriesForm\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst  CategoriesEdit = ({history, match}) =>\r\n{\r\n  const {user} = useSelector( (state) => ({...state}));\r\n  const [loading,setLoading] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [imgURL, setImgURL] = useState(\"\");\r\n\r\n  const slug= match.params.slug;\r\n\r\n  useEffect( () => {\r\n    getCategory();\r\n  }, [] );\r\n\r\n  const getCategory = () => {\r\n   fetchCategory(slug).then ( (res) =>\r\n          {\r\n          setName(res.data.name)\r\n          setImgURL(res.data.imgURL)\r\n          });\r\n     }\r\n\r\n  const addRoute= ()=> {\r\n   return(\"/admin/categories/categoriescreate\");\r\n  } \r\n\r\n  \r\n  const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      setLoading(true);\r\n      editCategory(slug,{name: name, imgURL: imgURL}, user.token)\r\n      .then ( (res) => {\r\n        setLoading(false);\r\n        setName(\"\");\r\n        setImgURL(\"\");\r\n        toast.success(`${res.data.name} is updated successfully`);  \r\n             \r\n      })\r\n      .catch (err => {\r\n        console.log(err);\r\n        setLoading(false);\r\n        if(err.response===400) \r\n           toast.error(err.response.data);\r\n        else\r\n            toast.error(err.response);\r\n      })\r\n  }    \r\n  \r\n   return (\r\n   <div className= \"row\">\r\n     <div className= \"col col-md-3\" >\r\n        <AdminNav />\r\n     </div> \r\n     <div className= \"col col-md-6\">\r\n     <AdminMenu \r\n        addRoute= {addRoute()} \r\n      />\r\n       <section className= \"vendor-center\"> \r\n      {loading ? <h1>Loading....</h1> \r\n               : <h1 className=\"card-header font-weight-bold\" > Edit Categories </h1>\r\n      }\r\n      <div className = \"card  mb-2\" >\r\n        <div className= \" card-body mb-1 \" >  \r\n        <CategoriesForm \r\n        handleSubmit = {handleSubmit}\r\n        name= {name}\r\n        setName= {setName}\r\n        imgURL= {imgURL}\r\n        setImgURL= {setImgURL}\r\n      />\r\n              \r\n        </div>\r\n       </div>\r\n      </section>\r\n      </div>\r\n    </div>   \r\n  );\r\n}\r\n\r\nexport default CategoriesEdit;\r\n\r\n\r\n\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Categories\\CategoriesList.js",["721","722","723"],"import React, {useState, useEffect} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AdminNav from \"../../navigation/AdminNav\";\r\nimport AdminMenu from \"../AdminMenu\";\r\nimport {EditOutlined, DeleteOutlined} from \"@ant-design/icons\";\r\nimport { fetchCategories } from \"../../../actions/category\";\r\nimport SearchBar from \"../../utils/searchBar\";\r\n\r\n\r\nconst CategoriesList = () =>\r\n{    \r\nconst [categories, setCategories] = useState([]);\r\nconst [loading, setLoading] = useState(false);\r\nconst [keyword, setKeyword] = useState(\"\");\r\n\r\n useEffect( () => {        \r\n      getCategories()\r\n    },[]);\r\n\r\nconst getCategories = async () => {\r\n   setLoading(true);\r\n   fetchCategories().then( (res) => setCategories(res.data));\r\n   setLoading(false);\r\n}\r\n\r\n const addRoute= () => {\r\n  return(\"/admin/categories/categoriescreate\");\r\n }\r\n\r\n \r\n const searchValue= (keyword) => (res) => res.name.toLowerCase().includes(keyword);\r\n \r\n const renderList = () => \r\n {\r\n    return (categories.filter(searchValue(keyword)).map( category =>\r\n    {\r\n     \r\n      {if(category.name)\r\n        return (                   \r\n          <div className= \"row\"  key= {category._id}>            \r\n              <div className= \"col col-md-4 mb-2  category\" >\r\n              {category.name}\r\n              </div>\r\n              <div className= \"col col-md-4 mb-2 category\">\r\n              {category.imgURL}\r\n              </div>\r\n              <div className= \"col-md-2 mb-1\">\r\n              <Link to= {`/admin/categories/categoriesedit/${category.slug}`} \r\n                 className= \"btn btn-primary  mr-1 \"><EditOutlined/>\r\n              </Link>\r\n              <Link to= {`/admin/categories/categoriesdelete/${category.slug}`} \r\n                        className= \"btn btn-danger mr-1 \"><DeleteOutlined/>\r\n              </Link>\r\n              </div>\r\n            </div>                    \r\n        )\r\n      }  \r\n    })\r\n      )\r\n}\r\n\r\n return (\r\n     <div className= \"row\" >\r\n       <div className= \"col col-md-2\">\r\n        <AdminNav />\r\n       </div>  \r\n       <div className = \"col col-md-9 category\">  \r\n         <AdminMenu\r\n            addRoute= {addRoute()}\r\n         />\r\n       { (!categories) \r\n          ? <h2>Loading.....</h2>  \r\n          : <h2 className= \"card-header font-weight-bold mt-2\">Categories</h2>\r\n       }\r\n\r\n       <SearchBar\r\n          keyword= {keyword}\r\n          setKeyword = {setKeyword}\r\n         />\r\n\r\n       <div className= \"container-fluid category-center\"> \r\n       <div className = \" row\">  \r\n        <div className= \" col col-md-4\">     \r\n            <h5 className= \"float-center font-weight-bold\"> Category Name</h5>\r\n        </div>\r\n        <div className = \"col col-md-4\">\r\n             <h5 className= \"float-center font-weight-bold\">  Image URL</h5>\r\n       </div>\r\n       </div> \r\n       </div>\r\n        <form>         \r\n           {renderList()}\r\n         </form>\r\n   </div>\r\n   </div>\r\n           \r\n )\r\n}\r\n\r\nexport default CategoriesList;\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Subcategories\\SubcategoriesCreate.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Categories\\CategoriesDelete.js",["724","725"],"import React, {useEffect, useState} from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { fetchCategories,deleteCategory} from \"../../../actions/category\";\r\nimport AdminMenu from \"../AdminMenu\";\r\nimport Modal from \"../../Modal\";\r\nimport history from \"../../../history\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\nconst CategoriesDelete = (props) =>\r\n{\r\n   const {user} = useSelector( state => ({...state}));\r\n   const [loading, setLoading] = useState(false);\r\n   const [categories, setCategories] = useState([]);\r\n   const slug = props.match.params.slug;\r\n\r\n   useEffect( () => {\r\n       getCategories();\r\n   }, [] );\r\n\r\n   const getCategories = () => {\r\n      fetchCategories().then ( (res) => setCategories(res.data));\r\n   }\r\n\r\n   const addRoute= () => {\r\n     return(\"/admin/categories/categoriescreate\");\r\n   } \r\n  \r\n   const handleDelete = () => {\r\n      setLoading(true);\r\n      deleteCategory(slug, user.token)\r\n      .then ( res => {\r\n          setLoading(false);\r\n          toast.success(`Category deleted successfully: ${slug}`);\r\n          getCategories();           \r\n      })\r\n      .catch ( (err) => {\r\n             console.log(err);\r\n             setLoading(false);\r\n             if(err.response===400) \r\n                  toast.error(err.response.data);\r\n             else\r\n                  toast.error(err.message);\r\n         });\r\n   }\r\n\r\n    const renderActions = () => {\r\n       \r\n      return (\r\n         <React.Fragment>\r\n         <button onClick= { () => {handleDelete()}    } \r\n            type=\"submit\" className=\" btn btn-danger primary-button mr-3\">Yes</button>\r\n         <Link to= \"/admin/categories/categoriesList\" \r\n               type=\"button\" className= \"btn btn-secondary primary-button\">No</Link>\r\n         </React.Fragment>\r\n         );\r\n    }\r\n\r\n    const renderContent= () => {\r\n       \r\n       if(!slug) {\r\n          return (\"Are you sure you want to delete this category?\");\r\n       }\r\n          return(`Are you sure you want to delete the category: ${slug}`);\r\n      }\r\n   \r\n   return(\r\n   <div>\r\n       <AdminMenu  \r\n        addRoute= {addRoute()}\r\n        />         \r\n        <Modal \r\n            title= \"Delete a Category\"\r\n            content= {renderContent()}\r\n            actions= {renderActions()}\r\n            onDismiss = {() => history.push(\"/admin/categories/categorieslist\") }\r\n         />\r\n    </div>    \r\n     );\r\n}\r\n\r\nexport default CategoriesDelete;\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Subcategories\\SubcategoriesList.js",["726","727","728","729"],"import React, {useState, useEffect} from \"react\";\r\nimport { Link} from \"react-router-dom\";\r\nimport AdminNav from \"../../navigation/AdminNav\";\r\nimport {fetchCategories, fetchCategoriesName} from \"../../../actions/category\";\r\nimport {fetchSubcategories} from \"../../../actions/subcategory\";\r\nimport {EditOutlined, DeleteOutlined} from \"@ant-design/icons\";\r\nimport SearchBar from \"../../utils/searchBar\";\r\nimport AdminMenu from \"../AdminMenu\";\r\n\r\nconst  SubcategoriesList = () =>\r\n{\r\n\r\n  const [category, setCategory] = useState([]);\r\n  const [sub, setSub] = useState([]);\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n\r\n  useEffect(() => {\r\n     getCategories();\r\n     getSubcategories();\r\n  }, []);\r\n\r\n  const getCategories= () => {\r\n    fetchCategories().then( (cat) => setCategory(cat.data));\r\n  }\r\n\r\n  const getSubcategories= () => {\r\n    fetchSubcategories().then( (subcat) => setSub(subcat.data));\r\n   }\r\n\r\n\r\n const addRoute= () => {\r\n    return(\"/admin/subcategories/subcategoriescreate\");\r\n }\r\n\r\n const searchValue= (keyword) => (res) => res.name.toLowerCase().includes(keyword);\r\n\r\n const renderList= () => \r\n {    \r\n    return (      \r\n       sub.filter(searchValue(keyword)).map( subcategory => \r\n       {\r\n        { if (subcategory._id)  \r\n            return (\r\n                <div className= \"row\" key= {subcategory._id}>                  \r\n                 <div className= \"col col-md-4 category\">                  \r\n                      {subcategory.category.name} \r\n                 </div>\r\n                  <div className= \"col col-md-4 text-align-right category\">\r\n                      {subcategory.name}\r\n                  </div>                  \r\n                  <div className= \"col-md-4 mb-1\">\r\n                      <Link to= {`/admin/subcategories/subcategoriesedit/${subcategory.slug}`} \r\n                                   className= \"btn btn-primary  mr-1 \">\r\n                                   <EditOutlined /></Link>\r\n                      <Link to= { `/admin/subcategories/subcategoriesdelete/${subcategory.slug}`}\r\n                            className= \"btn btn-danger mr-1\">\r\n                            <DeleteOutlined /></Link>    \r\n                   </div>\r\n                 </div>\r\n                 )        }       \r\n        })    \r\n    )}\r\n\r\n\r\n  return(\r\n    <div className= \"row\">\r\n      <div className= \"col-md-2\">\r\n          <AdminNav />\r\n      </div>\r\n\r\n      <div className= \"col-md-9\" >\r\n         <AdminMenu \r\n             addRoute = {addRoute()}\r\n        />\r\n      \r\n       { (!sub) ? <h2>Loading.....</h2> \r\n                   :<h2  className= \"card-header font-weight-bold mt-2\">Sub Categories</h2> \r\n       }\r\n\r\n       <SearchBar\r\n          keyword= {keyword}\r\n          setKeyword = {setKeyword}\r\n         />\r\n        <div className= \"container category-center\"> \r\n        <div className= \"row mb-2\">\r\n        <div className = \"col col-md-4\">\r\n            <h5 className= \"font-weight-bold\"> Category </h5>\r\n        </div>\r\n         <div className = \"col col-md-4 \">\r\n             <h5 className= \"font-weight-bold\">  Sub Category </h5>\r\n       </div>\r\n       </div> \r\n       <form>   \r\n         {renderList()}\r\n       </form>\r\n      </div>\r\n      </div>\r\n    </div>\r\n\r\n  )  \r\n}\r\n\r\nexport default SubcategoriesList;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Subcategories\\SubcategoriesDelete.js",["730"],"import React, {useEffect, useState} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport AdminMenu from \"../AdminMenu\";\r\nimport { fetchSubcategories, deleteSubcategory} from \"../../../actions/subcategory\";\r\nimport Modal from \"../../Modal\";\r\nimport history from \"../../../history\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst SubcategoriesDelete = (props) =>  {\r\n    \r\n    const {user} = useSelector( state => ({...state}));\r\n    const [loading, setLoading] = useState(false);\r\n    const [subcats, setSubcats] = useState([]);\r\n    const slug= props.match.params.slug;\r\n\r\n    console.log(\"Slug\",props.match.params);\r\n\r\n    useEffect( () => {\r\n        getSubcats();\r\n    }, [] );\r\n \r\n\r\n    const getSubcats= () => {\r\n        fetchSubcategories().then ((res) => setSubcats(res.data));\r\n    }   \r\n     \r\n    const addRoute = () => {\r\n         return(\"/admin/subcategories/subcategoriescreate\");\r\n     }\r\n\r\n     const renderContent= () => {       \r\n             if(!subcats) {\r\n               return (\"Are you sure you want to delete this subcategory?\");\r\n            }\r\n               return(`Are you sure you want to delete the subcategory: ${slug}`);\r\n       }\r\n    \r\n     const handleDelete= () => {\r\n         setLoading(true);\r\n         deleteSubcategory(slug, user.token)\r\n         .then( (res) => {\r\n             setLoading(false);\r\n             toast.success(`Sub catgeory deleted successfully: ${slug}`);\r\n             getSubcats();\r\n         } )\r\n         .catch( (err) => {\r\n             setLoading(false);\r\n             console.log(err);\r\n             if(err.response===400) \r\n                  toast.error(err.response.data);\r\n             else\r\n                  toast.error(err.message);       \r\n         }); \r\n     }\r\n\r\n     const renderActions= () => {\r\n        return (\r\n             <React.Fragment>\r\n              <button onClick= { handleDelete}\r\n                      type=\"submit\" \r\n                      className=\" btn btn-danger primary-button mr-3\">Yes</button> \r\n             <Link to= \"/admin/subcategories/subcategoriesList\" type=\"button\" className= \"btn btn-secondary primary-button\">No</Link>\r\n             </React.Fragment>\r\n            );\r\n     }\r\n          \r\n        return (\r\n         <div>           \r\n             <AdminMenu \r\n                 addRoute = {addRoute()}\r\n             /> \r\n          <Modal \r\n            title= \"Delete a SubCategory\"\r\n            content= {renderContent()}\r\n            actions= {renderActions()}\r\n            onDismiss = {() => history.push(\"/admin/subcategories/subcategorieslist\") }\r\n         /> \r\n         </div>\r\n        )\r\n    }\r\n\r\nexport default SubcategoriesDelete;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Subcategories\\SubcategoriesEdit.js",["731","732","733"],"import _ from \"lodash\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  fetchSubcategory,\r\n  editSubcategory,\r\n} from \"../../../actions/subcategory\";\r\nimport { fetchCategories } from \"../../../actions/category\";\r\nimport AdminMenu from \"../AdminMenu\";\r\nimport AdminNav from \"../../navigation/AdminNav\";\r\nimport SubcategoriesForm from \"./SubcategoriesForm\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst SubcategoriesEdit = ({ match, history }) => {\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n  const [category, setCategory] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const slug = match.params.slug;\r\n\r\n  useEffect(() => {\r\n    getSubcat();\r\n  }, []);\r\n\r\n  const getSubcat = () => {\r\n    fetchSubcategory(slug).then((res) => {\r\n      console.log(\"value from res\", res.data);\r\n      setCategory(res.data.category);\r\n      setName(res.data.name);\r\n    });\r\n  };\r\n\r\n  const addRoute = () => {\r\n    return \"/admin/subcategories/subcategoriescreate\";\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    console.log(\"VALUES from subcat\", slug, category, name);\r\n    editSubcategory(slug, { name: name, category: category }, user.token)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        setName(\"\");\r\n        toast.success(`Subcategory updated successfully:${res.data.name}`);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoading(false);\r\n        if (err.response === 400) toast.error(err.response.data);\r\n        else toast.error(err.response);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col col-md-2\">\r\n        <AdminNav />\r\n      </div>\r\n      <div className=\"col col-md-9\">\r\n        <AdminMenu addRoute={addRoute()} />\r\n\r\n        {loading ? (\r\n          <h1>Loading......</h1>\r\n        ) : (\r\n          <h1 className=\"category-head font-weight-bold card-header\">\r\n            Edit Sub Categories{\" \"}\r\n          </h1>\r\n        )}\r\n        {console.log(\"category from subcat\", category, name)}\r\n        <div className=\"card  mb-2\">\r\n          <div className=\" card-body mb-1 \">\r\n            <SubcategoriesForm\r\n              handleSubmit={handleSubmit}\r\n              category={category}\r\n              setCategory={setCategory}\r\n              name={name}\r\n              setName={setName}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubcategoriesEdit;\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Questions\\QuestionsCreate.js",["734"],"import React, {useState} from \"react\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport AdminNav from \"../../navigation/AdminNav\";\r\nimport AdminMenu from \"../AdminMenu\";\r\nimport QuestionsForm from \"./QuestionsForm\";\r\nimport { addQuestion } from \"../../../actions/questions\";\r\n\r\n\r\nconst QuestionsCreate = () => {\r\n\r\n  const {user} = useSelector( state => ({...state}));\r\n  const [question,setQuestion]= useState(\"\");\r\n  const [options,setOptions]= useState([]);\r\n  const [loading,setLoading]= useState(false);\r\n\r\nconst addRoute= () => {\r\n    return(\"/admin/questions/questionscreate\");\r\n}\r\n\r\nconst handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      setLoading(true);\r\n      addQuestion({question,options},user.token)\r\n      .then( (res) =>         \r\n      {\r\n        setLoading(false);\r\n        setQuestion(\"\");\r\n        setOptions(\"\");\r\n        toast.success(\"Question is created successfully!!!!\");\r\n      })\r\n      .catch(err => {\r\n           console.log(err);\r\n           toast.error(\"Category creation failed !!!!!\");\r\n          }            \r\n         )\r\n       }\r\n\r\n       \r\n      return (             \r\n        <div className= \"row\">\r\n        <div className= \"col col-md-2\">\r\n          <AdminNav />\r\n        </div>\r\n        <div className= \"col col-md-10\">\r\n        <AdminMenu\r\n          addRoute= {addRoute}\r\n         /> \r\n         { (loading) ? <h2>Loading...</h2>\r\n           : <h2 className=\"category-head font-weight-bold card-header\">Add Questions </h2> \r\n         }         \r\n          <QuestionsForm\r\n             handleSubmit = {handleSubmit}\r\n             question= {question}\r\n             setQuestion= {setQuestion}\r\n             options= {options}\r\n             setOptions= {setOptions}\r\n           /> \r\n          </div>       \r\n        </div>\r\n    )\r\n  }\r\n\r\n\r\nexport default QuestionsCreate;\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Questions\\QuestionsList.js",["735","736","737"],"import React, {useState,useEffect, Fragment} from \"react\";\r\nimport AdminMenu from \"../AdminMenu\";\r\nimport {connect} from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {fetchQuestions} from \"../../../actions/questions\";\r\nimport AdminNav from \"../../navigation/AdminNav\";\r\nimport categoryReducer from \"../../../reducers/categoryReducer\";\r\nimport {EditOutlined, DeleteOutlined} from \"@ant-design/icons\";\r\n\r\nconst QuestionsList = () =>\r\n{\r\n  \r\n  const [questions, setQuestions] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect( () => {\r\n      getQuestions(); \r\n  }, []);\r\n\r\n  const getQuestions= () => {\r\n    setLoading(true);\r\n    fetchQuestions()\r\n    .then( (res) => setQuestions(res.data));  \r\n    setLoading(false);    \r\n  }\r\n\r\n    const addRoute= () =>  {\r\n        return(\"/admin/questions/questionscreate\");\r\n       }\r\n\r\n    const renderList= () => {\r\n        return (   \r\n          questions && questions.map( questionVal => {        \r\n          return (         \r\n            <div className= \"row mt-1\" key= {questionVal._id}>                    \r\n            <div className= \"col col-md-6 question\" >\r\n             <p > {questionVal.question}</p>  \r\n            </div>\r\n            <div className= \"col col-md-3 question\" > \r\n              {questionVal.options && questionVal.options.map( optionVal => {\r\n                 return(                              \r\n                  <p key= {optionVal.option} >{optionVal}</p>             \r\n                 )\r\n             }) \r\n             }                 \r\n             </div>    \r\n             <div className= \" col col-md-3 float-right \">\r\n                      <Link to= {`/admin/questions/questionsedit/${questionVal._id}`}\r\n                                   className= \"btn btn-primary  mr-1\">\r\n                                   <EditOutlined />\r\n                       </Link>\r\n                      <Link to= { `/admin/questions/questionsdelete/${questionVal._id}`} \r\n                            className= \"btn btn-danger mr-1\">\r\n                            <DeleteOutlined /></Link>    \r\n             </div> \r\n                </div> \r\n          )          \r\n                \r\n        }) \r\n              \r\n       ) \r\n    }\r\n    \r\n    \r\n    return (\r\n     <div> \r\n      \r\n      <div className= \"row\">\r\n       <div className= \"col col-md-2\">\r\n         <AdminNav />\r\n       </div>\r\n       <div className= \"col col-md-9\">\r\n       <AdminMenu\r\n            addRoute = {addRoute()}\r\n           />\r\n        { (loading) ? <h2>Loading....</h2>      \r\n                   :<h2 className= \"font-weight-bold\">List Questions </h2> \r\n      } \r\n       <div className= \"container mt-2\" > \r\n       <div className = \"row p-3 bg-light \">\r\n          <div className= \"col col-md-6 \">\r\n            <h5 className= \"font-weight-bold text-left\"> Question</h5>           \r\n          </div>\r\n           <div className= \"col col-md-3\">\r\n            <h5 className= \"font-weight-bold text-left\"> Options</h5>             \r\n            </div>\r\n         </div>\r\n        <div className= \"card\">        \r\n          <form>\r\n             {renderList()}\r\n          </form>          \r\n       </div> \r\n       </div>\r\n       </div>\r\n     </div> \r\n     </div>\r\n    )}\r\n\r\n\r\nexport default QuestionsList;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Questions\\QuestionsEdit.js",["738","739","740"],"import _ from \"lodash\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport { useSelector} from \"react-redux\";\r\nimport {toast, ToastContainer} from \"react-toastify\";\r\nimport { editQuestion, fetchQuestion} from \"../../../actions/questions\";\r\nimport AdminMenu from \"../AdminMenu\";\r\nimport QuestionsForm from \"./QuestionsForm\";\r\n\r\nconst QuestionsEdit = ({match}) => {\r\n\r\n    const {user} = useSelector( (state) => ({...state}));\r\n    const [question,setQuestion] = useState(\"\");\r\n    const [options,setOptions] = useState([]);\r\n    const [loading,setLoading] = useState(false);\r\n    \r\n   useEffect( () => {\r\n      loadQuestion();\r\n   },[]);\r\n\r\n   const loadQuestion= () => {\r\n       setLoading(true);\r\n       fetchQuestion(match.params.id)\r\n       .then ( (res) => {\r\n           setQuestion(res.data.question);\r\n           setOptions(res.data.options);\r\n           setLoading(false);\r\n       })\r\n       .catch ( (err) => {\r\n           console.log(err);\r\n           setLoading(false);\r\n           toast.error(`Could not find the question record:${err.message}`);\r\n       });\r\n   }\r\n    \r\n    const addRoute =() => {\r\n        return(\"/admin/questions/questionscreate\");\r\n     } \r\n\r\n    const handleSubmit = (e) => {\r\n       e.preventDefault();\r\n       setLoading(true);\r\n       editQuestion(match.params.id,\r\n                {question: question.question, options: question.options},\r\n                 user.token) \r\n       .then ( (res) => {\r\n           setLoading(false);\r\n           setQuestion(\"\");\r\n           setOptions(\"\");\r\n           toast.success(`${res.data.question} has been updated successfully!!!!`);\r\n       })\r\n       .catch (err => {\r\n           console.log(err);\r\n           setLoading(false);\r\n           if(err.response===400) \r\n              toast.error(err.response.data);\r\n           else\r\n              toast.error(err.response);\r\n       });\r\n    }\r\n        \r\n     return (\r\n        <div>\r\n           <AdminMenu \r\n             addRoute= {addRoute()}\r\n           />\r\n           { loading ? <h2>Loading....</h2>\r\n                     : <h2 className=\"category-head font-weight-bold card-header\">Edit Question</h2>\r\n           }\r\n\r\n       <QuestionsForm  \r\n        // initialValues =  { _.pick(this.props.questions, \"question\", \"options\")}\r\n        handleSubmit= {handleSubmit}\r\n        question= {question} \r\n        setQuestion= {setQuestion} \r\n        options= {options} \r\n        setOptions= {setOptions}          \r\n        />          \r\n       </div>        \r\n       )\r\n    }\r\n\r\nexport default QuestionsEdit;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Categories\\CategoriesCreate.js",["741"],"import React, {useState} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {useSelector} from \"react-redux\";\r\nimport AdminNav from \"../../navigation/AdminNav\";\r\nimport { addCategory} from \"../../../actions/category\";\r\nimport AdminMenu from \"../AdminMenu\";\r\nimport { toast } from \"react-toastify\";\r\nimport CategoriesForm from \"./CategoriesForm\";\r\n\r\nconst CategoriesCreate = () =>\r\n{\r\n  const {user} = useSelector( state => ({...state}));\r\n  const [name,setName] = useState(\"\");\r\n  const [imgURL, setImgURL] = useState(\"\");\r\n  const [loading,setLoading] = useState(false);\r\n  \r\n\r\n   const addRoute= () => {\r\n    return(\"/admin/categories/categoriescreate\");\r\n   } \r\n\r\n   \r\n   const handleSubmit= (e) => {\r\n            e.preventDefault();\r\n            setLoading(true);\r\n            addCategory({name: name, imgURL: imgURL}, user.token)\r\n            .then ( (res) => {\r\n             setLoading(false);\r\n             setName(\"\");\r\n             setImgURL(\"\");\r\n             toast.success(`Successfully created ${res.data.name}`);\r\n            })\r\n            .catch (err => {\r\n              console.log(err);\r\n              setLoading(false);\r\n              if(err.response===400) \r\n                 toast.error(err.response.data);\r\n              else\r\n                  toast.error(err.response);\r\n            })\r\n   }\r\n    \r\n  \r\n   return(\r\n    <div className= \"row\"> \r\n  \r\n     <div className= \"col col-md-3\" >\r\n        <AdminNav />\r\n     </div> \r\n     <div className= \"col col-md-6\">\r\n       <AdminMenu \r\n        addRoute= {addRoute()} />  \r\n      <section className= \"vendor-center\">  \r\n\r\n      { loading ? <h2>Loading....</h2> \r\n                : <h2 className=\"card-header font-weight-bold\" > Add New Categories </h2>  }    \r\n       \r\n       <div className = \"card  mb-2\" >\r\n     <div className= \" card-body mb-1 \" >   \r\n      <CategoriesForm \r\n        handleSubmit = {handleSubmit}\r\n        name= {name}\r\n        setName= {setName}\r\n        imgURL= {imgURL}\r\n        setImgURL= {setImgURL}\r\n      />\r\n    </div>\r\n    </div>\r\n   </section>\r\n   </div> \r\n   </div>  \r\n   \r\n  );\r\n}\r\n\r\nexport default CategoriesCreate;\r\n\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\VendorCategories.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Questions\\QuestionsDelete.js",["742","743"],"import React, {useState, useEffect} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { fetchQuestion, deleteQuestion, fetchQuestions } from \"../../../actions/questions\";\r\nimport AdminMenu from \"../AdminMenu\";\r\nimport Modal from \"../../Modal\";\r\nimport history from \"../../../history\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst QuestionsDelete = ({match}) => {\r\n\r\n   const {user} = useSelector( state => ({...state}));\r\n   const [questions, setQuestions] = useState([]);\r\n   const [question, setQuestion] = useState(\"\");\r\n   const [loading, setLoading] = useState(false);\r\n\r\n   useEffect( () => {\r\n      getQuestions();\r\n      getQuestion();      \r\n   },[]);\r\n\r\n   const getQuestions= () => {\r\n        fetchQuestions().then ( (qs) => setQuestions(qs.data));\r\n   }\r\n\r\n   const getQuestion = () => {\r\n      fetchQuestion(match.params.id)\r\n      .then ( (q) => setQuestion(q.data))\r\n      .catch( (err) => {\r\n         console.log(err);\r\n         setLoading(false);\r\n         if(err.response===400) \r\n            toast.error(err.response.data);\r\n          else\r\n            toast.error(err.message);\r\n      })\r\n   } \r\n\r\n const addRoute= () => {\r\n        return(\"/admin/questions/questionscreate\");\r\n }\r\n\r\n const handleDelete= () => {\r\n    deleteQuestion(match.params.id, user.token)\r\n   .then ( (res) => {\r\n      setLoading(false);\r\n      toast.success(`Question deleted successfully for ${match.params.id}`);\r\n      getQuestions();\r\n   })\r\n   .catch( (err) => {\r\n      console.log(err);\r\n      setLoading(false);\r\n      if(err.response===400) \r\n         toast.error(err.response.data);\r\n       else\r\n         toast.error(err.message);\r\n   })\r\n }\r\n\r\nconst renderActions= () => {\r\n    return (\r\n       <React.Fragment>\r\n       <button onClick= { handleDelete()} type=\"submit\" className=\" btn btn-danger primary-button mr-3\">Yes</button>\r\n       <Link to= \"/admin/questions/questionsList\" type=\"button\" className= \"btn btn-secondary primary-button\">No</Link>\r\n       </React.Fragment>\r\n       );\r\n  }\r\n\r\n\r\nconst renderContent= () => {\r\n    if(! question) {\r\n       return (\"Are you sure you want to delete this question?\");\r\n    }\r\n       return(`Are you sure you want to delete the question: ${question.question}`);\r\n }  \r\n\r\n  return (\r\n    <div>\r\n    <AdminMenu \r\n       addRoute = {addRoute()} \r\n    />  \r\n     { loading ?  <h2>\"Loading.....\" </h2>  \r\n     :\r\n    <Modal \r\n      title= \"Delete a Question\"     \r\n      content= {renderContent()}\r\n      actions= {renderActions()}\r\n      onDismiss = {() => history.push(\"/admin/categories/categorieslist\") }\r\n    />\r\n     }\r\n    </div>\r\n   )     \r\n}\r\n\r\n\r\nexport default QuestionsDelete;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\SubcategoryQuestions\\SubcategoryQuestionsCreate.js",["744","745","746","747","748","749","750","751"],"import React, {useState, useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport AdminMenu from \"../AdminMenu\";\r\nimport SubcategoryQuestionsForm from \"./SubcategoryQuestionsForm\";\r\nimport { addSubcatQuestion } from \"../../../actions/subcatquestions\";\r\n\r\n\r\nconst SubcategoryQuestionsCreate = () => {\r\n\r\n    const [subquestions,setSubquestions] = useState(\"\");\r\n    const [loader,setLoader] = useState(false);\r\n\r\n\r\n\r\n   const addRoute= () => {\r\n        return(\"/admin/subcatquestions/subcatquestionscreate\");\r\n      }\r\n\r\n    const  onSubmit = (formValues) => {\r\n          console.log(\"From ONSUBMIT in subcat questions create\",this.props);\r\n          this.props.addSubcatQuestion(formValues);         \r\n      }\r\n\r\n  \r\n        return (\r\n            <div>\r\n               <AdminMenu \r\n                addRoute= {addRoute()}\r\n               />\r\n               <h2 className=\"category-head font-weight-bold card-header\"> Add New Subcategory Questions</h2> \r\n               <SubcategoryQuestionsForm \r\n                   onSubmit= {onSubmit}\r\n               />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n       return  { formValues: state.form.subcatQuestionsForm }   \r\n}\r\n\r\nexport default SubcategoryQuestionsCreate;\r\n\r\n\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\SubcategoryQuestions\\SubcategoryQuestionsEdit.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\SubcategoryQuestions\\SubcategoryQuestionsList.js",["752","753","754","755"],"import React, {useState, useEffect} from \"react\" ;\r\nimport {connect} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport AdminMenu from \"../AdminMenu\";\r\nimport AdminNav from \"../../navigation/AdminNav\";\r\nimport {EditOutlined, DeleteOutlined} from \"@ant-design/icons\";\r\nimport { fetchSubcatQuestions } from \"../../../actions/subcatquestions\";\r\n\r\nconst SubcategoryQuestionList = () => {\r\n\r\n  const [subcatquestions, setSubcatquestions]= useState([]);\r\n  const [loading, setLoading]= useState(false);\r\n\r\n  useEffect( () => {\r\n      loadSubcatQuestions();\r\n  }, []);\r\n\r\n  const loadSubcatQuestions= () => {\r\n    setLoading(true);\r\n    fetchSubcatQuestions().then( res => setSubcatquestions(res.data));\r\n    setLoading(false);\r\n  }\r\n   \r\n   const  addRoute= () => {\r\n        return(\"/admin/subcatquestions/subcatquestionscreate\");\r\n    }\r\n\r\n    const renderList= () => {\r\n     \r\n        return (           \r\n            subcatquestions && subcatquestions.map( subquestionval => {\r\n\r\n            {if (subquestionval._id)\r\n            return (\r\n                <div className= \"row\" key= {subquestionval.category._id} >\r\n                  <div className= \"col col-md-2 category text-left\" >\r\n                    <p > {subquestionval.category.name}</p>\r\n                  </div>\r\n                   {/* <div className= \"col col-md-2 category text-left\" key= {subquestionval.subcategory._id}>                   \r\n                     <p > {subquestionval.subcategory.name}</p> \r\n                  </div>  */}\r\n                  <div className= \"col col-md-4 category text-left\">\r\n\r\n                   {subquestionval.questions.map(questionval => {\r\n                    return (                    \r\n                    <div className= \" category text-align-center\" key= {questionval. _id}>                     \r\n                        <p className= \"font-weight-bold\" >  {questionval.question}</p>  \r\n                        \r\n                        {questionval.options.map(optionval => {\r\n                        return(\r\n                     <div className= \"options\" key= {optionval} >\r\n                          <p >   {optionval}</p>\r\n                      </div>  \r\n                        )}\r\n                        )}                 \r\n                    </div>                    \r\n                    ) \r\n                  }\r\n                  )}       \r\n\r\n                  </div>  \r\n\r\n                  <div className= \"col-md-4 mb-1\">\r\n                      <Link to= {`/admin/subcatquestions/subcatquestionsedit/${subquestionval._id}`}  \r\n                                 className= \"btn btn-primary  mr-1 \"><EditOutlined /></Link>\r\n                      <Link to= {`/admin/subcatquestions/subcatquestionsdelete/${subquestionval._id}`} \r\n                                 className= \"btn btn-danger mr-1 \"><DeleteOutlined /></Link>    \r\n                   </div>      \r\n                               \r\n                 </div>\r\n            )\r\n                }\r\n            }) \r\n           )}             \r\n\r\n\r\n    \r\n        return(\r\n           <div className=\"row\">\r\n             <div className= \"col col-md-2\">\r\n                <AdminNav />\r\n             </div>\r\n             <div className= \"col col-md-10 category\">\r\n               <AdminMenu \r\n                   addRoute= {addRoute}\r\n               />   \r\n               { loading ? <h2>Loading....</h2>\r\n                         : <h2 className=\"category-head font-weight-bold \"> Subcategory Questions </h2>\r\n               }          \r\n               <div className= \"container\" > \r\n              <div className = \"row p-3 bg-light \">\r\n               <div className= \"col col-md-2 \">\r\n                 <h5 className= \"font-weight-bold text-left\"> Category</h5>           \r\n               </div>\r\n               <div className= \"col col-md-2\">\r\n                <h5 className= \"font-weight-bold text-left mr-2\"> Sub Category</h5>             \r\n               </div>\r\n               <div className= \"col col-md-4\">\r\n                <h5 className= \"font-weight-bold text-align-left mr-2\"> Questions/ Options</h5>             \r\n               </div>\r\n               \r\n         </div>               \r\n          <form>\r\n            {/* {JSON.stringify(subcatquestions)} */}\r\n              {renderList()}             \r\n          </form>          \r\n       </div> \r\n       </div>\r\n     </div>\r\n  ) }\r\n\r\n\r\nexport default SubcategoryQuestionList;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Timeslot\\TimeslotCreate.js",["756","757"],"import React, {useState,useEffect} from \"react\";\r\nimport {toast} from \"react-toastify\";\r\nimport AdminNav from \"../../navigation/AdminNav\";\r\nimport {addTimeslot} from \"../../../actions/timeslot\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst TimeslotCreate= () => {\r\n\r\n   const {user} = useSelector( state => ({...state}));\r\n   const [startslot, setStartslot] = useState(\"\");\r\n   const [endslot, setEndslot] = useState(\"\");\r\n   const [loading,setLoading]= useState(false);\r\n   \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        addTimeslot({startslot,endslot},user.token)\r\n        .then ( (res) => {\r\n            setLoading(false);\r\n            setStartslot(\"\");\r\n            setEndslot(\"\");\r\n            toast.success(`Successfully created timeslot`);\r\n           })\r\n           .catch (err => {\r\n             console.log(err);\r\n             setLoading(false);\r\n             if(err.response===400) \r\n                toast.error(err.response.data);\r\n             else\r\n                 toast.error(err.response);\r\n           })\r\n      };\r\n        \r\n    return ( \r\n \r\n        <div className= \"row mt-5\">\r\n        <div className= \"col col-md-3\" >\r\n          <AdminNav />\r\n        </div>         \r\n         <div className= \"col col-md-8 mt-2\">\r\n         <h1 className= \"font-weight-bold d-flex justify-content-center mb-4\">Add New Timeslots</h1>\r\n         <form onSubmit= {handleSubmit}>\r\n         <div className=\"row d-flex justify-content-center mb-4\">\r\n         <div className=\"col col-md-3\">\r\n           <input \r\n             type=\"text\"\r\n             name=\"startslot\"\r\n             className= \"form-control\"\r\n             placeholder= \"Start Slot\" \r\n                onChange= {(e) => setStartslot(e.target.value)}\r\n                value= {startslot}   \r\n                autoFocus         \r\n            />\r\n          </div>\r\n           <div className=\"col col-md-3\">\r\n            <input \r\n             type=\"text\"\r\n             name=\"endslot\"\r\n             className= \"form-control\"\r\n             placeholder= \"End Slot\" \r\n                onChange= {(e) => setEndslot(e.target.value)}\r\n                value= {endslot} \r\n             />  \r\n            </div> \r\n            </div>       \r\n           <div className= \" d-flex justify-content-center mt-3  \">\r\n             <button type=\"submit\" className = \"btn btn-primary font-weight-bold \" name=\"timeslot\">Save</button>  \r\n           </div>  \r\n         </form>        \r\n        \r\n        </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default TimeslotCreate;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\SubcategoryQuestions\\SubcategoryQuestionsDelete.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Timeslot\\TimeSlotList.js",["758"],"import React, {useState,useEffect} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AdminNav from \"../../navigation/AdminNav\";\r\nimport AdminMenu from \"../AdminMenu\";\r\nimport {EditOutlined, DeleteOutlined} from \"@ant-design/icons\";\r\nimport {fetchTimeslots} from \"../../../actions/timeslot\";\r\n\r\nconst TimeslotList= () => {\r\n\r\n    const [timeslots,setTimeslots] = useState([]);\r\n    const [loading,setLoading] = useState(false);\r\n\r\n    useEffect( () => {\r\n      loadTimeslots();\r\n    },[]);\r\n\r\n    const loadTimeslots= async () => {\r\n        setLoading(true);\r\n        fetchTimeslots().then( (res) => setTimeslots(res.data));\r\n        setLoading(false);\r\n    }\r\n\r\n    const addRoute= () => {\r\n        return(\"/admin/timeslot/timeslotcreate\");\r\n    }\r\n\r\n      const renderSlots= () => (\r\n      timeslots && timeslots.map( (t) => \r\n             (\r\n                <div className=\"row\" key= {t._id}>\r\n                 <div className= \"col col-md-4 category mb-2\">\r\n                     {t.startSlot}\r\n                 </div>\r\n                 <div className= \"col col-md-4 category mb-2\">\r\n                     {t.endSlot}\r\n                 </div>\r\n                 <div className= \"col-md-2 mb-1\">\r\n                <Link to= {`/admin/timeslot/editslot/${t._id}`} \r\n                  className= \"btn btn-primary  mr-1 \"><EditOutlined/>\r\n                </Link>\r\n                 <Link to= {`/admin/timeslot/deleteslot/${t._id}`} \r\n                        className= \"btn btn-danger mr-1 \"><DeleteOutlined/>\r\n                 </Link>\r\n              </div>\r\n                </div>\r\n            )\r\n        )\r\n    )\r\n\r\n    return (\r\n        <div className= \"row\">\r\n          <div className= \"col col-md-2\">\r\n              <AdminNav />\r\n           </div> \r\n           <div className= \"col col-md-9\">\r\n              <AdminMenu\r\n                addRoute= {addRoute()}\r\n             />\r\n         { (!timeslots) \r\n          ? <h2>Loading.....</h2>  \r\n          : <h2 className= \"card-header font-weight-bold mt-2\">Timeslots</h2>\r\n           }\r\n           <div className=\"container-fluid category-center\">\r\n           <div className=\"row\">\r\n             <div className= \"col col-md-4\">\r\n               <h5 className=\"font-weight-bold d-flex justify-content-center\">Start Slot</h5> \r\n             </div>\r\n             <div className= \"col col-md-4\">\r\n                <h5 className=\"font-weight-bold d-flex justify-content-center\">End Slot</h5>\r\n             </div>\r\n           </div>\r\n\r\n            <form>\r\n               {renderSlots()}\r\n             </form>\r\n           </div>\r\n            \r\n              \r\n           </div>\r\n         \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TimeslotList;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Timeslot\\TimeslotDelete.js",["759","760","761"],"import React, {useState,useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport AdminMenu from \"../AdminMenu\";\r\nimport Modal from \"../../Modal\";\r\nimport history from \"../../../history\";\r\nimport { toast } from \"react-toastify\";\r\nimport {fetchTimeslots, deleteTimeslot} from \"../../../actions/timeslot\";\r\n\r\nconst TimeslotDelete= (props) => {\r\n\r\n  const {user} = useSelector( state => ({...state}));\r\n  const [loading, setLoading] = useState(false);\r\n  const [timeslots, setTimeslots] = useState([]);\r\n  const id = props.match.params.id;\r\n\r\n  {console.log(\"PROPS\",props.match.params)}\r\n\r\n  useEffect( () => {\r\n    getTimeslots();\r\n }, [] );\r\n\r\nconst getTimeslots = () => {\r\n   fetchTimeslots().then ( (res) => setTimeslots(res.data));\r\n}\r\n\r\n  const addRoute = () => {\r\n    return(\"/admin/timeslot/timeslotcreate\");\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    setLoading(true);\r\n    deleteTimeslot(id, user.token)\r\n    .then ( res => {\r\n        setLoading(false);\r\n        toast.success(`Timeslot deleted successfully`);\r\n        getTimeslots();           \r\n    })\r\n    .catch ( (err) => {\r\n           console.log(err);\r\n           setLoading(false);\r\n           if(err.response===400) \r\n                toast.error(err.response.data);\r\n           else\r\n                toast.error(err.message);\r\n       });\r\n }\r\n\r\n  const renderActions = () => {\r\n       \r\n    return (\r\n      <React.Fragment>\r\n       <button onClick= { () => {handleDelete()}    } \r\n          type=\"submit\" className=\" btn btn-danger primary-button mr-3\">Yes</button>\r\n       <Link to= \"/admin/timeslot/listslots\" \r\n             type=\"button\" className= \"btn btn-secondary primary-button\">No</Link>\r\n       </React.Fragment>\r\n       );\r\n  }\r\n\r\n  const renderContent= () => {\r\n       \r\n    if(!id) {\r\n       return (\"Are you sure you want to delete this timeslot?\");\r\n    }\r\n       return(`Are you sure you want to delete the timeslot`);\r\n   }\r\n\r\n    return (\r\n\r\n        <div>\r\n          <AdminMenu  \r\n            addRoute= {addRoute()}\r\n          />         \r\n          <Modal \r\n            title= \"Delete a Timeslot\"\r\n            content= {renderContent()}\r\n            actions= {renderActions()}\r\n            onDismiss = {() => history.push(\"/admin/timeslot/listslots\") }\r\n         />\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default TimeslotDelete;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Timeslot\\TimeslotEdit.js",["762","763","764","765"],"import React, {useState,useEffect} from \"react\";\r\nimport {editTimeslot, fetchTimeslot} from \"../../../actions/timeslot\";\r\nimport {useSelector} from \"react-redux\";\r\nimport AdminMenu from \"../AdminMenu\";\r\nimport AdminNav from \"../../navigation/AdminNav\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst TimeslotEdit= ({match}) => {\r\n\r\n    const {user} = useSelector( state => ({...state}));\r\n    const [startslot,setStartslot] = useState(\"\");\r\n    const [endslot, setEndslot] = useState(\"\");\r\n    const [loading,setLoading] = useState(false);\r\n\r\n    const id= match.params.id;\r\n\r\n    useEffect( () => {\r\n       loadTimeslot(); \r\n    },[]);\r\n\r\n    const loadTimeslot= () => {\r\n        fetchTimeslot(id).then ( (res) => \r\n        {\r\n            setStartslot(res.data.startSlot)\r\n            setEndslot(res.data.endSlot)\r\n        })\r\n    }\r\n\r\n    const addRoute= ()=> {\r\n        return(\"/admin/categories/categoriescreate\");\r\n     } \r\n\r\n     const handleSubmit= (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        editTimeslot(id,{startSlot: startslot, endSlot: endslot },user.token)\r\n        .then ( res => {\r\n            setLoading(false);\r\n            toast.success(`timeslot is updated successfully`);  \r\n            setStartslot(\"\");\r\n            setEndslot(\"\");            \r\n        }).catch (err => {\r\n            console.log(err);\r\n            setLoading(false);\r\n            if(err.response===400) \r\n               toast.error(err.response.data);\r\n            else\r\n                toast.error(err.response);\r\n          })\r\n     }\r\n\r\n    return ( \r\n \r\n        <div className= \"row mt-5\">\r\n        <div className= \"col col-md-3\" >\r\n          <AdminNav />\r\n        </div>         \r\n         <div className= \"col col-md-8 mt-2\">\r\n         <h1 className= \"font-weight-bold d-flex justify-content-center mb-4\">Edit Timeslots</h1>\r\n         <form onSubmit= {handleSubmit}>\r\n         <div className=\"row d-flex justify-content-center mb-4\">\r\n         <div className=\"col col-md-3\">\r\n           <input \r\n             type=\"text\"\r\n             name=\"startslot\"\r\n             className= \"form-control\"\r\n             placeholder= \"Start Slot\" \r\n                onChange= {(e) => setStartslot(e.target.value)}\r\n                value= {startslot}   \r\n                autoFocus         \r\n            />\r\n          </div>\r\n           <div className=\"col col-md-3\">\r\n            <input \r\n               type=\"text\"\r\n               name=\"endslot\"\r\n               className= \"form-control\"\r\n                placeholder= \"End Slot\" \r\n                onChange= {(e) => setEndslot(e.target.value)}\r\n                value= {endslot} \r\n             />  \r\n            </div> \r\n            </div>       \r\n           <div className= \" d-flex justify-content-center mt-3  \">\r\n             <button type=\"submit\" className = \"btn btn-primary font-weight-bold \" name=\"timeslot\">Edit</button>  \r\n           </div>  \r\n         </form>        \r\n        \r\n        </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default TimeslotEdit;\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Area\\AreaLoad.js",["766"],"import React, {useState} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {addArea} from \"../../../actions/area\";\r\n\r\nconst AreaLoad = () => {\r\n\r\n  const {user} = useSelector( state => ({...state}));\r\n  const [areas, setAreas] = useState([]);\r\n  const [loading,setLoading] = useState(false);\r\n\r\n  const submitAreas= (e) => {\r\n      e.preventDefault();\r\n      addArea(user.token)\r\n      .then (res => {\r\n        setLoading(true);\r\n        setAreas(res.data); \r\n        setLoading(false);\r\n      }     \r\n      )}\r\n\r\n\r\n  return (\r\n   <div  className= \"row\">\r\n     <div className= \"col col-md-12 d-flex justify-content-center mb-5\">\r\n           <button type=\"submit\" \r\n                   className= \"btn btn-primary  mt-5\"\r\n                   onClick= {submitAreas}\r\n           > { loading ? <h5>Loading Areas....</h5>\r\n                       :<h5 className=\"font-weight-bold\">UPLOAD AREAS</h5>\r\n            }\r\n           </button>\r\n     </div>\r\n\r\n   </div>\r\n  )\r\n\r\n}\r\n\r\nexport default AreaLoad;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Area\\ListAreas.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\pages\\Checkout.js",["767","768","769","770","771","772","773","774","775"],"import react, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { emptyUserCart, getuserCart } from \"../../actions/user\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport keys from \"../../config/keys\";\r\nimport { getSessionId } from \"../../actions/stripe\";\r\nimport { assign } from \"lodash\";\r\n\r\nconst Checkout = ({ history }) => {\r\n  const [vendors, setVendors] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n  const [name, setName] = useState([]);\r\n\r\n  const { user, cart } = useSelector((state) => ({ ...state }));\r\n  const dispatch = useDispatch();\r\n\r\n  const getCartTotal = () => {\r\n    return cart.reduce((currentValue, nextValue) => {\r\n      return currentValue + nextValue.count * nextValue.price;\r\n    }, 0);\r\n  };\r\n\r\n  // const cartval= cart[0].subcategories\r\n\r\n  console.log(\"VALUE OF CART\", cart);\r\n\r\n  useEffect(() => {\r\n    getuserCart(user.token).then((res) => {\r\n      setVendors(res.data.vendors);\r\n      setTotal(res.data.cartTotal);\r\n    });\r\n  }, []);\r\n\r\n  const emptyCart = () => {\r\n    //remove from local storage\r\n    if (typeof window !== \"undefined\") {\r\n      localStorage.removeItem(\"cart\");\r\n    }\r\n    //remove from redux\r\n    dispatch({\r\n      type: \"ADD_TO_CART\",\r\n      payload: [],\r\n    });\r\n    // remove from backend\r\n    emptyUserCart(user.token).then((res) => {\r\n      setVendors([]);\r\n      setTotal(0);\r\n      toast.success(\"Cart is empty. Continue shopping...\");\r\n      window.setTimeout(function () {\r\n        window.location.assign(\"/cart\");\r\n      }, 1000);\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"FROM CHECKOUT\", user.token, vendors[0].vendor.userId);\r\n    const res = await getSessionId(user.token, vendors[0].vendor.userId);\r\n    console.log(\"SESSION ID\", res.data.sessionId);\r\n    const stripe = await loadStripe(keys.REACT_APP_STRIPE_KEY);\r\n    stripe\r\n      .redirectToCheckout({\r\n        sessionId: res.data.sessionId,\r\n      })\r\n      .then((result) => console.log(\"RESULT\", result));\r\n  };\r\n\r\n  return (\r\n    // <div classNameName=\"row d-flex justify-content-center\">\r\n    //    <div classNameName= \"col col-md-6 \">\r\n    //      <h4>Order Summary</h4>\r\n\r\n    //      <hr />\r\n    //      <h4>Helpers - {vendors.length}</h4>\r\n    //      <hr />\r\n    //      <h4>Selected Helpers</h4>\r\n    //      {vendors.map((v, i) => (\r\n    //        <div key= {i}>\r\n    //          <b classNameName=\"d-flex content-align-center h6\"> {v.vendor.vendorInfoId.name} [{v.vendor.subcategories[0].name}] X {v.count} = {v.vendor.price}</b>\r\n\r\n    //        </div>\r\n    //      ))}\r\n    //      <hr />\r\n    //      <p classNameName= \"font-weight-bold h6\">Cart Total: {total}</p>\r\n\r\n    //      <div classNameName=\"row\">\r\n    //          <div classNameName=\"col col-md-6 mt-2\">\r\n    //            <button classNameName=\"btn btn-primary mt-3\"\r\n    //                   disabled= { !vendors.length}\r\n    //                   onClick= {handleSubmit}\r\n    //             >Place Order</button>\r\n    //          </div>\r\n    //          <div classNameName=\"col col-md-6 mt-4\">\r\n    //            <button classNameName=\"btn btn-primary\"\r\n    //                    disabled= {!vendors.length}\r\n    //                    onClick= {emptyCart}\r\n    //            >Empty Cart</button>\r\n    //          </div>\r\n\r\n    //      </div>\r\n    //   </div>\r\n\r\n    // </div>\r\n    <div style={{ bgcolor: \"#f3f3f3\" }}>\r\n      <table\r\n        bgcolor=\"#f3f3f3\"\r\n        border={0}\r\n        cellPadding={0}\r\n        cellSpacing={10}\r\n        className=\"body-table\"\r\n        style={{ height: \"100%\", width: \"100%\" }}\r\n      >\r\n        <tbody>\r\n          <tr>\r\n            <td align=\"center\" valign=\"center\" style={{ padding: \"2rem\" }}>\r\n              <table\r\n                bgcolor=\"white\"\r\n                border={0}\r\n                cellPadding={0}\r\n                cellSpacing={0}\r\n                className=\"email-container\"\r\n                style={{\r\n                  borderRadius: \"3px\",\r\n                  boxShadow:\r\n                    \"rgba(50, 50, 93, 0.25) 0px 13px 27px -5px, rgba(0, 0, 0, 0.3) 0px 8px 16px -8px\",\r\n                  WebkitBorderRadius: \"3px\",\r\n                  MozBorderRadius: \"3px\",\r\n                  textRendering: \"optimizeLegibility\",\r\n                  WebkitFontSmoothing: \"antialiased\",\r\n                  MozOsxFontSmoothing: \"grayscale\",\r\n                }}\r\n                width={600}\r\n              >\r\n                <tbody>\r\n                  <tr>\r\n                    <td\r\n                      align=\"center\"\r\n                      valign=\"top\"\r\n                      style={{ paddingBottom: \"1rem\" }}\r\n                    >\r\n                      <br />\r\n                      <table\r\n                        bgcolor=\"#ffffff\"\r\n                        border={0}\r\n                        cellPadding={0}\r\n                        cellSpacing={0}\r\n                        className=\"body\"\r\n                        style={{\r\n                          borderRadius: \"3px\",\r\n                          WebkitBorderRadius: \"3px\",\r\n                          MozBorderRadius: \"3px\",\r\n                          color: \"#595959\",\r\n                          fontFamily: \"Open Sans, Helvetica, sans-serif\",\r\n                        }}\r\n                        width=\"94%\"\r\n                      >\r\n                        <tbody>\r\n                          <tr>\r\n                            <td align=\"center\" valign=\"top\">\r\n                              <table\r\n                                border={0}\r\n                                cellPadding={8}\r\n                                cellSpacing={0}\r\n                                className=\"row-blank\"\r\n                                width=\"100%\"\r\n                              >\r\n                                <tbody>\r\n                                  <tr>\r\n                                    <td />\r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                              <table\r\n                                border={0}\r\n                                cellPadding={0}\r\n                                cellSpacing={0}\r\n                                className=\"title\"\r\n                                style={{\r\n                                  fontSize: \"21px\",\r\n                                  textTransform: \"uppercase\",\r\n                                }}\r\n                                width=\"100%\"\r\n                              >\r\n                                <tbody>\r\n                                  <tr>\r\n                                    <td align=\"center\" valign=\"top\">\r\n                                      Order Summary - &pound;{total}\r\n                                    </td>\r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                              <table\r\n                                border={0}\r\n                                cellPadding={8}\r\n                                cellSpacing={0}\r\n                                className=\"row-blank\"\r\n                                width=\"100%\"\r\n                              >\r\n                                <tbody>\r\n                                  <tr>\r\n                                    <td />\r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                            </td>\r\n                          </tr>\r\n\r\n                          <tr>\r\n                            <td align=\"center\" valign=\"top\">\r\n                              <table\r\n                                border={0}\r\n                                cellPadding={0}\r\n                                cellSpacing={0}\r\n                                className=\"order-info\"\r\n                                style={{ fontSize: \"13px\" }}\r\n                                width=\"92%\"\r\n                              >\r\n                                <tbody>\r\n                                  <tr>\r\n                                    <td align=\"center\" valign=\"top\">\r\n                                      Vendor\r\n                                    </td>\r\n                                    <td align=\"center\" valign=\"top\">\r\n                                      Category\r\n                                    </td>\r\n                                    <td align=\"center\" valign=\"top\">\r\n                                      Booking Date\r\n                                    </td>\r\n                                    <td align=\"center\" valign=\"top\">\r\n                                      Time Slot\r\n                                    </td>\r\n                                    <td align=\"center\" valign=\"top\">\r\n                                      Price\r\n                                    </td>\r\n                                  </tr>\r\n                                  {cart.map((cartItem, l) =>\r\n                                    cartItem.bookingSlots.map((c, i) => (\r\n                                      <tr\r\n                                        key={i}\r\n                                        style={{\r\n                                          textTransform: \"uppercase\",\r\n                                          fontWeight: \"bold\",\r\n                                          color: \"#888888\",\r\n                                        }}\r\n                                      >\r\n                                        <td\r\n                                          align=\"center\"\r\n                                          style={{ color: \"#30ada5\" }}\r\n                                          valign=\"top\"\r\n                                        >\r\n                                          {cartItem.vendorInfoId.name}\r\n                                        </td>\r\n                                        <td align=\"center\" valign=\"top\">\r\n                                          {cartItem.subcategories[0].name}\r\n                                        </td>\r\n                                        <td align=\"center\" valign=\"top\">\r\n                                          {c.tsday}\r\n                                        </td>\r\n                                        <td align=\"center\" valign=\"top\">\r\n                                          {c.tstimeslot[0].startSlot} -{\" \"}\r\n                                          {c.tstimeslot[0].endSlot}\r\n                                        </td>\r\n                                        <td align=\"center\" valign=\"top\">\r\n                                          {cartItem.price}\r\n                                        </td>\r\n                                      </tr>\r\n                                    ))\r\n                                  )}\r\n                                </tbody>\r\n                              </table>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                              <table\r\n                                border={0}\r\n                                cellPadding={12}\r\n                                cellSpacing={0}\r\n                                className=\"row-blank\"\r\n                                width=\"100%\"\r\n                              >\r\n                                <tbody>\r\n                                  <tr>\r\n                                    <td />\r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                              <table\r\n                                border={0}\r\n                                cellPadding={0}\r\n                                cellSpacing={0}\r\n                                className=\"title\"\r\n                                style={{\r\n                                  fontSize: \"16px\",\r\n                                  textTransform: \"uppercase\",\r\n                                }}\r\n                                width=\"100%\"\r\n                              >\r\n                                <tbody>\r\n                                  <tr>\r\n                                    <td align=\"center\" valign=\"top\">\r\n                                      Your Order\r\n                                    </td>\r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                              <table\r\n                                border={0}\r\n                                cellPadding={8}\r\n                                cellSpacing={0}\r\n                                className=\"row-blank\"\r\n                                width=\"100%\"\r\n                              >\r\n                                <tbody>\r\n                                  <tr>\r\n                                    <td />\r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                            </td>\r\n                          </tr>\r\n\r\n                          <tr>\r\n                            <td align=\"center\" valign=\"top\">\r\n                              <table\r\n                                border={0}\r\n                                cellPadding={0}\r\n                                cellSpacing={0}\r\n                                className=\"order-summary\"\r\n                                width=\"94%\"\r\n                              >\r\n                                <tbody>\r\n                                  <tr>\r\n                                    <td align=\"center\" valign=\"top\">\r\n                                      <table\r\n                                        border={0}\r\n                                        cellPadding={0}\r\n                                        cellSpacing={0}\r\n                                        style={{ fontSize: \"13px\" }}\r\n                                        width=\"100%\"\r\n                                      >\r\n                                        <thead>\r\n                                          <tr>\r\n                                            <td\r\n                                              align=\"center\"\r\n                                              colSpan={4}\r\n                                              style={{\r\n                                                fontWeight: \"bold\",\r\n                                              }}\r\n                                              valign=\"center\"\r\n                                              width=\"100%\"\r\n                                            />\r\n                                          </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                          {/* /artwork item start */}\r\n                                          {cart.map((cartItem, l) =>\r\n                                            cartItem.bookingSlots.map(\r\n                                              (c, i) => (\r\n                                                <tr>\r\n                                                  <td\r\n                                                    align=\"center\"\r\n                                                    valign=\"top\"\r\n                                                  >\r\n                                                    <img\r\n                                                      height={120}\r\n                                                      src={\r\n                                                        cartItem.images[0].url\r\n                                                      }\r\n                                                      style={{\r\n                                                        marginRight: \"8px\",\r\n                                                        marginBottom: \"0.6rem\",\r\n                                                      }}\r\n                                                      width={120}\r\n                                                    />\r\n                                                  </td>\r\n                                                  <td\r\n                                                    align=\"center\"\r\n                                                    valign=\"top\"\r\n                                                  >\r\n                                                    <table>\r\n                                                      <tbody>\r\n                                                        <tr>\r\n                                                          <td\r\n                                                            align=\"left\"\r\n                                                            style={{\r\n                                                              fontWeight:\r\n                                                                \"bold\",\r\n                                                              fontSize: \"16px\",\r\n                                                            }}\r\n                                                            valign=\"top\"\r\n                                                          >\r\n                                                            <span>\r\n                                                              {\r\n                                                                cartItem\r\n                                                                  .subcategories[0]\r\n                                                                  .name\r\n                                                              }\r\n                                                            </span>\r\n                                                          </td>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                          <td>\r\n                                                            <span>By </span>\r\n                                                            <span>\r\n                                                              {\r\n                                                                cartItem\r\n                                                                  .vendorInfoId\r\n                                                                  .name\r\n                                                              }\r\n                                                            </span>\r\n                                                          </td>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                          <td>\r\n                                                            <span>\r\n                                                              {c.tsday}\r\n                                                            </span>\r\n                                                          </td>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                          <td\r\n                                                            align=\"left\"\r\n                                                            style={{\r\n                                                              color: \"#30ada5\",\r\n                                                              fontWeight:\r\n                                                                \"bold\",\r\n                                                            }}\r\n                                                            valign=\"top\"\r\n                                                          >\r\n                                                            <span>\r\n                                                              {\r\n                                                                c.tstimeslot[0]\r\n                                                                  .startSlot\r\n                                                              }{\" \"}\r\n                                                              -{\" \"}\r\n                                                              {\r\n                                                                c.tstimeslot[0]\r\n                                                                  .endSlot\r\n                                                              }\r\n                                                            </span>\r\n                                                          </td>\r\n                                                        </tr>\r\n                                                      </tbody>\r\n                                                    </table>\r\n                                                  </td>\r\n                                                  <td\r\n                                                    align=\"center\"\r\n                                                    valign=\"top\"\r\n                                                  >\r\n                                                    <table>\r\n                                                      <tbody>\r\n                                                        <tr>\r\n                                                          <td\r\n                                                            align=\"left\"\r\n                                                            style={{\r\n                                                              fontWeight:\r\n                                                                \"bold\",\r\n                                                              fontSize: \"16px\",\r\n                                                            }}\r\n                                                            valign=\"top\"\r\n                                                          >\r\n                                                            <span></span>\r\n                                                          </td>\r\n                                                        </tr>\r\n                                                        <tr>\r\n                                                          <td\r\n                                                            align=\"center\"\r\n                                                            rowSpan={4}\r\n                                                            valign=\"center\"\r\n                                                          >\r\n                                                            <table>\r\n                                                              <tbody>\r\n                                                                <tr>\r\n                                                                  <td\r\n                                                                    align=\"center\"\r\n                                                                    height={80}\r\n                                                                    style={{\r\n                                                                      backgroundColor:\r\n                                                                        \"#30ada5\",\r\n                                                                      color:\r\n                                                                        \"#ffffff\",\r\n                                                                      borderRadius:\r\n                                                                        \"50%\",\r\n                                                                      fontWeight:\r\n                                                                        \"bold\",\r\n                                                                      fontSize:\r\n                                                                        \"16px\",\r\n                                                                      minWidth:\r\n                                                                        \"80px\",\r\n                                                                      minHeight:\r\n                                                                        \"80px\",\r\n                                                                    }}\r\n                                                                    valign=\"center\"\r\n                                                                    width={80}\r\n                                                                  >\r\n                                                                    <span>\r\n                                                                      &pound;\r\n                                                                      {\r\n                                                                        cartItem.price\r\n                                                                      }\r\n                                                                    </span>\r\n                                                                  </td>\r\n                                                                </tr>\r\n                                                              </tbody>\r\n                                                            </table>\r\n                                                          </td>\r\n                                                        </tr>\r\n                                                      </tbody>\r\n                                                    </table>\r\n                                                  </td>\r\n                                                </tr>\r\n                                              )\r\n                                            )\r\n                                          )}\r\n                                          <tr>\r\n                                            <td>\r\n                                              <table\r\n                                                border={0}\r\n                                                cellPadding={8}\r\n                                                cellSpacing={0}\r\n                                                className=\"row-blank\"\r\n                                                width=\"100%\"\r\n                                              >\r\n                                                <tbody>\r\n                                                  <tr>\r\n                                                    <td />\r\n                                                  </tr>\r\n                                                </tbody>\r\n                                              </table>\r\n                                            </td>\r\n                                          </tr>\r\n                                          <tr>\r\n                                            <td\r\n                                              align=\"center\"\r\n                                              colSpan={4}\r\n                                              style={{\r\n                                                fontWeight: \"bold\",\r\n                                                border: \"2px solid #f3f3f3\",\r\n                                              }}\r\n                                              valign=\"center\"\r\n                                              width=\"100%\"\r\n                                            />\r\n                                          </tr>\r\n                                          {/* /artwork item end */}\r\n                                        </tbody>\r\n                                      </table>\r\n                                    </td>\r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td>\r\n                              <table\r\n                                border={0}\r\n                                cellPadding={12}\r\n                                cellSpacing={0}\r\n                                className=\"row-blank\"\r\n                                width=\"100%\"\r\n                              >\r\n                                <tbody>\r\n                                  <tr>\r\n                                    <td />\r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                            </td>\r\n                          </tr>\r\n                          <tr>\r\n                            <td align=\"center\" valign=\"top\">\r\n                              <table\r\n                                style={{\r\n                                  display: \"flex\",\r\n                                  justifyContent: \"center\",\r\n                                }}\r\n                                border={0}\r\n                                cellPadding={0}\r\n                                cellSpacing={0}\r\n                                className=\"btn\"\r\n                                width=\"100%\"\r\n                              >\r\n                                <tbody>\r\n                                  <tr>\r\n                                    <td\r\n                                      align=\"center\"\r\n                                      className=\"btn\"\r\n                                      valign=\"center\"\r\n                                      disabled={!vendors.length}\r\n                                      onClick={handleSubmit}\r\n                                    >\r\n                                      <a\r\n                                        className=\"link btn\"\r\n                                        href=\"#\"\r\n                                        style={{\r\n                                          fontSize: \"13px\",\r\n                                          fontWeight: \"bold\",\r\n                                          fontFamily: \"Open Sans, sans-serif\",\r\n                                          color: \"#ffffff\",\r\n                                          textDecoration: \"none\",\r\n                                          borderRadius: \"3px\",\r\n                                          WebkitBorderRadius: \"3px\",\r\n                                          MozBorderRadius: \"3px\",\r\n                                          backgroundColor: \"#23A455\",\r\n                                          borderTop: \"16px solid #23A455\",\r\n                                          borderBottom: \"16px solid #23A455\",\r\n                                          borderRight: \"22px solid #23A455\",\r\n                                          borderLeft: \"22px solid #23A455\",\r\n\r\n                                          display: \"unset !important\",\r\n                                        }}\r\n                                      >\r\n                                        Place order\r\n                                      </a>\r\n                                    </td>\r\n                                    <td\r\n                                      align=\"center\"\r\n                                      className=\"btn\"\r\n                                      valign=\"center\"\r\n                                      disabled={!vendors.length}\r\n                                      onClick={emptyCart}\r\n                                    >\r\n                                      <a\r\n                                        className=\"link btn\"\r\n                                        href=\"#\"\r\n                                        style={{\r\n                                          fontSize: \"13px\",\r\n                                          fontWeight: \"bold\",\r\n                                          fontFamily: \"Open Sans, sans-serif\",\r\n                                          color: \"#ffffff\",\r\n                                          textDecoration: \"none\",\r\n                                          borderRadius: \"3px\",\r\n                                          WebkitBorderRadius: \"3px\",\r\n                                          MozBorderRadius: \"3px\",\r\n                                          backgroundColor: \"red\",\r\n                                          borderTop: \"16px solid red\",\r\n                                          borderBottom: \"16px solid red\",\r\n                                          borderRight: \"22px solid red\",\r\n                                          borderLeft: \"22px solid red\",\r\n                                          display: \"unset !important\",\r\n                                        }}\r\n                                      >\r\n                                        Empty cart\r\n                                      </a>\r\n                                    </td>\r\n                                  </tr>\r\n                                </tbody>\r\n                              </table>\r\n                              <br />\r\n                            </td>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\pages\\Payment.js",["776","777"],"import React from \"react\";\r\nimport {loadStripe} from \"@stripe/stripe-js\";\r\nimport {Elements} from \"@stripe/react-stripe-js\";\r\nimport keys from \"../../config/keys\";\r\nimport \"../../stripe.css\";\r\nimport StripeCheckout from \"../stripe/StripeCheckout\";\r\n\r\nconst promise= loadStripe(keys.REACT_APP_STRIPE_KEY)\r\n\r\nconst Payment= () => {\r\n\r\n    return (\r\n\r\n        <div className= \"container p-5\">\r\n          <h4>Complete your payment</h4>\r\n          {console.log(\"IN stripe payment\")}\r\n          <div className= \"col col-md-8 offset-md-2\">\r\n            <StripeCheckout />\r\n         </div>\r\n                  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Payment;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\pages\\BookVendor.js",["778","779","780","781","782","783","784"],"import React, {useState, useEffect} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {fetchTimeslots} from \"../../actions/timeslot\";\r\nimport {fetchVendorCalendar, fetchVendorCalendarVend} from \"../../actions/vendorCalendar\";\r\nimport SelectCalendar from \"../booking/SelectCalendar\";\r\n\r\nconst BookVendor = ({match}) => {\r\n\r\n    const [timeslots, setTimeslots] = useState([]);\r\n    const [vendorCal, setVendorCal] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    {console.log(\"MATCH\", match.params.id)}\r\n    useEffect( () => {\r\n        setLoading(true);\r\n        fetchTimeslots()\r\n        .then ( (res) => setTimeslots(res.data));\r\n        setLoading(false);\r\n    },[]);\r\n    \r\n    useEffect( () => {\r\n       setLoading(true);\r\n       fetchVendorCalendarVend(match.params.id)\r\n       .then ( (res) => setVendorCal(res.data));\r\n       setLoading(false);\r\n    },[]);\r\n\r\n\r\n    {console.log(\"VENDORCAL\",vendorCal)}\r\n    const renderList = () => (\r\n         vendorCal && vendorCal.map ( vc => {\r\n         return (\r\n               <div className= \"row\" key= {vc._id}>\r\n                 <div className= \"col col-md-3\">\r\n                    {vc.availability[0].start}   \r\n                 </div>\r\n                 <div className= \"col col-md-3\">\r\n                    {vc.availability[0].end}   \r\n                 </div>\r\n                  <p>{vc.availability.endSlot}</p>                     \r\n              </div>\r\n            )\r\n         }\r\n         )         \r\n    )\r\n\r\n       \r\n    return (\r\n      <div className= \"container-fluid category-center\">\r\n       <div className= \"row d-flex justify-content-center mb-2\">\r\n        { loading ? <h2>Loading....</h2>\r\n                  : <h6 className= \"font-weight-bold \">Select a date to Check Vendor Availability</h6>\r\n        }\r\n        \r\n         <div className= \"row\">\r\n          <div className= \"col col-md-12 mt-2\">\r\n          <form>\r\n\r\n            <SelectCalendar \r\n              vendor= {match.params.id} /> \r\n           {/* {renderList()}  */}\r\n           </form>\r\n            \r\n         </div>\r\n         </div>\r\n\r\n       </div>\r\n       </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default BookVendor;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\drawer\\SideDrawer.js",["785","786","787"],"import react from \"react\";\r\nimport {Drawer,Button} from \"antd\";\r\nimport {useSelector,useDispatch} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst SideDrawer= () => {\r\n\r\n    const dispatch= useDispatch();\r\n\r\n    const {cart,drawer} = useSelector( (state) => ({...state}));\r\n\r\n    return (\r\n\r\n        <Drawer \r\n          title={`Cart / ${cart.length} Helpers`}\r\n          onClose= { () => {\r\n            dispatch({\r\n              type: \"SET_VISIBLE\",\r\n              payload:false\r\n          });\r\n        }} visible={drawer} >\r\n           { cart.map( (c) => (\r\n            <div className=\"row\" key= {c._id}>\r\n               <div className=\"col\">\r\n                {c.images[0] ? \r\n                <>               \r\n                <img src= {c.images[0].url}\r\n                  style= {{ width:\"100%\", height:\"60px\",objectFit:\"cover\"}}\r\n                />                   \r\n                <p className=  \"bg-secondary font-weight-bold\">{c.vendorInfoId.name} x {c.count}</p> \r\n                </>\r\n                : \r\n                <>\r\n                \"No image\"\r\n                <p className= \"background-secondary font-weight-bold\">{c.vendorInfoId.name} x {c.count}</p> \r\n                </>\r\n                } \r\n              </div>   \r\n             \r\n            </div>\r\n           ))}\r\n           <Link to=\"/cart\">\r\n           <button className= \"btn btn-primary btn-raised btn-block\"\r\n                   onClick= { () => \r\n                     dispatch({\r\n                         type: \"SET_VISIBLE\",\r\n                         payload:false\r\n                   })  \r\n                   }\r\n           >\r\n              Go To Cart\r\n           </button>\r\n           </Link>\r\n        </Drawer>\r\n    )\r\n\r\n}\r\n\r\nexport default SideDrawer;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\booking\\SelectTimeslot.js",["788","789","790","791","792","793","794","795","796"],"import React, {useState, useEffect} from \"react\";\r\nimport { List, Card } from \"antd\";\r\nimport {useSelector,useDispatch} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {fetchTimeslots} from \"../../actions/timeslot\";\r\nimport moment from \"moment\";\r\nimport RenderTimeslot from \"./RenderTimeslot\";\r\nimport _ from \"lodash\";\r\nimport { fetchVendorCalendarDate } from \"../../actions/vendorCalendar\";\r\nimport {getVendorCategory} from \"../../actions/vendor\";\r\n\r\nconst SelectTimeslot = ({match}) => {\r\n  \r\n   {console.log(\"Selected Date XXXX\", match.params.vendor, match.params.selectedvalue)}\r\n\r\n    const {dayval,timeslotsval} = useSelector( (state) => ({...state}));\r\n    const [ timeslots, setTimeslots] = useState([]);\r\n    const [currentslots,setCurrentslots] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [tooltip, setTooltip] = useState('Click to add');\r\n    const [vendata,setVendata] = useState(\"\");\r\n\r\n  \r\n    const days= [];\r\n    \r\n    const dispatch = useDispatch();\r\n    let noOfDays= 6;\r\n    let startDate= moment(match.params.selectedvalue);\r\n    let endDate= moment(startDate).add(noOfDays, 'days'); \r\n\r\n    console.log(\"End date XXXX\",endDate._d);\r\n\r\n    useEffect( () => {\r\n        setLoading(true);\r\n        fetchTimeslots().then( res => setTimeslots(res.data));\r\n        setLoading(false);\r\n    },[]);\r\n\r\n    useEffect( () => {\r\n       setLoading(true);\r\n       fetchVendorCalendarDate(match.params.vendor,startDate,endDate._d)\r\n       .then( res => setCurrentslots(res.data));\r\n       setLoading(false);\r\n    },[]);\r\n\r\n    useEffect( () => {\r\n      getVendorCategory(match.params.vendor)\r\n      .then ( res => setVendata(res.data));\r\n  },[]);\r\n\r\n   const fetchDates= () => {\r\n       for (let i=0; i< noOfDays; i++) {\r\n         days.push( moment(startDate).add(i, 'days').format('DD/MM/YYYY'));\r\n       }\r\n    };\r\n\r\n    \r\n   \r\n   {console.log(\"VENDOR FROM SELECT VENDOR\", match.params)}\r\n   {console.log(\"Vendor NNNN\",dayval.dayval)} \r\n\r\n    const newdate= moment(dayval.dayval,\"DD-MM-YYYY\");\r\n    const handleSubmit= (e,timeslot,index,day) => {\r\n      e.preventDefault();\r\n      {console.log(\"VALUES FROM SLOT\",e,index,timeslot,day,match.params.vendor,match.params.selectedValue)}\r\n       let cart = [];\r\n      //check if the cart already has an item\r\n      if ( typeof window !== \"undefined\") {\r\n        if (localStorage.getItem(\"cart\")) {\r\n          cart= JSON.parse(localStorage.getItem(\"cart\"))\r\n        }\r\n        cart.push({\r\n          ...vendata,\r\n          bookingDate: moment(newdate).format(\"YYYY-MM-DD\"),\r\n          bookingSlots:timeslotsval.timeslotsval,\r\n          count: timeslotsval.timeslotsval.length\r\n        })\r\n        let unique=_.uniqWith(cart,_.isEqual);\r\n         console.log(\"VALUE OF CART\",unique);\r\n           localStorage.setItem(\"cart\",JSON.stringify(unique));\r\n           setTooltip(\"Added\");\r\n\r\n        //add to redux store\r\n        dispatch({\r\n          type: \"ADD_TO_CART\",\r\n          payload:unique\r\n        });\r\n        dispatch({\r\n          type: \"SET_VISIBLE\",\r\n          payload:true\r\n        });\r\n       }\r\n     }  \r\n\r\n  return (\r\n   <form  onSubmit= {handleSubmit}>\r\n    <div className= \"row\">\r\n      {fetchDates()}\r\n      {console.log(\"CALDATE\",days)}\r\n      {days && days.map ( day => (\r\n       <div className= \"col col-md-2 d-flex justify-content-center\" key={day}>\r\n        <Card   title= {day} >\r\n         {timeslots && timeslots.map ( (timeslot,index) => (\r\n            <RenderTimeslot \r\n              timeslotval= {timeslot}\r\n              index={index}\r\n              key={index}\r\n              day={day}  \r\n              currentslots= {currentslots}                     \r\n            />            \r\n         ))\r\n         }\r\n        </Card>\r\n       </div>\r\n      ))\r\n      }\r\n      <div className= \"col col-md-6 mt-2 d-flex justify-content-end\">\r\n        <button className= \"btn btn-primary \"                   \r\n                type= \"submit\"\r\n        >Add To Cart</button>\r\n      </div>\r\n      <div className= \"col col-md-6 mt-2 d-flex justify-content-start\">\r\n        <Link to= {`/bookvendor/${match.params.vendor}`}\r\n               type=\"button\" className= \"btn btn-info\">Back to Calendar</Link>\r\n      </div>\r\n      </div>      \r\n\r\n      </form>\r\n    \r\n  )\r\n}\r\n\r\nexport default SelectTimeslot;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\login\\Login.js",["797"],"import React, {useState, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {auth, googleAuthProvider, facebookAuthProvider} from \"../../firebase\";\r\nimport {toast,ToastContainer} from \"react-toastify\";\r\nimport {Button } from 'antd';\r\nimport { MailOutlined, FacebookOutlined, GoogleOutlined} from '@ant-design/icons';\r\nimport { LOGGED_IN_USER } from \"../../actions/types\";\r\nimport { createOrUpdateUser} from \"../../actions/auth\";\r\n\r\n  \r\nconst Login = ({history}) => {\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch= useDispatch();\r\n  const {user} = useSelector( (state) => ({...state}));\r\n\r\n      \r\n  useEffect( () => {\r\n     if (history.location.state) {\r\n       return;\r\n     } else {\r\n      if ( user && user.token) {\r\n          history.push(\"/\");\r\n      }}\r\n  }, [user,history]);\r\n\r\n  const roleBasedRedirect = (res) => {\r\n    \r\n    //check if user needs to be redirected to a different page\r\n    let userPage= history.location.state;\r\n    if (userPage) {\r\n      history.push(userPage.from);\r\n    }  else { \r\n     //role based redirect \r\n     if (res.data.role ===  \"admin\") {\r\n       history.push(\"/admin/dashboard\");\r\n     } \r\n     else if (res.data.role === \"vendor\") {\r\n       history.push(\"/vendor/dashboard\");\r\n     } else {\r\n       history.push(\"/user/history\");\r\n     }\r\n    }\r\n  }\r\n \r\nconst handleSubmit= async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      const result= await auth.signInWithEmailAndPassword(email,password);\r\n     \r\n      const {user} = result;\r\n      const idTokenResult = await user.getIdTokenResult();\r\n     \r\n      createOrUpdateUser(idTokenResult.token)     \r\n          .then ( (res) =>  { dispatch  ({\r\n                 type: LOGGED_IN_USER,\r\n                 payload: {\r\n                 name: res.data.name,\r\n                 email: res.data.email,\r\n                 token: idTokenResult.token,\r\n                 role: res.data.role,\r\n                _id: res.data._id,\r\n                address: res.data.address,\r\n                createdAt: res.data.createdAt,\r\n                stripe_account_id:res.data.stripe_account_id,\r\n                stripe_seller: res.data.stripe_seller,\r\n                stripeSession: res.data.stripeSession,\r\n              }\r\n          });\r\n          var userval= {name:res.data.name, \r\n                        email: res.data.email,\r\n                        token: idTokenResult.token,\r\n                         _id:res.data._id,\r\n                         role:res.data.role,\r\n                         address:res.data.address,\r\n                         createdAt: res.data.createdAt,\r\n                         stripe_account_id:res.data.stripe_account_id,\r\n                         stripe_seller: res.data.stripe_seller,\r\n                         stripeSession: res.data.stripeSession, }\r\n          window.localStorage.setItem(\"user\",JSON.stringify(userval));\r\n          roleBasedRedirect(res);\r\n         }) \r\n          .catch ( (err) => console.log(err))           \r\n          // history.push(\"/\");\r\n          }  \r\n    catch (err) {\r\n      console.log(err);\r\n      toast.error(err.message);\r\n      setLoading(false);\r\n    }\r\n}\r\n\r\n const googleLogin = async () => {\r\n    \r\n      await auth.signInWithPopup(googleAuthProvider).then( async (result) => {\r\n        const {user} = result;\r\n        console.log(\"user from google\", result.user);\r\n        const idTokenResult = await user.getIdTokenResult();\r\n      \r\n       createOrUpdateUser(idTokenResult.token)\r\n       .then ( (res) => { dispatch ({\r\n         type: LOGGED_IN_USER,\r\n          payload: {\r\n          name: res.data.name,\r\n          email: res.data.email,\r\n          token: idTokenResult.token,\r\n          role: res.data.role,\r\n         _id: res.data._id,\r\n         address: res.data.address,\r\n         createdAt: res.data.createdAt,\r\n         stripe_account_id:res.data.stripe_account_id,\r\n         stripe_seller: res.data.stripe_seller,\r\n         stripeSession: res.data.stripeSession,\r\n        }\r\n     })\r\n     var userval= {\r\n       name:res.data.name, \r\n       email: res.data.email,\r\n       token: idTokenResult.token,\r\n       _id:res.data._id,\r\n       role:res.data.role,\r\n       address:res.data.address,\r\n       createdAt: res.data.createdAt,\r\n       stripe_account_id:res.data.stripe_account_id,\r\n       stripe_seller: res.data.stripe_seller,\r\n       stripeSession: res.data.stripeSession\r\n       }\r\n      window.localStorage.setItem(\"user\",JSON.stringify(userval));\r\n   \r\n     roleBasedRedirect(res);\r\n     \r\n    }).catch( (err) => {\r\n            console.log(err)\r\n            toast.error(err.message)\r\n            setLoading(false) });       \r\n      })\r\n     }\r\n\r\n const facebookLogin = async () => {\r\n    auth.signInWithPopup(facebookAuthProvider).then( async (result) => {\r\n       const {user} = result;\r\n       const idTokenResult = await user.getIdTokenResult();\r\n\r\n       createOrUpdateUser(idTokenResult.token)\r\n       .then ( (res) => { dispatch ({\r\n         type: LOGGED_IN_USER,\r\n          payload: {\r\n          name: res.data.name,\r\n          email: res.data.email,\r\n          token: idTokenResult.token,\r\n          role: res.data.role,\r\n         _id: res.data._id,\r\n         address: res.data.address,\r\n         createdAt: res.data.createdAt,\r\n         stripe_account_id:res.data.stripe_account_id,\r\n         stripe_seller: res.data.stripe_seller,\r\n         stripeSession: res.data.stripeSession,\r\n        }\r\n     })\r\n     let userval= {\r\n        name:res.data.name, \r\n      email: res.data.email,\r\n      token: idTokenResult.token,\r\n       _id:res.data._id,\r\n       role:res.data.role,\r\n       address:res.data.address,\r\n       createdAt: res.data.createdAt,\r\n       stripe_account_id:res.data.stripe_account_id,\r\n       stripe_seller: res.data.stripe_seller,\r\n       stripeSession: res.data.stripeSession\r\n       }\r\n       window.localStorage.setItem(\"user\",JSON.stringify(userval));\r\n       roleBasedRedirect(res);\r\n    }).catch( (err) => {\r\n      console.log(err)\r\n      toast.error(err.message)\r\n      setLoading(false) });   \r\n   })\r\n  }\r\n\r\n\r\n const loginForm = ()  => {\r\n  \r\n  return (\r\n  <form  onSubmit = {handleSubmit}>\r\n    <div className=\"form-group font-weight-bold mb-1 question\">\r\n    <label htmlFor=\"email\">Email</label>\r\n    <input type=\"email\" \r\n           className=\"form-control\" \r\n           value= {email}\r\n           onChange = { (e) => setEmail(e.target.value) }\r\n           autoFocus\r\n    />\r\n    </div>\r\n    <div className=\"form-group font-weight-bold mb-2 question\">\r\n    <label htmlFor=\"password\">Password</label>\r\n    <input type=\"password\" \r\n           className=\"form-control\" \r\n           value= {password}\r\n           onChange = { (e) => setPassword(e.target.value) }         \r\n    />\r\n    </div>\r\n   <div className= \"row justify-content-center font-weight-bold mt-2 question\">\r\n     <Button onClick= {handleSubmit} \r\n             type=\"primary\" \r\n             shape=\"round\"\r\n             block\r\n             icon= {<MailOutlined />}\r\n             size= \"large\"\r\n             disabled= {!email || password.length < 6}\r\n             className= \"mb-2 mt-2 font-weight-bold font-weight-bold question\">Login with Email and Password\r\n      </Button>\r\n      <Button onClick= {googleLogin} \r\n             type=\"danger\" \r\n             shape=\"round\"\r\n             block\r\n             icon= {<GoogleOutlined />}\r\n             size= \"large\"\r\n             className= \"mb-2 mt-2 font-weight-bold question\">Login with Google\r\n      </Button>\r\n      <Button onClick= {facebookLogin} \r\n             type=\"primary\" \r\n             shape=\"round\"\r\n             block\r\n             icon= {<FacebookOutlined />}\r\n             size= \"large\"\r\n             className= \"mb-2 mt-2 font-weight-bold question\">Login with Facebook\r\n      </Button>\r\n      <Link to= \"/forgot/password\" className= \"text-danger mt-2\">Forgot Password</Link>\r\n   </div>\r\n  \r\n  </form>\r\n  )\r\n }\r\n return (\r\n   <div className=\"container mt-5 \">\r\n\r\n     <div className=\"row\">\r\n       <div className=\"col-md-8 offset-md-3\">\r\n         <div className=\"card register-form\">\r\n           <div className=\"card-header\">\r\n              {loading ? (<h4>Loading....</h4>) : (<h4>Login</h4>) }              \r\n           </div>\r\n           <div className=\"card-body\">           \r\n             {loginForm()}\r\n           </div>\r\n         </div>\r\n       </div>\r\n     </div>\r\n     \r\n   </div>\r\n );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\login\\Register.js",["798","799"],"import React, {useState, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {auth} from \"../../firebase\";\r\nimport {toast,ToastContainer} from \"react-toastify\";\r\n\r\nconst Register = ({history}) => {\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n \r\n  const {user} = useSelector( (state) => ({...state}));\r\n\r\n  useEffect( () => {\r\n      if ( user && user.token ) {\r\n          history.push(\"/user/history\");\r\n      }\r\n  }, [user,history]);\r\n\r\n \r\nconst handleSubmit= async (e) => {\r\n    e.preventDefault();\r\n    const config = {\r\n       url: process.env.REACT_APP_REGISTER_REDIRECT_URL,\r\n       handleCodeInApp: true\r\n    }\r\n\r\n    await auth.sendSignInLinkToEmail(email,config);\r\n    toast.success(`Email is send to ${email}. Please check your email to complete registration.`);\r\n\r\n    //save the user to local storage\r\n    window.localStorage.setItem('emailForRegistration', email);\r\n    setEmail(\"\");\r\n}\r\n\r\n const registerForm = ()  => {\r\n  \r\n  return (\r\n  <form  onSubmit = {handleSubmit}>\r\n    <div className=\"form-group font-weight-bold mb-1\">\r\n    <label htmlFor=\"email\">Email</label>\r\n    <input type=\"email\" \r\n           className=\"form-control\" \r\n           value= {email}\r\n           onChange = { (e) => setEmail(e.target.value) }\r\n           autoFocus\r\n    />\r\n    </div>\r\n   <div className= \"row justify-content-center\">\r\n     <button type=\"submit\" className= \"btn btn-primary mt-3\" >Register</button>\r\n   </div>\r\n  \r\n  </form>\r\n  )\r\n }\r\n return (\r\n   <div className=\"container mt-5 \">\r\n\r\n     <div className=\"row mb-2\">\r\n       <div className=\"col-md-8 offset-md-3\">\r\n         <div className=\"card register-form\">\r\n           <div className=\"card-header\">\r\n              <h1>Register</h1>\r\n           </div>\r\n           <div className=\"card-body\">\r\n              {registerForm()}\r\n           </div>\r\n         </div>\r\n       </div>\r\n     </div>\r\n     \r\n   </div>\r\n );\r\n}\r\n\r\nexport default Register;\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\login\\RegisterComplete.js",["800","801"],"import React, {useState, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {auth} from \"../../firebase\";\r\nimport {toast, ToastContainer} from \"react-toastify\";\r\nimport { LOGGED_IN_USER } from \"../../actions/types\";\r\nimport { createOrUpdateUser} from \"../../actions/auth\";\r\n\r\nconst RegisterComplete = ({history}) => {\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch= useDispatch();\r\n  const {user} = useSelector( (state) => ({...state}));\r\n\r\n  //history.push(dashboard);\r\n\r\n  useEffect(() => {\r\n      setEmail(window.localStorage.getItem(\"emailForRegistration\"))\r\n  }, [history]);\r\n\r\n  const handleSubmit= async (e) => {\r\n    e.preventDefault();\r\n\r\n    if( !email || !password) {\r\n        toast.error(\"Email and password must be entered\");\r\n        return;\r\n    }\r\n    if( password.length < 6) {\r\n        toast.error(\"Password must be minimum 6 characters\");\r\n        return;\r\n    }\r\n    try {\r\n        const result = await auth.signInWithEmailLink(email, window.location.href)\r\n        \r\n        if(result.user.emailVerified) {\r\n            window.localStorage.removeItem(\"emailForRegistration\");\r\n            let user = auth.currentUser;\r\n            await user.updatePassword(password);\r\n            const idTokenResult = await user.getIdTokenResult();\r\n            // update in redux store \r\n           createOrUpdateUser(idTokenResult.token)     \r\n          .then ( (res) => dispatch ({\r\n                 type: LOGGED_IN_USER,\r\n                 payload: {\r\n                 name: res.data.name,\r\n                 email: res.data.email,\r\n                 token: idTokenResult.token,\r\n                 role: res.data.role,\r\n                _id: res.data._id\r\n              }\r\n          })) \r\n          .catch ( (err) => console.log(err)); \r\n\r\n          history.push('/');\r\n        }\r\n    } \r\n    catch (err) {\r\n       console.log(err);\r\n       toast.error(err.message);\r\n    }\r\n    }\r\n\r\n    //save the user to local storage\r\n    // window.localStorage.setItem('emailForRegistration', email);\r\n    // setEmail(\"\");\r\n\r\n\r\n const completeRegisterForm = ()  => {\r\n  \r\n  return (\r\n  <form  onSubmit = {handleSubmit}>\r\n    <div className=\"form-group font-weight-bold\">\r\n    <label htmlFor=\"email\">Email</label>\r\n    <input type=\"email\" \r\n           className=\"form-control\" \r\n           value= {email}\r\n           disabled\r\n    />\r\n    </div>\r\n    <div className=\"form-group\">\r\n    <label htmlFor=\"password\">Password</label>\r\n    <input type=\"password\" \r\n           className=\"form-control\" \r\n           placeholder= \"Password\"\r\n           value={password}\r\n           onChange= { (e) => setPassword(e.target.value)} \r\n           />\r\n    </div>\r\n   <button type=\"submit\" className= \"btn btn-primary float-center\" > Register</button>\r\n  </form>\r\n  )\r\n  }\r\n\r\n\r\n return (\r\n   <div className=\"container mt-5 \">\r\n\r\n     <div className=\"row\">\r\n       <div className=\"col-md-8 offset-md-3\">\r\n         <div className=\"card register-form\">\r\n           <div className=\"card-header\">\r\n              <h1>Complete Registration</h1>\r\n           </div>\r\n           <div className=\"card-body\">\r\n              {completeRegisterForm()}\r\n           </div>\r\n         </div>\r\n       </div>\r\n     </div>\r\n     \r\n   </div>\r\n );\r\n }\r\n\r\nexport default RegisterComplete;\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\login\\ForgotPassword.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\login\\VendorRegisterComplete.js",["802","803","804"],"import React, {useState, useEffect} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {auth} from \"../../firebase\";\r\nimport {toast} from \"react-toastify\";\r\nimport { LOGGED_IN_USER } from \"../../actions/types\";\r\nimport { createOrUpdateVendor} from \"../../actions/auth\";\r\n\r\nconst VendorRegisterComplete = ({history}) => {\r\n\r\n  const emailVal= window.localStorage.getItem('emailForRegistration');\r\n\r\n  const [email, setEmail] = useState(emailVal);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loading,setLoading]= useState(false);\r\n  const dispatch= useDispatch();\r\n\r\n  useEffect(() => {\r\n    setEmail(window.localStorage.getItem('emailForRegistration')); \r\n  }, [history]); \r\n\r\n  \r\n  const handleSubmit= async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"In handle SUBMIT\", email,window.location.href);\r\n    if( !email || !password) {\r\n        toast.error(\"Email and password must be entered\");\r\n        return;\r\n    }\r\n    if( password.length < 6) {\r\n        toast.error(\"Password must be minimum 6 characters\");\r\n        return;\r\n    }\r\n    try {      \r\n        const email= window.localStorage.getItem('emailForRegistration');\r\n        console.log(\"Before the result\", email,window.location.href);\r\n        if (!email) \r\n          email = window.prompt('Please provide your email for confirmation');\r\n        const result = await auth.signInWithEmailLink(email, window.location.href)\r\n        console.log(\"RESULT\", result)\r\n        if(result.user.emailVerified) {\r\n            window.localStorage.removeItem(\"emailForRegistration\");\r\n            let user = auth.currentUser;\r\n            await user.updatePassword(password);\r\n            const idTokenResult = await user.getIdTokenResult();\r\n            console.log(\"user\", user, \"idTokenResult\", idTokenResult);\r\n            // update in redux store \r\n          createOrUpdateVendor(idTokenResult.token)     \r\n          .then ( (res) => dispatch ({\r\n                 type: LOGGED_IN_USER,\r\n                 payload: {\r\n                 name: res.data.name,\r\n                 email: res.data.email,\r\n                 token: idTokenResult.token,\r\n                 role: res.data.role,\r\n                _id: res.data._id\r\n              }             \r\n          })         \r\n          ) \r\n          .catch ( (err) => console.log(err)); \r\n           history.push('/');\r\n        }\r\n    } \r\n    catch (err) {\r\n       console.log(err);\r\n       toast.error(err.message);\r\n    }\r\n    }\r\n\r\n const completeRegisterForm = ()  => (\r\n  <form  onSubmit= {handleSubmit} >\r\n    {console.log(\"IN complete registration EMAIL\", email)}\r\n    <div className=\"form-group font-weight-bold\">\r\n     <label>Email</label> \r\n    <input type=\"email\" \r\n           className=\"form-control\" \r\n           value= {email}\r\n           disabled\r\n    />\r\n    </div>\r\n    <div className=\"form-group\">\r\n    <label >Password</label> \r\n    <input type=\"password\" \r\n           className=\"form-control\" \r\n           placeholder= \"Password\"\r\n           value={password}\r\n           onChange= {(e) => setPassword(e.target.value)} \r\n           autoFocus\r\n    />\r\n    </div>\r\n     <button type=\"submit\" \r\n             className= \"btn btn-primary\" >Complete Registration\r\n     </button>\r\n  </form>\r\n  ) \r\n\r\n return (\r\n   <div className=\"container mt-5 \">  \r\n      {console.log(\"In vendor register completion\")}\r\n     <div className=\"row\">\r\n       <div className=\"col-md-8 offset-md-3\">\r\n              <h1>Complete Vendor Registration</h1> \r\n                     \r\n               {completeRegisterForm()}\r\n           </div>\r\n         </div>\r\n       </div>    \r\n );\r\n }\r\n\r\nexport default VendorRegisterComplete;\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\user\\UserHistory.js",["805","806","807","808"],"import React, { useState, useEffect } from \"react\";\r\nimport UserNav from \"../navigation/UserNav\";\r\nimport ConnectNav from \"../navigation/ConnectNav\";\r\nimport { getUserOrders } from \"../../actions/user\";\r\nimport ShowPaymentInfo from \"../cards/ShowPaymentInfo\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\r\nimport Invoice from \"../order/Invoice\";\r\n\r\nconst UserHistory = () => {\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadUserOrders();\r\n  }, []);\r\n\r\n  const loadUserOrders = () => {\r\n    getUserOrders(user.token)\r\n      .then((res) => {\r\n        setOrders(res.data);\r\n        // console.log(\"orders checking\");\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const showEachOrder = () =>\r\n    orders.map((order, i) => (\r\n      <div className=\"card m-5 p-3\" key={i}>\r\n        <ShowPaymentInfo order={order} />\r\n        {showOrdersInTable(order)}\r\n        <div className=\"row\">\r\n          {/* <div className=\"col\">\r\n               {showDownloadLink(order)}\r\n             </div> */}\r\n        </div>\r\n      </div>\r\n    ));\r\n\r\n  const showOrdersInTable = (order) => (\r\n    <table className=\"table table-bordered  h6\">\r\n      <thead className=\"thead-light\">\r\n        <tr>\r\n          <th scope=\"col\">Helper Name </th>\r\n          <th scope=\"col\">Sub Category </th>\r\n          <th scope=\"col\">Price </th>\r\n          <th scope=\"col\">PriceType </th>\r\n          <th scope=\"col\">Count </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {order.vendors.map((v, i) => (\r\n          <tr key={i}>\r\n            <td>\r\n              <b>{v.vendor.vendorInfoId.name}</b>\r\n            </td>\r\n            <td>\r\n              <b>{v.vendor.subcategories[0].name}</b>\r\n            </td>\r\n            <td>\r\n              <b>{v.vendor.price}</b>\r\n            </td>\r\n            <td>\r\n              <b>{v.vendor.pricetype}</b>\r\n            </td>\r\n            <td>\r\n              <b>{v.count}</b>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n\r\n  const showDownloadLink = (order) => (\r\n    <PDFDownloadLink\r\n      document={<Invoice order={order} />}\r\n      filename=\"invoice.pdf\"\r\n      className=\"btn btn-sm btn-block btn-outline-primary\"\r\n    >\r\n      PDF Download\r\n    </PDFDownloadLink>\r\n  );\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"container-fluid bg-secondary p-5\">\r\n        <ConnectNav />\r\n      </div>\r\n      <div className=\"row ml-0 text-align-top\">\r\n        <div className=\"col-md-2\">\r\n          <UserNav />\r\n        </div>\r\n\r\n        <div className=\"col \">\r\n          {orders.length ? <h3> Orders List</h3> : <h3> No Orders</h3>}\r\n          {showEachOrder()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserHistory;\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\login\\VendorRegister.js",["809","810"],"import React, {useState, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {auth,googleAuthProvider, facebookAuthProvider} from \"../../firebase\";\r\nimport {toast,ToastContainer} from \"react-toastify\";\r\nimport {Button} from \"antd\";\r\nimport {FacebookOutlined,GoogleOutlined} from \"@ant-design/icons\";\r\nimport { createOrUpdateUser} from \"../../actions/auth\";\r\nimport { LOGGED_IN_USER } from \"../../actions/types\";\r\n\r\nconst VendorRegister = ({history}) => {\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch= useDispatch();\r\n  const {user} = useSelector( (state) => ({...state}));\r\n\r\n  useEffect( () => {\r\n      if ( user && user.token) {\r\n          history.push(\"/\");\r\n      }\r\n  }, [user,history]);\r\n\r\n \r\nconst handleSubmit= async (e) => {\r\n    e.preventDefault();\r\n    const config = {\r\n       url: process.env.REACT_APP_VENDOR_REGISTER_REDIRECT_URL,\r\n       handleCodeInApp: true\r\n    }\r\n    console.log(\"CONFIG\",config);\r\n    await auth.sendSignInLinkToEmail(email,config);\r\n    toast.success(`Email is send to ${email}. Please check your email to complete registration.`);\r\n\r\n    //save the user to local storage\r\n    window.localStorage.setItem('emailForRegistration', email);\r\n    setEmail(\"\");\r\n}\r\n\r\n const registerForm = ()  => {\r\n  \r\n  return (\r\n  <form  onSubmit = {handleSubmit}>\r\n    <div className=\"form-group font-weight-bold mb-1\">\r\n   \r\n    <label htmlFor=\"email\">Email</label>\r\n    <input type=\"email\" \r\n           className=\"form-control\" \r\n           value= {email}\r\n           onChange = { (e) => setEmail(e.target.value) }\r\n           autoFocus\r\n    />\r\n    </div>\r\n   <div className= \"row justify-content-center\">\r\n     <button type=\"submit\" className= \"btn btn-primary mt-3\" >Register</button>\r\n   </div>\r\n  \r\n  </form>\r\n  )\r\n }\r\n\r\n const googleLogin = async () => {\r\n    \r\n    await auth.signInWithPopup(googleAuthProvider).then( async (result) => {\r\n      const {user} = result;\r\n      console.log(\"user from google\", result.user);\r\n      const idTokenResult = await user.getIdTokenResult();\r\n    \r\n     createOrUpdateUser(idTokenResult.token)\r\n     .then ( (res) => { dispatch ({\r\n       type: LOGGED_IN_USER,\r\n        payload: {\r\n        name: res.data.name,\r\n        email: res.data.email,\r\n        token: idTokenResult.token,\r\n        role: \"vendor\",\r\n       _id: res.data._id,\r\n       address: res.data.address,\r\n       createdAt: res.data.createdAt,\r\n       stripe_account_id:res.data.stripe_account_id,\r\n       stripe_seller: res.data.stripe_seller,\r\n       stripeSession: res.data.stripeSession,\r\n      }\r\n   })\r\n   var userval= {\r\n     name:res.data.name, \r\n     email: res.data.email,\r\n     token: idTokenResult.token,\r\n     _id:res.data._id,\r\n     role:\"vendor\",\r\n     address:res.data.address,\r\n     createdAt: res.data.createdAt,\r\n     stripe_account_id:res.data.stripe_account_id,\r\n     stripe_seller: res.data.stripe_seller,\r\n     stripeSession: res.data.stripeSession\r\n     }\r\n    window.localStorage.setItem(\"user\",JSON.stringify(userval));\r\n \r\n   roleBasedRedirect(res);\r\n   \r\n  }).catch( (err) => {\r\n          console.log(err)\r\n          toast.error(err.message)\r\n          setLoading(false) });       \r\n    })\r\n   }\r\n\r\nconst facebookLogin = async () => {\r\n  auth.signInWithPopup(facebookAuthProvider).then( async (result) => {\r\n     const {user} = result;\r\n     const idTokenResult = await user.getIdTokenResult();\r\n\r\n     createOrUpdateUser(idTokenResult.token)\r\n     .then ( (res) => { dispatch ({\r\n       type: LOGGED_IN_USER,\r\n        payload: {\r\n        name: res.data.name,\r\n        email: res.data.email,\r\n        token: idTokenResult.token,\r\n        role: \"vendor\",\r\n       _id: res.data._id,\r\n       address: res.data.address,\r\n       createdAt: res.data.createdAt,\r\n       stripe_account_id:res.data.stripe_account_id,\r\n       stripe_seller: res.data.stripe_seller,\r\n       stripeSession: res.data.stripeSession,\r\n      }\r\n   })\r\n   let userval= {\r\n      name:res.data.name, \r\n    email: res.data.email,\r\n    token: idTokenResult.token,\r\n     _id:res.data._id,\r\n     role:\"vendor\",\r\n     address:res.data.address,\r\n     createdAt: res.data.createdAt,\r\n     stripe_account_id:res.data.stripe_account_id,\r\n     stripe_seller: res.data.stripe_seller,\r\n     stripeSession: res.data.stripeSession\r\n     }\r\n     window.localStorage.setItem(\"user\",JSON.stringify(userval));\r\n     roleBasedRedirect(res);\r\n  }).catch( (err) => {\r\n    console.log(err)\r\n    toast.error(err.message)\r\n    setLoading(false) });   \r\n })\r\n}\r\n\r\nconst roleBasedRedirect = (res) => {\r\n    \r\n    //check if user needs to be redirected to a different page\r\n    let userPage= history.location.state;\r\n    console.log(\"User PAGE\",userPage);\r\n    if (userPage) {\r\n      history.push(userPage.from);\r\n    }  else { \r\n     //role based redirect \r\n     if (res.data.role ===  \"admin\") {\r\n       history.push(\"/admin/dashboard\");\r\n     } \r\n     else if (res.data.role === \"vendor\") {\r\n       history.push(\"/vendor/dashboard\");\r\n     } else \r\n     {\r\n       history.push(\"/user/history\");\r\n     }\r\n    }\r\n  }\r\n\r\n return (\r\n   <div className=\"container mt-5 \">\r\n\r\n     <div className=\"row mb-2\">\r\n       <div className=\"col-md-8 offset-md-3\">\r\n         <div className=\"card register-form\">\r\n           <div className=\"card-header\">\r\n              <h1>Register</h1>\r\n           </div>\r\n           <div className=\"card-body\">\r\n              {registerForm()}\r\n           </div>\r\n\r\n           <Button onClick= {googleLogin} \r\n             type=\"danger\" \r\n             shape=\"round\"\r\n             block\r\n             icon= {<GoogleOutlined />}\r\n             size= \"large\"\r\n             className= \"mb-2 mt-2 font-weight-bold question\">Login with Google\r\n         </Button>\r\n          <Button onClick= {facebookLogin} \r\n             type=\"primary\" \r\n             shape=\"round\"\r\n             block\r\n             icon= {<FacebookOutlined />}\r\n             size= \"large\"\r\n             className= \"mb-2 mt-2 font-weight-bold question\">Login with Facebook\r\n         </Button>\r\n         </div>\r\n       </div>\r\n     </div>\r\n     \r\n   </div>\r\n );\r\n}\r\n\r\nexport default VendorRegister;\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\user\\UserPassword.js",["811"],"import React, {useState} from \"react\";\r\nimport UserNav from \"../navigation/UserNav\";\r\nimport {auth} from \"../../firebase\";\r\nimport {toast} from \"react-toastify\";\r\n\r\n\r\nconst UserPassword = () => {\r\n\r\n    const [password,setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleSubmit= async (e) => {\r\n      e.preventDefaults();\r\n      setLoading(true);\r\n      await auth.currentUser.updatePassword(password)\r\n      .then ( () => {\r\n         setLoading(false);\r\n         setPassword(\"\");\r\n         toast.success(\"Your Password has been updated\");\r\n      })\r\n      .catch (err => {\r\n         console.log(err)\r\n         setLoading(false);\r\n         toast.err(err.message);\r\n      }); \r\n\r\n\r\n    }\r\n\r\n    const passwordUpdateForm = () => {\r\n        return(\r\n        <form>\r\n          <div className= \"card form-group\">\r\n           <div className= \"card-body\">\r\n            <label className= \"font-weight-bold category\">Update password</label>\r\n            <input type=\"password\" \r\n                   onChange= { (e) => setPassword(e.target.value)}\r\n                   className= \"form-control\"\r\n                   placeholder= \"Enter new password\"\r\n                   value= {password}\r\n                   disabled= {loading}\r\n            />\r\n             <div className= \"d-flex justify-content-center mt-2\">\r\n              <button className=\"btn btn-primary\"\r\n                      disabled= {!password || password.length <6 || loading}\r\n              >Submit</button>\r\n              </div>\r\n          </div>          \r\n          </div>\r\n        </form>\r\n        )\r\n    }\r\n\r\n   return(\r\n    <div className= \"container-fluid mt-2\">\r\n        <div className= \"row ml-0 text-align-top\">\r\n           <div className= \"col-md-3\">\r\n               < UserNav />   \r\n           </div>\r\n           <div className= \"col-md-4\">            \r\n            {loading ? (<h4 className= \"card-header\"> Loading... </h4>)\r\n                     : (<h4 className= \"card-header\"> Reset Password </h4>)\r\n             } \r\n              {passwordUpdateForm()}\r\n           </div>\r\n        </div>\r\n    </div>\r\n   )\r\n}\r\n\r\nexport default UserPassword;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorHistory.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorNew.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorDashboard.js",["812","813","814"],"import React, {useState, useEffect} from \"react\";\r\nimport VendorNav from \"../navigation/VendorNav\";\r\nimport ConnectNav from \"../navigation/ConnectNav\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ToolOutlined} from \"@ant-design/icons\";\r\nimport {toast} from \"react-toastify\";\r\nimport {createConnectAccount} from \"../../actions/stripe\";\r\nimport { getVendorCategoriesUser } from \"../../actions/vendor\";\r\nimport ShowVendorBookings from \"../booking/ShowVendorBookings\";\r\nimport { Card } from 'antd';\r\n\r\nconst { Meta } = Card;\r\n\r\nconst VendorDashboard = ({history}) => {\r\n    \r\n    const {user} = useSelector( (state) => ({...state}));\r\n    const [loading, setLoading] = useState(false);\r\n    const [vendors,setVendors] = useState([]);\r\n\r\n    {console.log(\"User data from vendor dashboard\",user._id, user.email)}\r\n\r\n    useEffect(() => {\r\n      loadVendorDetails();\r\n    },[]);\r\n\r\n    const loadVendorDetails= () => {\r\n      getVendorCategoriesUser(user._id)\r\n      .then( res => setVendors(res.data));\r\n    }\r\n\r\n    const handleClick=  async () => {\r\n        setLoading(true);\r\n        try {\r\n          const res= await createConnectAccount(user.token);\r\n          console.log(\"RES\",res);\r\n          window.location.href=res.data;\r\n          setLoading(false);\r\n        } catch (err) {\r\n            console.log(err);\r\n            toast.error(\"Stripe connect failed. Please try again\");\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const connectedVendor= () => (\r\n     <div className= \"row ml-0 text-align-top\">\r\n        <div className= \"col-md-3 mt-2 \">\r\n            <VendorNav />   \r\n        </div>  \r\n        <div className=\"col col-md-9 \"> \r\n        <div className=\"row d-flex justify-content-center\">  \r\n          \r\n           < ShowVendorBookings\r\n              user = {user._id}  \r\n            />         \r\n           <h2 className= \"font-weight-bold mb-2 mt-2 \"> Your Current Categories</h2>\r\n           <br />\r\n        </div>\r\n         <div className= \"row d-flex justify-content-center mt-3\">\r\n           <div className= \"col d-flex m-2\">\r\n\r\n           {/* {JSON.stringify(vendors)} */}\r\n             {vendors && vendors.map( (v) => (\r\n               <Card  key= {v._id} cover= {\r\n                <img \r\n                 key= {v._id}\r\n                 src= { v.images && v.images.length ? v.images[0].url : \"\"} \r\n                 style= {{ height: \"180px\", objectFit: \"cover\"}}                \r\n               />\r\n             }>\r\n                 <p>{v.vendorInfoId.name}</p>\r\n                 <p>{v.vendorInfoId.email}</p>\r\n                 <p>{v.subcategories[0].name}</p>\r\n                 <Meta title= {`Price-£${v.price} ${v.pricetype}`} description= {v.subcats} />\r\n               </Card>\r\n              \r\n             )\r\n            )} \r\n            </div>\r\n        </div>\r\n        </div>\r\n     </div>\r\n    )\r\n\r\n    const notConnectedVendor= () => (\r\n    <div className= \"container-fluid\">\r\n    <div className= \"row\"> \r\n    <div className= \"col col-md-6 offset-3 text-center\">\r\n      <div className= \"p-5 pointer\">\r\n        <ToolOutlined className=\"h2\" />\r\n        <h4 className= \"font-weight-bold \"> Setup payouts to add your jobs</h4>\r\n        <p className=\"lead\"> Compare my helper partners with stripe to transfer your earnings to your bank account</p>\r\n        <button className=\"btn btn-primary mb-3\"\r\n                disabled= {loading}\r\n                onClick= {handleClick}\r\n                > { loading ? \"Processing...\"  : \"Setup Payouts\"}</button>\r\n        <p className=\"text-muted\">\r\n           <small className=\"font-weight-bold\" > *You will be redirected to stripe to complete the onboarding process</small> \r\n        </p>\r\n      </div>\r\n        \r\n    </div>\r\n    </div>\r\n    </div>\r\n    )\r\n\r\n\r\n    return(\r\n    <>\r\n    <div className= \"container-fluid bg-secondary p-5\">\r\n            <ConnectNav />\r\n    </div>\r\n    { user && user.stripe_seller && user.stripe_seller.charges_enabled\r\n     ? connectedVendor()\r\n     : notConnectedVendor()\r\n    }\r\n        \r\n    </>\r\n    )\r\n}\r\n\r\nexport default VendorDashboard;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\routes\\UserRoute.js",["815"],"import React from \"react\";\r\nimport { Route,Redirect} from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CounterToRedirect from \"./CounterToRedirect\";\r\n\r\nconst UserRoute = ({ children, ...rest }) => {\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  // debugger\r\n  return user && user.token ? (\r\n    <Route {...rest} \r\n    // render={() => children}\r\n     />\r\n  ) : (\r\n     <Redirect  to= \"/\" />\r\n    // <CounterToRedirect />\r\n  );\r\n};\r\n\r\nexport default UserRoute;\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorPassword.js",["816"],"import React, {useState} from \"react\";\r\nimport VendorNav from \"../navigation/VendorNav\";\r\nimport {auth} from \"../../firebase\";\r\nimport {toast} from \"react-toastify\";\r\n\r\n\r\nconst VendorPassword = () => {\r\n\r\n    const [password,setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleSubmit= async (e) => {\r\n      e.preventDefaults();\r\n      setLoading(true);\r\n      await auth.currentUser.updatePassword(password)\r\n      .then ( () => {\r\n         setLoading(false);\r\n         setPassword(\"\");\r\n         toast.success(\"Your Password has been updated\");\r\n      })\r\n      .catch (err => {\r\n         console.log(err)\r\n         setLoading(false);\r\n         toast.err(err.message);\r\n      }); \r\n\r\n\r\n    }\r\n\r\n    const passwordUpdateForm = () => {\r\n        return(\r\n        <form>\r\n          <div className= \"card form-group\">\r\n           <div className= \"card-body\">\r\n            <label className= \"font-weight-bold category\">Update password</label>\r\n            <input type=\"password\" \r\n                   onChange= { (e) => setPassword(e.target.value)}\r\n                   className= \"form-control\"\r\n                   placeholder= \"Enter new password\"\r\n                   value= {password}\r\n                   disabled= {loading}\r\n            />\r\n             <div className= \"d-flex justify-content-center mt-2\">\r\n              <button className=\"btn btn-primary\"\r\n                      disabled= {!password || password.length <6 || loading}\r\n              >Submit</button>\r\n              </div>\r\n          </div>          \r\n          </div>\r\n        </form>\r\n        )\r\n    }\r\n\r\n   return(\r\n    <div className= \"container-fluid mt-2\">\r\n        <div className= \"row ml-0 text-align-top\">\r\n           <div className= \"col-md-3\">\r\n               < VendorNav />   \r\n           </div>\r\n           <div className= \"col-md-4\">            \r\n            {loading ? (<h4 className= \"card-header\"> Loading... </h4>)\r\n                     : (<h4 className= \"card-header\"> Reset Password </h4>)\r\n             } \r\n              {passwordUpdateForm()}\r\n           </div>\r\n        </div>\r\n    </div>\r\n   )\r\n}\r\n\r\nexport default VendorPassword;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\Vendorsign.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorProducts\\VendorEdit.js",["817","818","819"],"import React, {useState, useEffect} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {toast} from \"react-toastify\";\r\nimport VendorNav from \"../../navigation/VendorNav\";\r\nimport {fetchCategories, fetchCategorySubs} from \"../../../actions/category\";\r\nimport {getVendorCategory, updateVendor} from \"../../../actions/vendor\";\r\nimport VendorUpdateForm from \"./VendorUpdateForm\";\r\nimport FileUpload from \"../../utils/FileUpload\";\r\n\r\nconst VendorEdit = ({match,history}) => {\r\n\r\n   const {user} = useSelector( (state) => ({...state}));\r\n   const [loading,setLoading] = useState(false);\r\n   const [categories, setCategories]= useState([]);\r\n   const [subOptions, setSubOptions] = useState([]);\r\n   const [arrOfSubIds, setArrOfSubIds]= useState([]);\r\n   const [selectedCategory, setSelectedCategory]= useState(\"\");\r\n\r\n   const initialState= {  \r\n    userId: user._id, \r\n    vendorInfoId: \"\" ,\r\n    description: \"\",   \r\n    category: \"\",\r\n    subcategories: [],\r\n    subcategory: \"\",\r\n    price: \"\",\r\n    pricetypes: [\"Hourly\", \"Job\", \"Daily\"],\r\n    pricetype: \"\",\r\n    images: [],\r\n }\r\n  \r\n  const [values, setValues] = useState(initialState);\r\n  console.log(\"values before set\",values);\r\n\r\n   useEffect( () => {\r\n     loadVendorCategory();\r\n     loadCategories();\r\n   }, []);\r\n\r\n   const loadVendorCategory= () => {\r\n        setLoading(true);\r\n        getVendorCategory(match.params.id)\r\n        .then ( (cat) => {\r\n            setValues({...values, ...cat.data});\r\n            fetchCategorySubs(cat.data.category._id)\r\n              .then ( res => setSubOptions(res.data));\r\n             let arr= [];\r\n             cat.data.subcategories.map( (s) => {\r\n                 arr.push(s._id)\r\n             });\r\n             console.log(\"ARR\", arr);\r\n             setArrOfSubIds((prev) => arr); \r\n        })\r\n        .catch ( (err) => {\r\n            console.log(err);\r\n            toast.error(err.response);\r\n        })\r\n   }\r\n\r\n   const loadCategories= () => {\r\n       fetchCategories().then ( (res) => setCategories( res.data));\r\n   }   \r\n\r\n   const handleChange= (e) => {  \r\n      setValues({ ...values, [e.target.name] : e.target.value});     \r\n    // console.log((\"Values from handlechange\"),values);\r\n   }\r\n\r\n  const handleCategoryChange= (e) => {\r\n    e.preventDefault();   \r\n    setValues({ ...values,subcategories: []});\r\n    setSelectedCategory(e.target.value);\r\n    fetchCategorySubs(e.target.value)\r\n    .then ( (res) => {      \r\n      setSubOptions(res.data)\r\n    })\r\n    .catch ( (err) => {\r\n       console.log(err);\r\n    })\r\n    //if the user clicks on the original category, fetch the previously selected subcats\r\n    if( values.category._id === e.target.value) {\r\n        loadVendorCategory();\r\n    }\r\n    setArrOfSubIds([]);    \r\n  }\r\n\r\n   const handleSubmit= (e) => {\r\n       e.preventDefault();\r\n       setLoading(true);\r\n       values.subcategories= arrOfSubIds;\r\n       values.category= selectedCategory ? selectedCategory : values.category;\r\n       updateVendor( match.params.id, values, user.token)\r\n       .then ( (res) => {\r\n         setLoading(false);\r\n         toast.success(\"Vendor categories updated successfully !!!!\");\r\n         history.push(`/vendor/vendorcatlistuser/${match.params.id}`);\r\n       })\r\n       .catch ( (err) => {\r\n         setLoading(false);\r\n         console.log(err);\r\n         toast.error(err.response.data.err);\r\n       })\r\n   }\r\n\r\n    return (\r\n        <div className= \"row\">\r\n          <div className= \"col col-md-2\">\r\n            <VendorNav />\r\n          </div>\r\n          <div className= \"col col-md-10 \">   \r\n          <section className= \"vendor-center\">      \r\n            <h2 className= \"font-weight-bold mb-2\">Change Categories </h2>\r\n            {/* {JSON.stringify(values)} */}\r\n\r\n            <div className= \"p3 ml-2\">\r\n                  <FileUpload\r\n                     values= {values}\r\n                     setValues= {setValues}\r\n                     setLoading= {setLoading}\r\n                   />\r\n\r\n               </div>  \r\n            <VendorUpdateForm \r\n                handleSubmit= {handleSubmit}\r\n                handleChange= {handleChange}\r\n                setvalues= {setValues}\r\n                values= {values}\r\n                user= {user}\r\n                categories= {categories}\r\n                subOptions= {subOptions}\r\n                arrOfSubIds= {arrOfSubIds}\r\n                setArrOfSubIds= {setArrOfSubIds}\r\n                handleCategoryChange= {handleCategoryChange}\r\n                selectedCategory= {selectedCategory}\r\n            />\r\n            </section>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VendorEdit;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\routes\\AdminRoute.js",["820"],"import React,{useState,useEffect} from \"react\";\r\nimport { Route,Redirect} from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {adminUser} from \"../../actions/auth\";\r\n// import CounterToRedirect from \"./CounterToRedirect\";\r\n\r\nconst AdminRoute = ({ children, ...rest }) => {\r\n\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n  console.log(\"User Role\",user)\r\n//   debugger\r\n  const [admin, setAdmin] = useState(false);\r\n\r\n  useEffect( () => {\r\n      if (user && user.token) {\r\n          adminUser(user.token)\r\n          .then ( res => {\r\n             console.log(\"Admin route response\",res);\r\n              setAdmin(true);\r\n      })\r\n      .catch ( (err) => {\r\n          console.log(\"Admin route err\",err);\r\n          setAdmin(false);\r\n      })\r\n      }\r\n  }, [user]);\r\n console.log(\"ADMIN VAL\",admin);\r\n   return  <Route {...rest}  />\r\n\r\n  // return admin ? <Route {...rest}  />  : <Redirect  to= \"/\" />\r\n    // <CounterToRedirect />\r\n  \r\n}\r\n\r\nexport default AdminRoute;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorProducts\\VendorCreate.js",["821"],"import React, {useState, useEffect} from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport {useSelector} from \"react-redux\";\r\nimport VendorNav from \"../../navigation/VendorNav\";\r\nimport {addVendor} from \"../../../actions/vendor\";\r\nimport VendorForm from \"./VendorForm\";\r\nimport {fetchCategories, fetchCategorySubs} from \"../../../actions/category\";\r\nimport {fetchVendorInfo} from \"../../../actions/vendorInfo\";\r\nimport FileUpload from \"../../utils/FileUpload\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nconst VendorCreate = () => {\r\n\r\n const {user} = useSelector( state => ({...state}));   \r\n\r\n const initialState= {  \r\n   userId: user._id, \r\n   vendorInfoId: \"\" ,\r\n   description: \"\",\r\n   categories: [],\r\n   category: \"\",\r\n   subcategories: [],\r\n   subcategory: \"\",\r\n   price: \"\",\r\n   pricetypes: [\"Hourly\", \"Job\", \"Daily\"],\r\n   pricetype: \"Hourly\",\r\n   images: []\r\n}\r\n const [values, setValues] = useState(initialState); \r\n const [loading,setLoading] = useState(false);\r\n const [subOptions, setSubOptions] = useState([]);\r\n const [ showSubs, setShowSubs] = useState(false);\r\n const [vendor, setvendor] = useState(\"\");\r\n\r\n\r\n useEffect( () => {\r\n    getCategories();\r\n    getVendorInfo();\r\n }, []);\r\n\r\n const getCategories= () => {\r\n    fetchCategories().then( (res) => setValues({ ...values, subcategories:[], categories: res.data}));\r\n }\r\n\r\n const getVendorInfo = () => {\r\n    setLoading(true);\r\n    fetchVendorInfo(user.email)\r\n       .then ( (v) =>  {\r\n          setLoading(false);        \r\n          setvendor(v.data);\r\n       })      \r\n       .catch ( (err) => {\r\n          setLoading(false);\r\n          console.log(err);\r\n          toast.error(`Vendor info not found for user: ${user.email}`);\r\n       })\r\n }\r\n\r\n  const handleChange= (e) => {  \r\n        setValues({ ...values, [e.target.name] : e.target.value, vendorInfoId: vendor._id});     \r\n        console.log((\"Values from handlechange\"),values);\r\n    }\r\n\r\n  const handleCategoryChange= (e) => {\r\n    e.preventDefault();   \r\n    setValues({ ...values,subcategories: [], category: e.target.value});\r\n    fetchCategorySubs(e.target.value)\r\n    .then ( (res) => {      \r\n      setSubOptions(res.data)\r\n    })\r\n    .catch ( (err) => {\r\n       console.log(err);\r\n    })\r\n    setShowSubs(true);\r\n  }\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        console.log(\"Values before submit\",values);\r\n        setValues({ ...values,vendorInfoId: vendor._id,userId: user._id}); \r\n        setLoading(false);\r\n        console.log(\"Values after set values vendor submit\",values);\r\n      \r\n        addVendor(values, user.token)\r\n        .then ( (res) => {\r\n            setLoading(false);\r\n            window.alert(`Vendor is created successfully !!!!` );\r\n            window.location.reload();\r\n        })\r\n        .catch ( (err) => {\r\n           console.log(err);\r\n           setLoading(false);\r\n           toast.error(err.response);            \r\n        });        \r\n   }\r\n  \r\n\r\n    return (\r\n        <div className= \"row\">\r\n           <div className= \"col col-md-2\">\r\n              <VendorNav />\r\n           </div>\r\n           <div className= \"col col-md-10\">\r\n             <section className= \"vendor-center\">\r\n             { loading ? <LoadingOutlined  className= \"text-danger h1\"/>\r\n                       : <h2 className= \"card-header font-weight-bold\">Vendor Categories Form</h2>  \r\n             }\r\n             \r\n              <div className = \"card \" >\r\n               <div className= \" card-body mb-1 \" > \r\n\r\n               <div className= \"p3\">\r\n                  <FileUpload\r\n                     values= {values}\r\n                     setValues= {setValues}\r\n                     setLoading= {setLoading}\r\n                   />\r\n\r\n               </div>  \r\n\r\n              <VendorForm \r\n                 handleSubmit= {handleSubmit}\r\n                 handleChange= {handleChange}\r\n                 vendorInfoId={vendor._id}  \r\n                 vendorName= {vendor.name}\r\n                 userId={user._id}\r\n                 values= {values}\r\n                 setValues= {setValues}\r\n                 handleCategoryChange= {handleCategoryChange}\r\n                 subOptions= {subOptions}\r\n                 showSubs= {showSubs}                 \r\n              /> \r\n             </div>\r\n             </div>\r\n             </section>\r\n           </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default VendorCreate;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorInfo\\VendorInfoCreate.js",["822","823","824"],"import React, {useState, useEffect} from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport {useSelector} from \"react-redux\";\r\nimport VendorNav from \"../../navigation/VendorNav\";\r\nimport {addVendorInfo} from \"../../../actions/vendorInfo\";\r\nimport VendorInfoForm from \"../VendorInfo/VendorInfoForm\";\r\n\r\nconst VendorInfoCreate = () => {\r\n\r\n const {user} = useSelector( state => ({...state})); \r\n \r\n const initialState= {  \r\n    userId: user._id,\r\n    email: user.email,    \r\n    postcode: \"\",\r\n    name: \"\",\r\n    houseNo: \"\",\r\n    addressLine1: \"\",\r\n    addressLine2: \"\",\r\n    city: \"\",\r\n    county: \"\",\r\n    country: \"United Kingdom\",\r\n    website: \"\"\r\n }\r\n const [values, setValues] = useState(initialState); \r\n const [loading,setLoading] = useState(false);\r\n\r\n   \r\n const {\r\n  email, \r\n  userId,\r\n  postcode,\r\n  name,\r\n  houseNo,\r\n  addressLine1,\r\n  addressLine2,\r\n  city,\r\n  county,  \r\n  country,\r\n  website\r\n}  = values;\r\n\r\n  const handleChange= (e) => {  \r\n        setValues({ ...values, [e.target.name] : e.target.value});\r\n        console.log(e.target.name, \".....\", e.target.value);\r\n    }\r\n      \r\n  const handleSubmit = (e) => {       \r\n        e.preventDefault();\r\n        setLoading(true);\r\n        setValues({ ...values,  userId: user._id, email:user.email});        \r\n        addVendorInfo(values, user.token)\r\n        .then ( (res) => {\r\n            setLoading(false);\r\n            window.alert(`Vendor Information is created successfully for ${user.email}` );\r\n            window.location.reload();\r\n        })\r\n        .catch ( (err) => {\r\n           console.log(err);\r\n           setLoading(false);\r\n           toast.error(err.response);            \r\n        });        \r\n   }  \r\n\r\n    return (\r\n        <div className= \"row\">\r\n           <div className= \"col col-md-2\">\r\n              <VendorNav />\r\n           </div>\r\n           <div className= \"col col-md-10\">\r\n                           \r\n              <section className= \"vendor-center\">  \r\n\r\n              { loading ? <h2>Loading....</h2> \r\n               : <h2 className=\"card-header font-weight-bold\" > Vendor Information </h2>  }    \r\n \r\n             <div className = \"card  mb-2\" >\r\n             <div className= \" card-body mb-1 \" >   \r\n              <VendorInfoForm \r\n                 handleSubmit= {handleSubmit}\r\n                 handleChange= {handleChange}\r\n                 email= {user.email}\r\n                 userId={user._Id}\r\n                 user={user}                              \r\n                 name= {name}\r\n                 postcode= {postcode}\r\n                 houseNo = {houseNo}\r\n                 addressLine1= {addressLine1}\r\n                 addressLine2= {addressLine2}\r\n                 city= {city}\r\n                 county= {county}\r\n                 country= {country} \r\n                 website= {website}                \r\n                 values= {values}\r\n                 setValues= {setValues}\r\n              /> \r\n             </div>\r\n             </div>\r\n             </section>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VendorInfoCreate;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorInfo\\VendorsInfoList.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorInfo\\VendorInfoEdit.js",["825","826"],"import React, {useState, useEffect} from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport {useSelector} from \"react-redux\";\r\nimport VendorNav from \"../../navigation/VendorNav\";\r\nimport {fetchVendorInfo,editVendorInfo} from \"../../../actions/vendorInfo\";\r\nimport VendorInfoForm from \"./VendorInfoForm\";\r\n\r\n\r\nconst VendorInfoEdit = ({match}) => {\r\n\r\n const {user} = useSelector( state => ({...state}));   \r\n const [values, setValues] = useState([]); \r\n const [loading,setLoading] = useState(false);\r\n const email= match.params.email\r\n\r\n {console.log(\"MATCH\",match)}\r\n  useEffect( () => {\r\n     getVendorInfo();\r\n },[]);\r\n\r\n const getVendorInfo= () => \r\n {\r\n    fetchVendorInfo(user.email)\r\n      .then ( res => setValues(res.data))\r\n      .catch ( (err)  => {\r\n         console.log(\"No vendor info was found\",err);         \r\n      })\r\n } \r\n\r\n \r\n\r\nconsole.log(\"Authtoken:\",user.token );\r\n\r\n  const handleChange= (e) => {  \r\n        setValues({ ...values, [e.target.name] : e.target.value});\r\n        console.log(e.target.name, \".....\", e.target.value);\r\n    }\r\n\r\n    const handleCity = (e) => {\r\n      setValues({ ...values, [e.target.name] : e.target.value});\r\n    }\r\n\r\n    const handleCounty = (e) => {\r\n      setValues({ ...values, [e.target.name] : e.target.value});\r\n    }\r\n\r\n    console.log(\"values from vendor edit\",values);\r\n    const {\r\n     postcode,\r\n     name,\r\n     houseNo,\r\n     addressLine1,\r\n     addressLine2,\r\n     city,\r\n     county,\r\n     country,\r\n     website\r\n   }  = values;\r\n\r\n\r\n      \r\n  const handleSubmit = (e) => {       \r\n        e.preventDefault();\r\n        setLoading(true);  \r\n        console.log(\"Values before EDIT\",values, values.county);           \r\n        editVendorInfo(email,values, user.token)\r\n        .then ( (res) => {\r\n            setLoading(false);\r\n            window.alert(`Vendor Information is changed successfully for ${user.email}` );\r\n            window.location.reload();\r\n        })\r\n        .catch ( (err) => {\r\n           console.log(err);\r\n           setLoading(false);\r\n           toast.error(err.response);            \r\n        });        \r\n   }  \r\n\r\n    return (\r\n        <div className= \"row\">\r\n           <div className= \"col col-md-2\">\r\n              <VendorNav />\r\n           </div>\r\n           <div className= \"col col-md-10\">\r\n                           \r\n              <section className= \"vendor-center\">  \r\n\r\n              { loading ? <h2>Loading....</h2> \r\n               : <h2 className=\"card-header font-weight-bold\" > Edit Vendor Information </h2>  }    \r\n \r\n             <div className = \"card  mb-2\" >\r\n             <div className= \" card-body mb-1 \" >   \r\n              <VendorInfoForm \r\n                 handleSubmit= {handleSubmit}\r\n                 handleChange= {handleChange}\r\n                 handleCity={handleCity}\r\n                 handleCounty= {handleCounty}\r\n                 email= {user.email}                                            \r\n                 name= {name}\r\n                 postcode= {postcode}\r\n                 houseNo = {houseNo}\r\n                 addressLine1= {addressLine1}\r\n                 addressLine2= {addressLine2}\r\n                 city= {city}\r\n                 county={county}\r\n                 country= {country}                 \r\n                 website= {website}                \r\n                 values= {values}\r\n                 setValues= {setValues}\r\n              /> \r\n                         \r\n             </div>\r\n             </div>\r\n             </section>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VendorInfoEdit;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Vendors\\VendorCatDelete.js",["827","828","829","830"],"import React, {useState, useEffect} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport AdminMenu from \"../AdminMenu\";\r\nimport Modal from \"../../Modal\";\r\nimport history from \"../../../history\";\r\nimport { toast } from \"react-toastify\";\r\nimport {deleteVendor, getAllVendorCategories, getVendorCategory} from \"../../../actions/vendor\";\r\n\r\n\r\nconst VendorCatDelete = (props) => {\r\n\r\n    const {user} = useSelector( state => ({...state})); \r\n    const [vendors, setVendors] = useState([]);\r\n    const [loading,setLoading] = useState(false);\r\n    const [ vendor, setVendor] = useState(\"\");\r\n    const id = props.match.params.id;\r\n    \r\n    console.log(\"ID\", props.match.params);\r\n\r\n    useEffect ( () => {\r\n       loadVendorCategories();\r\n       loadAllVendorCategories();      \r\n    }, []);\r\n\r\n    const loadAllVendorCategories= () => {         \r\n        getAllVendorCategories()\r\n          .then ( (res) => setVendors(res.data));          \r\n          };\r\n\r\n    const loadVendorCategories= () => {\r\n        getVendorCategory(id)\r\n        .then ( (v) => setVendor(v.data))\r\n        .catch ( (err) => {\r\n            console.log(err);\r\n            toast.error(\"No vendor category was found\");\r\n        })\r\n    }\r\n    \r\n     const addRoute= () => {\r\n        return(\"/vendor/vendorcatlist\");\r\n     } \r\n    const handleDelete = () => {\r\n        setLoading(true);\r\n        console.log(\"ID & Token\", id,user.token);\r\n        deleteVendor(id, user.token)\r\n       .then ( res => {\r\n          setLoading(false);\r\n          toast.success(`vendor Category deleted successfully: ${id}`);\r\n          getAllVendorCategories(); \r\n       })          \r\n        .catch( (err) => {\r\n            console.log(err);\r\n            toast.error(`Could not delete the vendor category for:${id}`)\r\n        })\r\n    }\r\n\r\n    const renderActions = () => {\r\n       \r\n        return (\r\n           <React.Fragment>\r\n           <button onClick= { () => {handleDelete()}    } \r\n              type=\"submit\" className=\" btn btn-danger primary-button mr-3\">Yes</button>\r\n           <Link to= \"/vendor/vendorcatlist\" \r\n                 type=\"button\" className= \"btn btn-secondary primary-button\">No</Link>\r\n           </React.Fragment>\r\n           );\r\n        }\r\n  \r\n      const renderContent= () => {\r\n         \r\n        //  if(!id) {\r\n            return (\"Are you sure you want to delete this vendor category?\");\r\n         }\r\n            // return(`Are you sure you want to delete the vendor category: ${vendor.subcategories[0].name}`);\r\n        // }\r\n\r\n  return (   \r\n     <div>\r\n       <AdminMenu  \r\n        addRoute= {addRoute()}\r\n        />         \r\n        <Modal \r\n            title= \"Delete Vendor Categories\"\r\n            content= {renderContent()}\r\n            actions= {renderActions()}\r\n            onDismiss = {() => history.push(\"/vendor/vendorcatlist\") }\r\n         />\r\n    </div>    \r\n    \r\n  );\r\n    \r\n}\r\n\r\nexport default VendorCatDelete;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorCalendar\\VendorCalendarCreate.js",["831","832","833","834","835","836"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport VendorNav from \"../../navigation/VendorNav\";\r\nimport { DatePicker } from \"antd\";\r\nimport { fetchTimeslots } from \"../../../actions/timeslot\";\r\nimport { addVendorCalendar, readVendorCalendar, fetchVendorCalendarCurrent } from \"../../../actions/vendorCalendar\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nconst VendorCalendar = ({ match }) => {\r\n\r\n  const { user } = useSelector(state => ({ ...state }));\r\n  const [fromDate, setFromDate] = useState(\"\"); // DatePicker = DD/MM/YYYY | API need to conver in YYYY-MM-DD\r\n  const [timeslots, setTimeslots] = useState([]);\r\n  const [currentBooking, setCurrentBooking] = useState('');\r\n  const [clicked, setClicked] = useState([]);\r\n  const [caldata, setCaldata] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  let currentDate = [];\r\n\r\n\r\n  useEffect(() => {\r\n    fetchTimeslots().then(res => setTimeslots(res.data));\r\n  }, []);\r\n\r\n\r\n  //   { loading ?  <h2>\"loading...\"</h2> : console.log(currentBooking)\r\n  //   //  : console.log(\"CURRENT BOOKING\",currentDate= moment(currentBooking.availability[0].start).format(\"YYYY-MM-DD\"), fromDate)\r\n  // }\r\n  // { loading ?  <h2>\"loading...\"</h2>\r\n  //   :  currentDate= moment(currentBooking.availability[0].start).format(\"YYYY-MM-DD\") \r\n  // }\r\n\r\n  const getDateForApiFormat = (dateStr) => {\r\n    let dtstr = \"\";\r\n    if (dateStr) {\r\n      let dtArr = dateStr.split(\"/\");\r\n      if (dtArr && dtArr.length) {\r\n        dtstr = dtArr[2] + \"-\" + dtArr[1] + \"-\" + dtArr[0];\r\n      }\r\n    }\r\n    return dtstr;\r\n  }\r\n\r\n  const handleClick = (e, t, index) => {\r\n    e.preventDefault();\r\n    timeslots && timeslots.map((slot, i) => {\r\n      if (clicked.includes(index)) {\r\n        const temp = [...clicked];\r\n        const tempCal = [...caldata];\r\n        // removing the element using splice\r\n        temp.splice(temp.indexOf(index), 1);\r\n        tempCal.splice(temp.indexOf(index), 1);\r\n        // updating the list\r\n        setClicked(temp);\r\n        setCaldata(tempCal);\r\n        return;\r\n      }\r\n      if (i === index) {\r\n        setClicked(prevArray => [...prevArray, i]);\r\n        setCaldata(prevArray => [...prevArray, e.target.value]);\r\n      } else {\r\n        return slot\r\n      }\r\n    })\r\n  }\r\n\r\n  const loadCurrentBookings = async () => {\r\n    setLoading(true);\r\n    let dtstr = getDateForApiFormat(fromDate);\r\n    return await fetchVendorCalendarCurrent(user._id, dtstr)\r\n      .then(res => {\r\n        // https://stackoverflow.com/questions/54069253/usestate-set-method-not-reflecting-change-immediately\r\n        setCurrentBooking(res.data);\r\n        setLoading(false);\r\n        return res.data;\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let currentBooking = await loadCurrentBookings();\r\n    let currentDateStr = \"\";\r\n    console.log(\"CURRE DATE\", currentBooking);\r\n\r\n    if (currentBooking) {\r\n      currentDate = moment(currentBooking.availability[0].start).format(\"YYYY-MM-DD\");\r\n      currentDateStr = moment(currentBooking.availability[0].start).format(\"DD/MM/YYYY\");\r\n    }\r\n\r\n    let dtstr = getDateForApiFormat(fromDate);\r\n\r\n    if (!fromDate) {\r\n      toast.error(\"Please select the booking date\");\r\n    } else if (caldata.length === 0) {\r\n      toast.error(\"Please select the slots to book\");\r\n    } else if (currentDateStr == fromDate) {\r\n      toast.error(\"Bookings already exist for this date. Please go to edit bookings\");\r\n    } else {\r\n      setLoading(true);\r\n      addVendorCalendar(user._id, {\r\n        vendorInfoId: user._id,\r\n        availability: [{\r\n                        start: dtstr,\r\n                        timeslots: caldata\r\n                      }]\r\n        }, user.token)\r\n        .then((res) => {\r\n          setLoading(false);\r\n          toast.success(\"Successfully created calendar booking\");\r\n          // setTimeout( () => {\r\n          //   window.location.reload();\r\n          // },1000);\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          setLoading(false);\r\n          if (err.response === 400)\r\n            toast.error(err.response.data);\r\n          else\r\n            toast.error(err.response);\r\n        })\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col col-md-2 mt-1\">\r\n        <VendorNav />\r\n      </div>\r\n      <div className=\"col col-md-10\">\r\n        {(loading)\r\n          ? <h2>Loading.....</h2>\r\n          : <h2 className=\"font-weight-bold\">Add your Availability</h2>\r\n        }\r\n\r\n        <form onSubmit={handleSubmit} >\r\n          <div className=\"col d-flex justify-content-center\">\r\n            <DatePicker\r\n              className=\"site-calendar-card mt-1 ml-4 h6\"\r\n              placeholder=\"Enter booking date\"\r\n              size=\"large\"\r\n              format=\"DD/MM/YYYY\"\r\n              onChange={(date, dateString) =>\r\n                setFromDate(dateString)\r\n              }\r\n              disabledDate={(current =>\r\n                current && current.valueOf() < moment().subtract(1 - \"days\"))}\r\n            />\r\n\r\n          </div>\r\n          <br />\r\n          {timeslots && timeslots.map((t, index) => (\r\n            <div className=\"font-weight-bold d-flex justify-content-center mt-1\"\r\n              key={t._id}>\r\n              <button className={!clicked.includes(index) ? \"btn btn-primary\" : \"btn btn-danger\"}\r\n                value={t._id}\r\n                onClick={(e) => handleClick(e, t, index)}\r\n              >\r\n                {t.startSlot} - {t.endSlot} </button>\r\n            </div>\r\n          ))\r\n          }\r\n\r\n          <div className=\"row  mt-3\">\r\n            <div className=\"col col-md-6 d-flex justify-content-end\" >\r\n              <button className=\"btn btn-secondary font-weight-bold\"\r\n                type=\"submit\"> Submit your Availability</button>\r\n            </div>\r\n\r\n            <div className=\"col col-md-6 d-flex justify-content-start\">\r\n              <Link to={`/vendor/vendorcallist/${user._id}`}\r\n                type=\"button\" className=\"btn btn-secondary font-weight-bold\">Back</Link>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VendorCalendar;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorCalendar\\VendorCalendarList.js",["837"],"import React, {useState, useEffect} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport VendorNav from \"../../navigation/VendorNav\";\r\nimport {fetchVendorCalendar} from \"../../../actions/vendorCalendar\";\r\nimport VendorCalCard from \"../../cards/VendorCalCard\";\r\n\r\nconst VendorCalendarList = () => {\r\n\r\n    const {user} = useSelector( state => ({...state}));\r\n    const [vendorCal, setVendorCal] = useState([]);\r\n    const [loading, setLoading] = useState(\"false\");\r\n\r\n   useEffect (() => {\r\n      loadVendorCalendar();\r\n   }, []);\r\n\r\n  \r\n   const loadVendorCalendar= () => {\r\n    setLoading(true);\r\n    fetchVendorCalendar(user._id)\r\n    .then (res => setVendorCal(res.data));\r\n    setLoading(false);\r\n   }\r\n   \r\n  \r\n    return (\r\n        <div className= \"row\">\r\n         <div className= \"col col-md-3\">\r\n        <VendorNav />\r\n        </div>  \r\n       <div className = \"col col-md-9 \"> \r\n        <div className= \"row\">\r\n         <li className= \"col d-flex justify-content-end mb-2 font-weight-bold admin-class\">\r\n            <Link to= {`/vendor/vendorcalcreate/${user._id}`} className= \"nav-link font-weight-bold\"><button>Add New Calendar Availability</button></Link>\r\n         </li>\r\n         <li className= \"col d-flex justify-content-start admin-class mb-2\">\r\n            <Link to= {`/vendor/vendorcalbulk/${user._id}`} className= \"nav-link\"><button>Add Bulk Booking</button></Link>\r\n         </li>\r\n         </div> \r\n         { loading ? <h4>Loading....</h4>\r\n                      :  <h4 className= \"font-weight-bold\"> Your Current Bookings</h4>\r\n         }\r\n\r\n         <div className= \"row pb-3\">\r\n            { vendorCal.map( (cal) => {\r\n             return (\r\n              <div className= \"col col-md-4\"  key= {cal._id}>                              \r\n               <VendorCalCard  cal= {cal}                                \r\n               />\r\n               </div>\r\n             )\r\n            })\r\n            } \r\n            </div> \r\n           \r\n         <div>\r\n\r\n         </div>  \r\n       </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default VendorCalendarList;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorProducts\\VendorListUser.js",["838"],"import React, {useState, useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport VendorNav from \"../../navigation/VendorNav\";\r\nimport {getVendorCategoriesUser} from \"../../../actions/vendor\";\r\nimport AdminVendorCard from \"../../cards/AdminVendorCard\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst VendorListUser = () => {\r\n\r\n  const {user} = useSelector( state => ({...state}));\r\n  const [categories, setCategories] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect( () => {\r\n     loadVendorCategoriesUser();     \r\n  },[]);\r\n\r\n   const loadVendorCategoriesUser= () => {\r\n    setLoading(true);\r\n    getVendorCategoriesUser(user._id)\r\n    .then ( res => {\r\n        setCategories(res.data)\r\n        setLoading(false);\r\n    })\r\n    .catch ( err => {\r\n        setLoading(false);\r\n        console.log(err);\r\n    })\r\n  }\r\n\r\n        \r\n   return(\r\n    <div className= \"container-fluid\">\r\n        <div className= \"row ml-0 text-align-top\">\r\n           <div className= \"col-md-2 mt-2 \">\r\n               <VendorNav />   \r\n           </div>  \r\n           <div className= \"col col-md-10\">\r\n           \r\n           <li className= \"nav-item col d-flex justify-content-center admin-class mb-2\">\r\n            <Link to= \"/vendor/vendorcreate\" className= \"nav-link\">Add New Categories</Link>\r\n          </li>  \r\n            { loading ? <h4>Loading....</h4>\r\n                      :  <h4 className= \"font-weight-bold\"> Current Categories</h4>\r\n            }\r\n            <div className= \"row pb-3\">\r\n            { categories.map( (cat) => {\r\n             return (\r\n              <div className= \"col col-md-4\"  key= {cat._id}>                              \r\n               <AdminVendorCard  cat= {cat}                                \r\n               />\r\n               </div>\r\n             )\r\n            })\r\n            } \r\n            </div>         \r\n             \r\n           </div>\r\n        </div>\r\n    </div>\r\n   )\r\n}\r\n\r\n\r\nexport default VendorListUser;\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorCalendar\\VendorCalendarBulk.js",["839","840","841"],"import React, {useState} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport VendorNav from \"../../navigation/VendorNav\";\r\nimport {addBulkBooking,addBulkAvail} from \"../../../actions/vendorCalendar\";\r\nimport BulkTimeslots from \"./BulkTimeslots\";\r\nimport {DatePicker} from \"antd\";\r\nimport {toast} from \"react-toastify\";\r\nimport moment from \"moment\";\r\n\r\nconst VendorCalendarBulk = () => {\r\n\r\n    const {user} = useSelector( state => ({...state}));\r\n    const [fromDate, setFromDate] = useState(\"\");\r\n    const [toDate, setToDate] = useState(\"\");\r\n    const [loading,setLoading] = useState(false);\r\n    const days= [];\r\n\r\n   \r\n    const handleSubmitUnavail= (e) => {\r\n        e.preventDefault();\r\n        setLoading(true); \r\n        const noOfDaysU= moment(toDate).diff(moment(fromDate),\"days\") +1;\r\n        console.log(\"NO OF days\",noOfDaysU);\r\n        for (let i=0; i< noOfDaysU; i++) {\r\n            days.push( moment(fromDate).add(i, 'days')+1);\r\n          }\r\n          console.log(\"DAYS\",days);\r\n        for (let j=0; j <= days.length; j++)\r\n          {\r\n            addBulkBooking(user._id,{vendorInfoId: user._id,                      \r\n                                 start: days[j]                                        \r\n                             },user.token)\r\n            .then ( (res) => {\r\n               console.log(res.data);\r\n            })\r\n           .catch ( err => {\r\n            console.log(err);\r\n            setLoading(false);\r\n            if(err.response===400) \r\n                  toast.error(err.response.data);\r\n            else\r\n                  toast.error(err.response);\r\n            })   \r\n         }\r\n           setLoading(false);\r\n           toast.success(\"Successfully created bulk calendar bookings\");      \r\n      } \r\n\r\n   const handleSubmitAvail= (e) => {\r\n        console.log(\"IN handle submit AVAIL\");\r\n        <BulkTimeslots \r\n          fromDate= {fromDate}\r\n          toDate={toDate}\r\n        />\r\n      } \r\n\r\n\r\nreturn (\r\n  <div className= \"row\">\r\n      <div className=\"col col-md-3 mt-1\">\r\n           <VendorNav />\r\n       </div>\r\n       <div className= \" col col-md-9 mt-2 \">\r\n       <h2 className=\"font-weight-bold\">Add your Bulk Booking</h2>\r\n       <form>\r\n        <div className= \"col d-flex justify-content-center\" >\r\n       <DatePicker\r\n              className=\"site-calendar-card mt-2 ml-4 h6\"\r\n              placeholder=\"Enter booking start date\"\r\n              size= \"large\"\r\n            //   format= \"DD/MM/YYYY\"          \r\n              onChange= {(date,dateString) => \r\n                        setFromDate(dateString)\r\n                       }\r\n              disabledDate= { (current => \r\n                    current && current.valueOf() < moment().subtract( 1- \"days\"))}\r\n        />  \r\n        <DatePicker\r\n              className=\"site-calendar-card mt-2 ml-4 h6\"\r\n              placeholder=\"Enter booking end date\"\r\n              size= \"large\"\r\n            //   format= \"DD/MM/YYYY\"          \r\n              onChange= {(date,dateString) => \r\n                        setToDate(dateString)\r\n                       }\r\n              disabledDate= { (current => \r\n                    current && current.valueOf() < moment().subtract( 1- \"days\"))}\r\n        /> \r\n          </div>\r\n          <div  className=\"row mb-4\">\r\n              <div className= \"col d-flex justify-content-end mt-3\">\r\n                 <Link to= {`/vendor/bulktimeslots/${user._id}/${fromDate}/${toDate}`} className= \"btn btn-primary font-weight-bold\">Submit your Bulk Availability</Link>\r\n               </div>\r\n               <div className= \"col d-flex justify-content-start mt-3\">\r\n                <button className=\"btn btn-danger font-weight-bold\"\r\n                      onClick= {handleSubmitUnavail}> Submit your Bulk Unavailability\r\n                </button>\r\n               </div>\r\n           </div>\r\n            <div className= \"row mt-4 d-flex justify-content-center\">\r\n\r\n                <p className= \"font-weight-bold \"> *Book block dates of all slots available or your holiday/unavailable dates</p>\r\n            </div>\r\n            \r\n         </form>\r\n       </div>\r\n\r\n  </div>\r\n\r\n)\r\n\r\n}\r\n\r\nexport default VendorCalendarBulk;\r\n\r\n\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Vendors\\VendorCatList.js",["842","843"],"import React, {useState, useEffect} from \"react\";\r\nimport AdminNav from \"../../navigation/AdminNav\";\r\nimport {getAllVendorCategories} from \"../../../actions/vendor\";\r\nimport AdminVendorCard from \"../../cards/AdminVendorCard\";\r\nimport {EditOutlined, DeleteOutlined} from \"@ant-design/icons\";\r\n\r\nconst VendorCatList = () => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect( () => {\r\n     loadVendorCategories();     \r\n  },[]);\r\n\r\n  const loadVendorCategories= () => {\r\n    setLoading(true);\r\n    getAllVendorCategories()\r\n    .then ( res => {\r\n        setCategories(res.data);\r\n        setLoading(false);\r\n    })\r\n    .catch ( err => {\r\n        setLoading(false);\r\n        console.log(err);\r\n    })\r\n  }\r\n      \r\n   return(\r\n    <div className= \"container-fluid\">\r\n        <div className= \"row ml-0 text-align-top\">\r\n           <div className= \"col-md-2 mt-2 \">\r\n               < AdminNav />   \r\n           </div>  \r\n           <div className= \"col col-md-10\">\r\n            { loading ? <h4>Loading....</h4>\r\n                      :  <h4 className= \"font-weight-bold\">All Vendor Categories</h4>\r\n            }\r\n            <div className= \"row pb-3\">\r\n            { categories.map( (cat) => {\r\n             return (\r\n              <div className= \"col col-md-4\"  key= {cat._id}>                              \r\n               <AdminVendorCard  cat= {cat}                                \r\n               />\r\n               </div>\r\n             )\r\n            })\r\n            } \r\n            </div>         \r\n             \r\n           </div>\r\n        </div>\r\n    </div>\r\n   )\r\n}\r\n\r\n\r\nexport default VendorCatList;\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorCalendar\\BulkTimeslots.js",["844","845","846","847"],"import React, {useState, useEffect} from \"react\";\r\nimport {fetchTimeslots} from \"../../../actions/timeslot\";\r\nimport {toast} from \"react-toastify\";\r\nimport moment from \"moment\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {addBulkAvail} from \"../../../actions/vendorCalendar\";\r\n\r\n\r\nconst BulkTimeslots= ({match}) => {\r\n {console.log(\"NOW in bulk timeslots\",match.params)}\r\nconst {user} = useSelector( state => ({...state}));\r\nconst [timeslots, setTimeslots]= useState([]);\r\nconst [caldata,setCaldata] = useState([]);\r\nconst [loading,setLoading] = useState(false);\r\nconst [clicked,setClicked] = useState(\"\");\r\nconst days= [];\r\n\r\nuseEffect( () => {\r\n    fetchTimeslots().then( res => setTimeslots(res.data));\r\n  },[]);\r\n\r\n  const handleClick= (e,t,index) => {\r\n    e.preventDefault();\r\n    timeslots && timeslots.map ( (slot,i) => {\r\n      if (clicked.includes(index)) {\r\n        const temp = [...clicked];\r\n        const tempCal= [...caldata];\r\n       // removing the element using splice\r\n        temp.splice(temp.indexOf(index),1);\r\n        tempCal.splice(temp.indexOf(index),1);\r\n      // updating the list\r\n        setClicked(temp);\r\n        setCaldata(tempCal);\r\n        return;\r\n      }\r\n      if (i === index) {        \r\n        setClicked(prevArray => [...prevArray, i]);\r\n        setCaldata(prevArray => [...prevArray, e.target.value]);                 \r\n      } else {\r\n        return slot\r\n      }\r\n       })\r\n     }\r\n\r\n  const handleSubmit= (e) => {\r\n     e.preventDefault();\r\n     const noOfDaysA= moment(match.params.toDate).diff(moment(match.params.fromDate),\"days\");\r\n     console.log(\"NO OF days\",noOfDaysA);\r\n     for (let i=0; i< noOfDaysA; i++) {\r\n         days.push( moment(match.params.fromDate).add(i, 'days')+1);\r\n       }\r\n       console.log(\"DAYS\",days);\r\n     for (let j=0; j < days.length; j++)\r\n       {\r\n         addBulkAvail(user._id,{vendorInfoId: user._id, \r\n                                timeslots: caldata,                     \r\n                                start: days[j]                                        \r\n                              },user.token)\r\n         .then ( (res) => {\r\n            console.log(res.data);        \r\n        })\r\n        .catch ( err => {\r\n         console.log(err);\r\n         setLoading(false);\r\n         if(err.response===400) \r\n               toast.error(err.response.data);\r\n         else\r\n               toast.error(err.response);\r\n         })   \r\n      }\r\n        setLoading(false);\r\n        toast.success(\"Successfully created bulk calendar bookings\");    \r\n\r\n  }\r\n\r\nreturn (\r\n\r\n    <div className= \"row\"> \r\n      <div className= \"col col-md-12 d-flex justify-content-center\">\r\n     <form>\r\n\r\n         <div className= \"row\">\r\n\r\n             <h6 className= \"font-weight-bold mt-2 mb-2 mr-3\">Bulk booking from : {moment(match.params.fromDate).format(\"DD/MM/YYYY\")}</h6>\r\n             <h6 className= \"font-weight-bold mt-2 mb-2 ml-3\">To :  {moment(match.params.toDate).format(\"DD/MM/YYYY\")}</h6>\r\n         </div>\r\n          {timeslots && timeslots.map( (t, index) => (\r\n              <div className= \"font-weight-bold d-flex justify-content-center mt-1\"\r\n                   key= {t._id}>\r\n                <button className=  { !clicked.includes(index) ? \"btn btn-primary\" : \"btn btn-danger\"}\r\n                        value= {t._id}\r\n                        onClick= {(e) => handleClick(e,t,index)}                        \r\n                >  \r\n                 {t.startSlot} - {t.endSlot} </button>\r\n              </div>\r\n             ))\r\n         }\r\n          <div className= \"row  mt-3\">\r\n              <div className= \"col col-md-12 d-flex justify-content-center\" >\r\n               <button className=\"btn btn-secondary font-weight-bold\"\r\n                      onClick= {handleSubmit}> Submit your Bulk Availability</button>\r\n             </div>\r\n          </div>\r\n     \r\n     \r\n     </form>    \r\n     \r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n)\r\n\r\n}\r\n\r\nexport default BulkTimeslots;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\stripe\\StripeCallback.js",["848","849"],"import React, {useState, useEffect} from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {LoadingOutlined} from \"@ant-design/icons\";\r\nimport {getAccountStatus} from \"../../actions/stripe\";\r\nimport { updateUserInLocalStorage } from \"../../actions/user\";\r\n\r\nconst StripeCallback= ({history}) => {\r\n\r\n    console.log(\"IN stripe callback page....\");\r\n    \r\n    const dispatch= useDispatch();    \r\n    const {user} = useSelector((state) => ({...state}));\r\n      \r\n    console.log(\"USER\",user);\r\n    console.log(\"USER from stripe callback\", user.token);\r\n    // const {user} = useSelector((state) => ({...state}));\r\n    // console.log(\"TOKEN for use from state\", user.token);\r\n        \r\n    useEffect( () => {    \r\n      if (user && user.token) loadAccountStatus()\r\n     },[user]);\r\n    \r\n\r\n    const loadAccountStatus=  async () => {\r\n       try { \r\n        debugger\r\n        console.log(\"User token before call to fUNC\",user.token);\r\n        const res= await getAccountStatus(user.token);\r\n        console.log(\"USER ACCOUNT STATUS STRIPE CALLBACK\",res.data);\r\n        const userval = {_id: res.data._id,\r\n          email: res.data.email,\r\n          name:res.data.name,\r\n          role: res.data.role,\r\n          picture: res.data.picture,\r\n          address: res.data.address,\r\n          cart: res.data.cart,\r\n          stripe_account_id:res.data.stripe_account_id,\r\n          stripe_seller: res.data.stripe_seller,\r\n          stripeSession: res.data.stripeSession,\r\n          token:user.token\r\n         } \r\n        updateUserInLocalStorage( res.data, () => {\r\n        dispatch({\r\n            type:\"LOGGED_IN_USER\",\r\n            payload: userval\r\n          });\r\n          window.location.href= \"/vendor/dashboard\";\r\n        })\r\n       }\r\n      catch (err) {\r\n         console.log(err);\r\n      }\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-center p-5\">\r\n           <h1> In callback page.... </h1>\r\n           <LoadingOutlined \r\n               className= \"display-1 p5 text-danger\"\r\n           />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StripeCallback;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorCalendar\\VendorCalendarEdit.js",["850","851","852","853","854","855"],"import React, {useState, useEffect} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport VendorNav from \"../../navigation/VendorNav\";\r\nimport {DatePicker} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport {fetchTimeslots} from \"../../../actions/timeslot\";\r\nimport {readVendorCalendar,editVendorCalendar} from \"../../../actions/vendorCalendar\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nconst VendorCalendarEdit= ({match}) => {\r\n\r\nconst {user} = useSelector( (state) => ({...state}));\r\nconst [fromDate, setFromDate] = useState(\"\");\r\nconst [caldata, setCaldata] = useState([]);\r\nconst [toDate, setToDate] = useState(\"\");\r\nconst [timeslots, setTimeslots] = useState([]);\r\nconst [currentSlots, setCurrentSlots] = useState([]);\r\n\r\nconst [clicked, setClicked] = useState([]);\r\nconst [loading,setLoading] = useState(false);\r\n\r\nuseEffect( () => {    \r\n    fetchTimeslots().then( res => setTimeslots(res.data));\r\n},[]);\r\n\r\n{console.log(\"MATCH\", match.params.id)}\r\n\r\nuseEffect( () => {\r\n   readVendorCalendar(match.params.id)\r\n   .then ( (res) => {\r\n        setFromDate(res.data.availability[0].start)\r\n        setToDate (res.data.availability[0].end)\r\n        setCurrentSlots(res.data.availability[0].timeslots)\r\n   });  \r\n},[]);\r\n\r\nconsole.log(\"Current slots\",  currentSlots);\r\n\r\nconst getDateForApiFormat = (dateStr) => {\r\n    let dtstr = \"\";\r\n    if (dateStr && dateStr.includes(\"/\")) {\r\n      let dtArr = dateStr.split(\"/\");\r\n      if (dtArr && dtArr.length) {\r\n        dtstr = dtArr[2] + \"-\" + dtArr[1] + \"-\" + dtArr[0];\r\n      }\r\n    }\r\n    else{\r\n      dtstr = moment(dateStr).format(\"YYYY-MM-DD\");\r\n    }\r\n    return dtstr;\r\n  }\r\n\r\nconst handleClick= (e,t,index) => {\r\n    e.preventDefault();\r\n    timeslots && timeslots.map ( (slot,i) => {\r\n      if (clicked.includes(index)) {\r\n        const temp = [...clicked];\r\n        const tempCal= [...caldata];\r\n       // removing the element using splice\r\n        temp.splice(temp.indexOf(index),1);\r\n        tempCal.splice(temp.indexOf(index),1);\r\n      // updating the list\r\n        setClicked(temp);\r\n        setCaldata(tempCal);\r\n        return;\r\n      }\r\n      if (i === index) {        \r\n        setClicked(prevArray => [...prevArray, i]);\r\n        setCaldata(prevArray => [...prevArray, e.target.value]);                 \r\n      } else {\r\n        return slot\r\n      }\r\n       })\r\n       }\r\n\r\nconst handleSubmit= (e) => {  \r\n    e.preventDefault();\r\n    if (!fromDate ) {\r\n      toast.error(\"Please select the booking date\");\r\n    } else if (caldata.length === 0)\r\n    {\r\n      toast.error(\"Please select the slots to book\");\r\n    } else\r\n    {\r\n    setLoading(true);\r\n    let dtstr = getDateForApiFormat(fromDate);\r\n    editVendorCalendar(user._id, dtstr,{  availability: [ {timeslots:caldata }\r\n                                                 ]}, user.token)\r\n    .then ( (res) => {\r\n      setLoading(false); \r\n      setCaldata([]);\r\n      toast.success(\"Timeslots data is updated successfully\");  \r\n           \r\n    })\r\n    .catch (err => {\r\n      console.log(err);\r\n      setLoading(false);\r\n      if(err.response===400) \r\n         toast.error(err.response.data);\r\n      else\r\n          toast.error(err.response);\r\n    })\r\n  }\r\n}    \r\n\r\n\r\n    return (\r\n     <div className= \"row\">\r\n      <div className= \"col col-md-3\">\r\n        <VendorNav />\r\n      </div>\r\n      <div className=\"col col-md-9\">\r\n        { loading ? <h2>Loading....</h2> : <h2 className=\"font-weight-bold\">Update your Availability</h2>\r\n        }\r\n        <form>\r\n            <div className= \"col d-flex justify-content-center\">\r\n            { fromDate && <DatePicker\r\n              className=\"site-calendar-card  ml-4 h6\"\r\n              placeholder=\"From date\"\r\n              size= \"large\"   \r\n              defaultValue= {moment(fromDate, \"YYYY-MM-DD\")}  \r\n              format=\"DD/MM/YYYY\"            \r\n              onChange= {(date,dateString) => \r\n                        setFromDate(dateString)\r\n                       }\r\n              disabledDate= { (current => \r\n                current && current.valueOf() < moment().subtract( 1- \"days\"))}\r\n             /> \r\n            }\r\n            { toDate && <DatePicker\r\n              className=\"site-calendar-card  ml-4 h6\"\r\n              placeholder=\"To date\" \r\n              size=\"large\"   \r\n              defaultValue= {moment(toDate, \"YYYY-MM-DD\")}       \r\n              onChange= {(date,dateString) => \r\n                          setToDate(dateString)\r\n                          }\r\n              disabledDate= { (current => \r\n                    current && current.valueOf() < moment().subtract( 1- \"days\"))}\r\n             /> \r\n            }\r\n             </div>\r\n             <br />\r\n             {/* {JSON.stringify(currentSlots)} */}\r\n              {/* {currentSlots && currentSlots.map( (sl) => ( */}\r\n              {/* <div key= {sl._id}>     */}\r\n                {timeslots && timeslots.map( (t, index) => (\r\n               <div className= \"col  font-weight-bold d-flex justify-content-center mt-1 \"\r\n                   key= {t._id}>                         \r\n                        \r\n                        {/* {console.log(t,!currentSlots.some(slot => {return slot._id == t._id}),'t')} */}\r\n                        {}\r\n                 {/* {sl._id === t._id ? setClicked=== index : setClicked=== null} */}\r\n                 <button className=  { currentSlots.some(slot => {return slot._id == t._id})\r\n                                       ? \"btn btn-secondary\" : !clicked.includes(index) \r\n                                       ?  \"btn btn-primary\" :  \"btn btn-danger\"}\r\n                        value= {t._id}\r\n                       disabled = {currentSlots.some(slot => {return slot._id == t._id})}\r\n                        onClick= {(e) => handleClick(e,t,index)}                        \r\n                >  \r\n                   {t.startSlot} - {t.endSlot} </button>          \r\n                           \r\n              </div>\r\n             ))\r\n             }\r\n             {/* </div> */}\r\n              \r\n             {/* )}  */}\r\n          \r\n            <div className= \"row \">\r\n              <div className= \"col col-md-6 d-flex justify-content-end\" >\r\n               <button className=\"btn btn-secondary font-weight-bold\"\r\n                      onClick= {handleSubmit}> Submit your Availability</button>\r\n               </div>\r\n            \r\n            <div className= \"col col-md-6 d-flex justify-content-start\">\r\n              <Link to= {`/vendor/vendorcallist/${user._id}`}\r\n               type=\"button\" className= \"btn btn-secondary font-weight-bold\">Back</Link>\r\n            </div>\r\n            </div>\r\n            </form>\r\n      </div>\r\n\r\n     </div>\r\n    )\r\n\r\n}\r\n\r\nexport default VendorCalendarEdit;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\stripe\\StripeCancel.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\stripe\\StripeSuccess.js",["856","857","858","859"],"import React, {useState, useEffect} from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {stripeSuccessRequest} from \"../../actions/stripe\";\r\nimport {createOrder, emptyUserCart} from \"../../actions/user\";\r\nimport {LoadingOutlined} from \"@ant-design/icons\";\r\n\r\nconst StripeSuccess = ({match,history}) => {\r\n\r\n    const {user} = useSelector( (state) => ({...state}));\r\n    const dispatch= useDispatch();\r\n    {console.log(\"VENDOR FROM success page\",match.params.vendor)}\r\n    console.log(\"user TOKEN\",user.token, match.params.vendor);\r\n    useEffect( () => {\r\n       stripeSuccessRequest(user.token,match.params.vendor)\r\n       .then( (res) => {\r\n            console.log(res);\r\n            console.log(res.data);\r\n            console.log(res.ok);\r\n           if (res && res.data && res.data.ok) {\r\n               console.log(\"RES\",res.data); \r\n               //empty cart from local storage\r\n               if ( typeof window !== \"undefined\") localStorage.removeItem(\"cart\");\r\n               //empty cart from redux store\r\n               dispatch({\r\n                 type: \"ADD_TO_CART\",\r\n                 payload: []\r\n               });\r\n               emptyUserCart(user.token);\r\n               console.log(\"RES from stripe success\", res.data)\r\n               history.push(\"/user/history\");\r\n           } else {\r\n              history.push(\"/stripe/cancel\");\r\n           }\r\n       })\r\n    },[match.params.vendor]);\r\n\r\n    return (\r\n\r\n       <div className=\"container\">\r\n        <div className=\"col\">\r\n            <LoadingOutlined  className=\"display-1 text-danger p-5\"/>\r\n         </div>\r\n       </div> \r\n    )\r\n}\r\n\r\nexport default StripeSuccess;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\actions\\subcategory.js",["860"],"import axios from \"axios\";\r\nimport history from \"../history\";\r\n\r\nconst ROOT_URL = 'http://localhost:5000';\r\n\r\n//action creator for Subcategory Master\r\nexport const addSubcategory = async (values, authtoken) => {\r\n  const res = await axios.post(`${ROOT_URL}/api/subcategory`, values,\r\n    { headers: { authtoken } });\r\n  history.push(\"/admin/subcategories/subcategorieslist\");\r\n};\r\n\r\nexport const fetchSubcategories = async () => {\r\n  return await axios.get(`${ROOT_URL}/api/subcategories`);\r\n};\r\n\r\nexport const fetchSubcategory = async (slug) => {\r\n  return await axios.get(`${ROOT_URL}/api/subcategory/${slug}`);\r\n};\r\n\r\nexport const editSubcategory = async (slug, formValues, authtoken) => {\r\n  console.log(\"Formvalues from edit subcategory\", formValues);\r\n  const res = await axios.put(`${ROOT_URL}/api/subcategory/${slug}`, formValues,\r\n    { headers: { authtoken } });\r\n  console.log(\"Response from edit subcat\", res);\r\n  history.push(\"/admin/subcategories/subcategorieslist\");\r\n};\r\n\r\nexport const deleteSubcategory = async (slug, authtoken) => {\r\n  await axios.delete(`${ROOT_URL}/api/subcategory/${slug}`,\r\n    { headers: { authtoken } });\r\n  history.push(\"/admin/subcategories/subcategorieslist\");\r\n};\r\n\r\nexport const fetchSubcatVendors = async (slug) => {\r\n  return await axios.get(`${ROOT_URL}/api/subcategories/vendor/${slug}`);\r\n}\r\n\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\actions\\category.js",["861","862","863","864","865","866","867","868"],"import axios from \"axios\";\r\nimport history from \"../history\";\r\nimport { CREATE_CATEGORY,\r\n         FETCH_CATEGORIES,\r\n         FETCH_CATEGORY,\r\n         FETCH_CATEGORIES_NAME,\r\n         EDIT_CATEGORY,\r\n         DELETE_CATEGORY}\r\n from \"../actions/types\";\r\n\r\n const ROOT_URL = 'http://localhost:5000';\r\n//action creators for Categories master\r\n\r\nexport const fetchCategories =  async () =>  {\r\n    return await axios.get(`${ROOT_URL}/api/categories`);  \r\n    console.log(\"Category values\") ;  \r\n   };\r\n\r\n\r\nexport const fetchCategory = async (slug) =>  {\r\n    return await axios.get(`${ROOT_URL}/api/category/${slug}`);\r\n    // dispatch({type: FETCH_CATEGORY, payload:res.data });\r\n  };\r\n\r\n   //fetching the list of category names\r\nexport const fetchCategoriesName = () => async dispatch => {\r\n    const res= await axios.get(`${ROOT_URL}/api/category`);  \r\n    dispatch({type: FETCH_CATEGORIES_NAME, payload: res.data });    \r\n   };\r\n\r\n  export const addCategory =  async (formvalues, authtoken) =>  {\r\n    const res = await axios.post(`${ROOT_URL}/api/category`,formvalues,\r\n    {headers: {authtoken}});\r\n     // dispatch({type: CREATE_CATEGORY, payload: res.data });\r\n    history.push(\"/admin/categories/categorieslist\");\r\n  };\r\n\r\n  export const editCategory = async (slug, formValues, authtoken)  => {\r\n      const res= await axios.put(`${ROOT_URL}/api/category/${slug}`,formValues,\r\n       {headers: {authtoken }});\r\n       console.log(\"Response from edit\",res);\r\n    //   dispatch({type:EDIT_CATEGORY, payload: res.data });\r\n     history.push(\"/admin/categories/categorieslist\"); \r\n   };  \r\n \r\nexport const deleteCategory = async (slug, authtoken) =>  {\r\n  console.log(\"auth and slug\", slug, authtoken);\r\n  const res= await axios.delete(`${ROOT_URL}/api/category/${slug}`,\r\n   { headers: {authtoken} }); \r\n   history.push(\"/admin/categories/categorieslist\");\r\n  };\r\n\r\n  export const fetchCategorySubs = async (_id) =>  {\r\n    return await axios.get(`${ROOT_URL}/api/category/subcat/${_id}`);   \r\n  };\r\n\r\n \r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\actions\\vendor.js",["869","870","871"],"import axios from \"axios\";\r\nimport history from \"../history\";\r\n\r\nconst ROOT_URL = 'http://localhost:5000';\r\n\r\nexport const addVendor = async (formvalues, authtoken) => {\r\n  const res = await axios.post(`${ROOT_URL}/api/vendor`, formvalues,\r\n    { headers: { authtoken } });\r\n  history.push(`/vendor/vendorcatlist`);\r\n};\r\n\r\nexport const getAllVendorCategories = async (page) => {\r\n  return await axios.get(`${ROOT_URL}/api/vendors`);\r\n}\r\n\r\nexport const getVendorsByCount = async (count) => {\r\n  return await axios.get(`${ROOT_URL}/api/vendors/count/${count}`);\r\n}\r\n\r\nexport const getVendorCategoriesUser = async (userid, page) => {\r\n  console.log(`user from actions`, userid);\r\n  return await axios.get(`${ROOT_URL}/api/vendors/user/${userid}`, { page });\r\n}\r\n\r\nexport const getVendorCategory = async (id) => {\r\n  const cat = await axios.get(`${ROOT_URL}/api/vendor/${id}`);\r\n  console.log(`Category from getvendorcategory`, cat);\r\n  return (cat);\r\n}\r\n\r\nexport const deleteVendor = async (id, authtoken) => {\r\n  console.log(`auth and id`, id, authtoken);\r\n  const res = await axios.delete(`${ROOT_URL}/api/vendor/${id}`,\r\n    { headers: { authtoken } });\r\n  console.log(`value of RES`, res);\r\n  history.push(`/vendor/vendorcatlist`);\r\n};\r\n\r\nexport const updateVendor = async (id, formvalues, authtoken) => {\r\n  const res = await axios.put(`${ROOT_URL}/api/vendor/${id}`, formvalues,\r\n    { headers: { authtoken } });\r\n  history.push(`/vendor/vendorcatlist`);\r\n};\r\n\r\nexport const getVendors = async (order, page) => {\r\n  return await axios.post(`${ROOT_URL}/api/vendors`, { order, page });\r\n}\r\n\r\nexport const getVendorsTotal = async () => {\r\n  return await axios.get(`${ROOT_URL}/api/vendors/total`);\r\n};\r\n\r\nexport const vendorRating = async (id, star, authtoken) => {\r\n  const res = await axios.post(`${ROOT_URL}/api/vendor/rating/${id}`, { star },\r\n    { headers: { authtoken } });\r\n};\r\n\r\nexport const getRelatedVendors = async (id) => {\r\n  const vendor = await axios.get(`${ROOT_URL}/api/vendors/related/${id}`);\r\n  console.log(`vendors from getRelatedVendors`, vendor);\r\n  return (vendor);\r\n}\r\n\r\nexport const getVendorsByFilter = async (arg) => {\r\n  return await axios.post(`${ROOT_URL}/api/search/filters`, arg);\r\n}\r\n\r\n\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\utils\\Star.js",["872"],"import { CheckSquareTwoTone } from \"@ant-design/icons\";\r\nimport React from \"react\";\r\nimport StarRating from \"react-star-ratings\";\r\n\r\n\r\nconst Star = ({ starClicked, numberOfStars, selected }) => {\r\n  return (\r\n    <>\r\n      <StarRating\r\n        changeRating={() => starClicked(numberOfStars)}\r\n        numberOfStars={numberOfStars}\r\n        starDimension=\"20px\"\r\n        starSpacing=\"2px\"\r\n        rating={numberOfStars}\r\n        starHoverColor=\"#1d2d50\"\r\n        starRatedColor={selected ? \"#1d2d50\" : \"#929699\"}\r\n      />\r\n      <br />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Star;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\reducers\\timeslotReducer.js",["873"],"import _ from \"lodash\";\r\n\r\nlet initialState= {\r\n    timeslotsval: []\r\n};\r\n\r\nconst timeslotReducer = ( state= initialState, action) => {\r\n   switch(action.type) {\r\n    case \"SELECTED_TIMESLOT\":\r\n         let temp= state.timeslotsval;\r\n\r\n    \r\n         let unique=_.uniqWith(temp,_.isEqual); \r\n         let index = unique.findIndex(x => x.tstimeslot[0]._id === action.payload.tstimeslot[0]._id);\r\n         unique.push(action.payload);\r\n         let a= unique.filter(timeslot => timeslot.tsday == action.payload.tsday) \r\n     if(index > -1){\r\n          var uniquevar=_.uniqWith(a,_.isEqual); \r\n          uniquevar.splice(index,1)\r\n     }\r\n              return {\r\n              ...state,\r\n              timeslotsval: uniquevar?.length || index > -1 ? uniquevar : a          \r\n         }   \r\n    default:\r\n        return state;\r\n   }\r\n}\r\nexport default timeslotReducer;\r\n\r\n\r\n\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\reducers\\dayReducer.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\reducers\\searchReducer.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\reducers\\drawerReducer.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\reducers\\cartReducer.js",[],["874","875"],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\reducers\\userReducer.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\actions\\index.js",["876","877","878","879","880","881","882","883","884","885","886","887","888","889","890","891"],"import axios from \"axios\";\r\nimport { formValues } from \"redux-form\";\r\nimport history from \"../history\";\r\nimport addressDistance from \"../apis/addressDistance\";\r\nimport {\r\n  FETCH_USER,\r\n  FETCH_DISTANCE,\r\n  SUBMIT_VENDOR,\r\n  CREATE_VENDOR,\r\n  FETCH_CATEGORIES_NAME,\r\n  FETCH_SUBCATEGORIES_NAME,\r\n  FETCH_SUBCATEGORIES_CATEGORIES,\r\n  FETCH_QUESTIONS_NAME,\r\n  CREATE_QUESTION,\r\n  FETCH_QUESTIONS,\r\n  FETCH_QUESTION,\r\n  DELETE_QUESTION,\r\n  EDIT_QUESTION,\r\n  CREATE_SUBCAT_QUESTION,\r\n  FETCH_SUBCAT_QUESTIONS,\r\n  FETCH_SUBCAT_QUESTION,\r\n  EDIT_SUBCAT_QUESTION,\r\n  DELETE_SUBCAT_QUESTION\r\n} from \"./types\";\r\nconst ROOT_URL = 'http://localhost:5000';\r\n\r\nexport const fetchDistance = () => async dispatch => {\r\n  const res = await addressDistance.get(\"/json?origins\");\r\n  dispatch({ type: FETCH_DISTANCE, payload: res.data });\r\n};\r\n\r\nexport const fetchUser = () => async (dispatch) => {\r\n  const res = await axios.get(\"/api/current_user\");\r\n  dispatch({ type: FETCH_USER, payload: res.data });\r\n};\r\n\r\n\r\n//fetching the list of subcategory names\r\nexport const fetchSubcategoriesName = () => async dispatch => {\r\n  const res = await axios.get(`${ROOT_URL}/api/subcategory`);\r\n  dispatch({ type: FETCH_SUBCATEGORIES_NAME, payload: res.data });\r\n}\r\n\r\n\r\n// fetching the list of questions\r\nexport const fetchQuestionsName = () => async dispatch => {\r\n  const res = await axios.get(`${ROOT_URL}/api/questions`);\r\n  dispatch({ type: FETCH_QUESTIONS_NAME, payload: res.data });\r\n}\r\n\r\n\r\n\r\n\r\n//action creator for Vendors\r\nexport const submitVendor = (values, history) => async dispatch => {\r\n  console.log(\"values from vendor action creator:\", values);\r\n  const res = await axios.post(`${ROOT_URL}/api/vendor`, values);\r\n  //  history.push(\"/\");\r\n  //  window.location.href = '/'\r\n  dispatch({ type: SUBMIT_VENDOR, payload: res.data });\r\n};\r\n\r\nexport const submitVendorCategories = (values, history) => async dispatch => {\r\n  const res = await axios.post(`${ROOT_URL}/api/vendorcategories`, values);\r\n  //  history.push(\"/\");\r\n  window.location.href = '/'\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\cards\\VendorCard.js",["892","893","894","895","896","897","898","899"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Tooltip } from \"antd\";\r\nimport { EyeOutlined, ShoppingCartOutlined } from \"@ant-design/icons\";\r\nimport { showAverageRating } from \"../../actions/rating\";\r\nimport _ from \"lodash\";\r\n\r\nconst { Meta } = Card;\r\nconst VendorCard = ({ vendor }) => {\r\n\r\n  const { user, cart } = useSelector((state) => ({ ...state }));\r\n\r\n  const [subcats, setSubcats] = useState([]);\r\n  const [tooltip, setTooltip] = useState('Click to add');\r\n  const { _id, vendorInfoId, images, description, subcategories, price, pricetype } = vendor;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    fetchSubcats();\r\n  }, []);\r\n\r\n  const fetchSubcats = () => {\r\n    subcategories.map((sub) => {\r\n      <div key={sub._id}>\r\n        setSubcats(sub.name||\",\")\r\n      </div>\r\n    })\r\n  }\r\n\r\n  const handleAddToCart = () => {\r\n    let cart = [];\r\n    //check if the cart already has an item\r\n    if (typeof window !== \"undefined\") {\r\n      if (localStorage.getItem(\"cart\")) {\r\n        cart = JSON.parse(localStorage.getItem(\"cart\"))\r\n      }\r\n      cart.push({\r\n        ...vendor,\r\n        count: 1\r\n      })\r\n      let unique = _.uniqWith(cart, _.isEqual);\r\n      console.log(unique);\r\n      localStorage.setItem(\"cart\", JSON.stringify(unique));\r\n      setTooltip(\"Added\");\r\n\r\n      //add to redux store\r\n      dispatch({\r\n        type: \"ADD_TO_CART\",\r\n        payload: unique\r\n      });\r\n      dispatch({\r\n        type: \"SET_VISIBLE\",\r\n        payload: true\r\n      });\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"border rounded m-2\">\r\n      {vendor && vendor.ratings && vendor.ratings.length > 0\r\n        ? showAverageRating(vendor)\r\n        : <div className=\"d-flex justify-content-center mt-1 mb-3\">\"No rating yet\"</div>\r\n      }\r\n      <Card cover={\r\n        <img src={images && images.length ? images[0].url : \"\"}\r\n          style={{ height: \"180px\", objectFit: \"cover\" }}\r\n        />\r\n      }\r\n        actions={[<Link to={`/vendordetails/${_id}`}>\r\n          <EyeOutlined className=\"text-warning\" /> <br />View Vendor Details\r\n        </Link>,\r\n        <Tooltip title={tooltip}>\r\n          <a onClick={handleAddToCart}>\r\n            <ShoppingCartOutlined className=\"text-info\" /><br />Select Vendor\r\n          </a>\r\n        </Tooltip>\r\n        ]}\r\n      >\r\n        <Meta title={`${vendorInfoId.name}-£${price} ${pricetype}`} description={subcats} />\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VendorCard;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\reducers\\alertReducer.js",["900"],"import {SET_ALERT, REMOVE_ALERT} from \"../actions/types\";\r\n\r\nconst initialState= [];\r\n\r\nconst alertReducer = (state= initialState, action) => {\r\n    switch(action.type) {\r\n      case SET_ALERT:\r\n          return [...state, action.payload];\r\n      case REMOVE_ALERT:\r\n          return state.filter( alert => alert.id != action.payload);\r\n      default:\r\n          return state;\r\n    }\r\n}\r\n\r\nexport default alertReducer;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\reducers\\subcatQuestionReducer.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\reducers\\utilReducer.js",["901","902"],"import _ from \"lodash\";\r\nimport { FETCH_CATEGORIES_NAME, FETCH_SUBCATEGORIES_NAME, FETCH_QUESTIONS_NAME } from \"../actions/types\";\r\n\r\nconst utilReducer = (state = {}, action ) => {\r\n    console.log(\"Action:\",action.type);\r\n\r\n    switch (action.type)\r\n   {\r\n    //  case FETCH_CATEGORIES_NAME :\r\n    //     console.log(\"State value from util reducer:\",action.payload);\r\n    //     // return { ...state, [action.payload.category] : action.payload};\r\n    //     return {...state, categoryName:action.payload};   \r\n     case FETCH_SUBCATEGORIES_NAME: \r\n       return {...state, subcategoryName:action.payload} ;\r\n     case FETCH_QUESTIONS_NAME :\r\n         return {...state, questionName: action.payload} ;\r\n    \r\n    default: \r\n        return state;\r\n    }  \r\n}\r\n\r\nexport default utilReducer;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\reducers\\questionReducer.js",["903"],"import _ from \"lodash\";\r\nimport { CREATE_QUESTION,\r\n         FETCH_QUESTIONS,\r\n         FETCH_QUESTIONS_NAME,\r\n         EDIT_QUESTION,\r\n         DELETE_QUESTION } from \"../actions/types\";\r\nimport categoryReducer from \"./categoryReducer\";\r\n\r\n const questionReducer= (state= [], action) => {\r\n    console.log(\"Action values from question reducer :\",action);\r\n   switch (action.type) {\r\n    case CREATE_QUESTION :\r\n         return { ...state, [action.payload.id]  : action.payload};\r\n    case FETCH_QUESTIONS :\r\n         return {...state, ..._.mapKeys(action.payload, '_id' )};\r\n    case FETCH_QUESTIONS_NAME :\r\n            return {...state, questionName: action.payload} ;\r\n    case EDIT_QUESTION :       \r\n        return {...state, [action.payload.id] : action.payload};\r\n    case DELETE_QUESTION :\r\n        return _.omit( state, action.payload);  \r\n    default:\r\n        return state;\r\n    }\r\n}\r\n\r\nexport default questionReducer;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\Mainbody.js",["904","905","906","907","908"],"import React, {useState, useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {fetchCategories} from \"../actions/category\";\r\nimport {fetchSubcategories} from \"../actions/subcategory\";\r\nimport ListSubcategories from \"./utils/ListSubcategories\";\r\nimport {Carousel} from \"react-responsive-carousel\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport PostcodeSearch from \"./utils/PostcodeSearch\";\r\nimport {Avatar,Card, Col,Row} from \"antd\";\r\nimport Jumbotron from \"./cards/Jumbotron\";\r\nimport { getAllVendorCategories } from \"../actions/vendor\";\r\nimport { fetchVendorsInfo } from \"../actions/vendorInfo\";\r\n\r\nconst {Meta} = Card;\r\nconst gridStyle = {\r\n  width: '50%',\r\n  height:'200px',\r\n  textAlign: 'left',\r\n  border: 'none',   \r\n};\r\n\r\nconst MainBody = () => {\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const [vendors, setVendors] = useState([]);\r\n  const [vendorinfo,setVendorinfo] = useState([])\r\n  \r\n  useEffect( () => {\r\n    getSubcat();\r\n  },[]);\r\n\r\n  useEffect( () => {\r\n    getAllVendorCategories().then ( res => setVendors(res.data))\r\n  },[]);\r\n\r\n  useEffect( () => {\r\n    fetchVendorsInfo().then (res => setVendorinfo(res.data))\r\n  },[]);\r\n\r\n  console.log(\"ALL VENDORS\",vendors);\r\n  console.log(\"ALL VENDOR INFO\", vendorinfo);\r\n\r\n  const getSubcat= () => {\r\n    fetchCategories().then( res => setCategories(res.data));\r\n  }\r\n  const renderFields= () => {\r\n     return(\r\n     \r\n     categories && categories.map( categoryval => {    \r\n        if (categoryval._id)  { \r\n           return (            \r\n              // <div className= \"col col-md-4 main-class font-weight-bold p-1 d-flex justify-content-right \"\r\n              <Col span={8}\r\n                  key= {categoryval._id}\r\n                  className= \"main-class font-weight-bold p-1 d-flex\"\r\n                   >         \r\n                  <Col span={8} push={1}>\r\n                      \r\n                   <Link to= {`/vendordetails/${categoryval.slug}`} \r\n                        className= \"font-weight-bold h5  text-dark ml-2\">\r\n                       {categoryval.name}\r\n                    </Link> \r\n                    </Col>     \r\n                 <Col span={12}\r\n                      className= \"btn btn-raised font-weight-bold mt-2\">\r\n                 <ListSubcategories \r\n                        categoryValue = {categoryval._id} />  \r\n                </Col>  \r\n                <Col span={8} className= \"ml-4\">\r\n                <Avatar                  \r\n                    src= {categoryval.imgURL}\r\n                    size= {100}\r\n                    className=\"category-img\"\r\n                  />\r\n                </Col>               \r\n                </Col>                              \r\n                //  </div>                                                 \r\n           ) \r\n          }\r\n        }) \r\n    ) }    \r\n  \r\n return (\r\n <>\r\n <section className=\"feature-class\" id=\"features\">\r\n <Col className= \"font-weight-bold mt-2\">           \r\n         <PostcodeSearch />\r\n </Col>          \r\n \r\n  </section>\r\n  \r\n  <section className= \"content-section\" >     \r\n   <Row>\r\n       {renderFields()}     \r\n   </Row>         \r\n  </section>   \r\n  \r\n   <section className =\"testimonial-section\">\r\n  <Row align=\"middle\">\r\n   <Col span={24} className= \"jumbotron-fluid font-weight-bold h1 text-danger mb-1 d-flex justify-content-center\">\r\n          <Jumbotron\r\n             text= {[\"We will find the best helper for your needs\",\r\n                     \"Compare the price to find the most affordable helper\",\r\n                     \"So easy to use that you will have your help sorted in minutes\"]}\r\n           />         \r\n  </Col>\r\n  </Row>\r\n   \r\n   </section>\r\n </>\r\n  )\r\n}\r\n\r\n\r\nexport default MainBody;\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\utils\\Search.js",["909"],"import React, {useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {SearchOutlined} from \"@ant-design/icons\";\r\n\r\n const Search = () =>\r\n {\r\n  const dispatch = useDispatch();\r\n  const {search} = useSelector( state => ({...state}));\r\n  console.log(\"Search\", {search})\r\n   const {text} = search;\r\n  const history = useHistory();\r\n\r\n  \r\n   const handleSearch = (e) => {\r\n     dispatch({\r\n       type: \"SEARCH_QUERY\",\r\n       payload: {text: e.target.value}\r\n     })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      history.push(`/shop?${text}`)\r\n    }\r\n\r\n   return (\r\n       <form className= \"form-inline my-2 my-lg-0\"\r\n             onSubmit= {handleSubmit}\r\n      >\r\n          <input\r\n             type= \"search\"\r\n             placeholder= \"Search\"\r\n             value= {text}\r\n             className= \"form-control mr-sm-2\" \r\n             onChange= {handleSearch}           \r\n           />\r\n          <SearchOutlined onClick={handleSubmit} \r\n                          className= \"float-center\"\r\n                          style= {{ cursor: 'pointer'}}\r\n          />\r\n       </form>\r\n   )\r\n}\r\nexport default Search;\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\actions\\user.js",["910"],"import axios from \"axios\";\r\n\r\n\r\nconst ROOT_URL = 'http://localhost:5000';\r\n\r\nexport const userCart = async (cart, authtoken) => {\r\n  const cartval = await axios.post(`${ROOT_URL}/user/cart`, { cart },\r\n    { headers: { authtoken } });\r\n  console.log(`VALUE OF CART FROM ACTION USER CART`, cartval);\r\n  return cartval;\r\n}\r\n\r\nexport const getuserCart = async (authtoken) => {\r\n  const cart = await axios.get(`${ROOT_URL}/user/cart`,\r\n    { headers: { authtoken } });\r\n\r\n  console.log(`CART FROM GET`, cart);\r\n  return (cart);\r\n}\r\n\r\nexport const emptyUserCart = async (authtoken) => {\r\n  await axios.delete(`${ROOT_URL}/user/cart`, { headers: { authtoken } });\r\n}\r\n\r\nexport const saveUserAddress = async (address, authtoken) => {\r\n  return await axios.post(`${ROOT_URL}/user/address`, { address },\r\n    { headers: { authtoken } });\r\n}\r\n\r\n// update user in local storage for stripe\r\nexport const updateUserInLocalStorage = (user, next) => {\r\n  if (window.localStorage.getItem(`user`)) {\r\n    let userval = JSON.parse(localStorage.getItem(`user`));\r\n    const token = userval.token;\r\n    userval = {\r\n      _id: user._id,\r\n      email: user.email,\r\n      name: user.name,\r\n      role: user.role,\r\n      picture: user.picture,\r\n      address: user.address,\r\n      cart: user.cart,\r\n      stripe_account_id: user.stripe_account_id,\r\n      stripe_seller: user.stripe_seller,\r\n      stripeSession: user.stripeSession,\r\n      token: userval.token\r\n    }\r\n    console.log(`USERVAL NEW`, userval);\r\n    localStorage.setItem(`user`, JSON.stringify(userval));\r\n    next();\r\n  }\r\n}\r\n\r\nexport const createOrder = async (stripeResponse, authtoken) => {\r\n  return await axios.post(`${ROOT_URL}/user/order`, { stripeResponse },\r\n    { headers: { authtoken } });\r\n}\r\n\r\nexport const getUserOrders = async (authtoken) => {\r\n  return await axios.get(`${ROOT_URL}/user/order`,\r\n    { headers: { authtoken } });\r\n}\r\n\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\actions\\timeslot.js",["911","912","913"],"import axios from \"axios\";\r\nimport history from \"../history\";\r\n\r\nconst ROOT_URL = 'http://localhost:5000';\r\n\r\n//action creator for Timeslot master\r\nexport const addTimeslot = async (values, authtoken) => {\r\n   const slot = await axios.post(`${ROOT_URL}/api/timeslot`, values,\r\n      { headers: { authtoken } });\r\n   history.push(\"/admin/timeslot/listslots\");\r\n};\r\n\r\nexport const fetchTimeslots = async () => {\r\n   return await axios.get(`${ROOT_URL}/api/timeslots`);\r\n}\r\n\r\nexport const fetchTimeslot = async (_id) => {\r\n   return await axios.get(`${ROOT_URL}/api/timeslot/${_id}`);\r\n};\r\n\r\nexport const editTimeslot = async (_id, values, authtoken) => {\r\n   const res = await axios.put(`${ROOT_URL}/api/timeslot/${_id}`, values,\r\n      { headers: { authtoken } });\r\n   history.push(\"/admin/timeslot/listslots\");\r\n};\r\n\r\nexport const deleteTimeslot = async (_id, authtoken) => {\r\n   const res = await axios.delete(`${ROOT_URL}/api/timeslot/${_id}`,\r\n      { headers: { authtoken } });\r\n   history.push(\"/admin/timeslot/listslots\");\r\n};","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\actions\\vendorCalendar.js",["914"],"import axios from \"axios\";\r\nimport history from \"../history\";\r\n\r\nconst ROOT_URL = 'http://localhost:5000';\r\n\r\nexport const fetchVendorCalendarCurrent = async (userid, start) => {\r\n  const res = await axios.get(`${ROOT_URL}/api/vendorcalendar/existing/${userid}/${start}`);\r\n  console.log(`Existing res ZZZZ`, res);\r\n  return res;\r\n}\r\n\r\nexport const addVendorCalendar = async (userid, formvalues, authtoken) => {\r\n  console.log(`Before response`, formvalues);\r\n  const res = await axios.post(`${ROOT_URL}/api/vendorcalendar/${userid}`, formvalues,\r\n    { headers: { authtoken } });\r\n  console.log(`RES from Vendor Calendar`, res);\r\n  // history.push(`/vendor/dashboard`);   \r\n};\r\n\r\nexport const fetchVendorCalendar = async (userid) => {\r\n  const res = await axios.get(`${ROOT_URL}/api/vendorcalendar/${userid}`);\r\n  console.log(`Vendor Calendar values`, res);\r\n  return res;\r\n};\r\n\r\nexport const fetchVendorCalendarVend = async (vendorid) => {\r\n  const res = await axios.get(`${ROOT_URL}/api/vendorcalendar/vendor/${vendorid}`);\r\n  console.log(`Vendor Calendar by vendor values`, res);\r\n  return res;\r\n};\r\n\r\nexport const fetchVendorCalendarDate = async (vendorid, start, end) => {\r\n  const res = await axios.get(`${ROOT_URL}/api/vendorcalendar/vendor/date/${vendorid}/${start}/${end}`);\r\n  console.log(`Vendor calendar by date range`, res);\r\n  return res;\r\n}\r\n\r\n\r\nexport const readVendorCalendar = async (id) => {\r\n  const res = await axios.get(`${ROOT_URL}/api/vendorcalendar/single/${id}`);\r\n  console.log(`Vendor Calendar values`, res);\r\n  return res;\r\n};\r\n\r\n\r\nexport const editVendorCalendar = async (userid, startdate, formValues, authtoken) => {\r\n  const res = await axios.put(`${ROOT_URL}/api/vendorcalendar/${userid}/${startdate}`, formValues,\r\n    { headers: { authtoken } });\r\n  console.log(`Response from edit`, res);\r\n  // history.push(`/admin/categories/categorieslist`); \r\n};\r\n\r\nexport const addBulkBooking = async (userid, formvalues, authtoken) => {\r\n  const res = await axios.post(`${ROOT_URL}/api/vendorcalendar/bulkbook/${userid}`, formvalues,\r\n    { headers: { authtoken } });\r\n  console.log(`Response from bulk booking`, res);\r\n  return res;\r\n}\r\n\r\nexport const addBulkAvail = async (userid, formvalues, authtoken) => {\r\n  const res = await axios.post(`${ROOT_URL}/api/vendorcalendar/bulkavail/${userid}`, formvalues,\r\n    { headers: { authtoken } });\r\n  console.log(`Response from bulk avail`, res);\r\n  return res;\r\n}\r\n\r\nexport const upcomingBookings =  async (vendorid) =>  {\r\n  const res= await axios.get(`http://localhost:5000/api/vendorcalendar/booking/${vendorid}`);  \r\n   console.log(\"Vendorbookings\",res) ;  \r\n   return res;\r\n };","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\actions\\stripe.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\cards\\AdminVendorCard.js",["915","916","917"],"import React from \"react\";\r\nimport {Card} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\r\n\r\nconst {Meta} = Card;\r\n\r\nconst AdminVendorCard = ({cat}) => {\r\n    const {vendorInfoId, description, category, subcategories,images,_id} = cat;\r\n  return (\r\n      <Card  cover= {\r\n          <img src= { images && images.length ? images[0].url : \"\"} \r\n               style= {{ height: \"150px\", objectFit: \"cover\"}}\r\n          />\r\n      }\r\n         actions= {[ <Link to= {`/vendor/vendoredit/${_id}`}>\r\n                      <EditOutlined  className= \"text-warning\" />\r\n                      </Link>,\r\n                     <Link to= {`/vendor/vendorcatdelete/${_id}`}>\r\n                      <DeleteOutlined  className= \"text-danger\" />\r\n                      </Link>\r\n                 ]}\r\n      >\r\n\r\n        <Meta title= {vendorInfoId.name} description= {`${description && description.substring(0,50)}....`} />\r\n      </Card>\r\n  )\r\n}\r\n\r\nexport default AdminVendorCard;\r\n\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\Modal.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorInfo\\VendorInfoForm.js",["918","919"],"//changes for vendorinfo form\r\nimport React, {useState,useEffect} from \"react\";\r\nimport PostcodeSearch from \"../../utils/PostcodeSearch\";\r\nimport {fetchCities, fetchCounties} from \"../../../actions/area\";\r\n\r\nconst VendorForm = ( {handleSubmit, \r\n                     handleChange,                     \r\n                     email,                    \r\n                     name, \r\n                     postcode,\r\n                     houseNo,\r\n                     addressLine1,\r\n                     addressLine2, \r\n                     city,\r\n                     county,\r\n                     country,\r\n                     handleCounty,\r\n                     handleCity,\r\n                    website\r\n                    }) =>  {\r\n\r\nconst [cities,setCities] = useState([]);\r\nconst [counties,setCounties] = useState([]);\r\n\r\nuseEffect( () => {\r\n  fetchCities()\r\n  .then ( res => {\r\n    setCities(res.data)\r\n    return res.data;\r\n  } );       \r\n},[]);\r\n\r\nuseEffect(() => {\r\n  if(city){\r\n      fetchCounties(city)\r\n      .then ( res => {\r\n        setCounties(res.data)\r\n        return res.data;\r\n      })\r\n      .catch ( err => console.log(err));\r\n  }\r\n}, [city])\r\n\r\n\r\nconst handleCityChange= (e) => {\r\n  e.preventDefault();\r\n  handleCity(e);\r\n  fetchCounties(e.target.value)\r\n  .then ( res => {\r\n    setCounties(res.data)\r\n    return res.data;\r\n  })\r\n  .catch ( err => console.log(err));\r\n}\r\n\r\nconsole.log(\"Counties\",counties);\r\nconst renderFields= () => {\r\n\r\n      const handlePostcodeChange= (props) => {\r\n          console.log(\"Props from vendor autocomplete\", props);\r\n      }\r\n        return (\r\n            <form onSubmit= {handleSubmit}>\r\n            <section >\r\n              <div className= \"form-group\">\r\n              <label className= \"admin-class\">Your email</label>\r\n              <input\r\n                  type= \"text\"\r\n                  disabled= \"disabled\"\r\n                  name= \"email\"\r\n                  className= \"form-control\"\r\n                  value= {email}                 \r\n                 />\r\n                <label className= \"admin-class\">Name</label>\r\n                <input\r\n                  type= \"text\"\r\n                  name= \"name\"\r\n                  className= \"form-control\"\r\n                  value= {name}\r\n                  onChange= {handleChange}\r\n                  autoFocus\r\n                 />\r\n                                \r\n                 <label className= \"admin-class\">Postcode</label>\r\n                 {/* <PostcodeSearch  \r\n                   className=\"form-control\"\r\n                   name=\"postcode\"\r\n                   value= {postcode}\r\n                   onChange= {() => handlePostcodeChange}\r\n                /> */}\r\n\r\n                <input\r\n                  type= \"text\"\r\n                  name= \"postcode\"\r\n                  className= \"form-control\"\r\n                  value= {postcode}\r\n                  onChange= {handleChange}\r\n                 />\r\n                <label className= \"admin-class\">House No</label>\r\n                <input\r\n                  type= \"text\"\r\n                  name= \"houseNo\"\r\n                  className= \"form-control\"\r\n                  value= {houseNo}\r\n                  onChange= {handleChange}\r\n                 />\r\n                <label className= \"admin-class\">Address Line 1</label>\r\n                <input\r\n                  type= \"text\"\r\n                  name= \"addressLine1\"\r\n                  className= \"form-control\"\r\n                  value= {addressLine1}\r\n                  onChange= {handleChange}\r\n                 />\r\n                <label className= \"admin-class\">Address Line 2</label>\r\n                <input\r\n                  type= \"text\"\r\n                  name= \"addressLine2\"\r\n                  className= \"form-control\"\r\n                  value= {addressLine2}\r\n                  onChange= {handleChange}\r\n                 />\r\n                <label className= \"admin-class\">City</label>\r\n                <select className=\"form-control\"  \r\n                   name=\"city\"\r\n                   onChange= {handleCityChange}    \r\n                 >\r\n               <option>Select a city</option>             \r\n               {cities.length > 0 && cities.map(cityval => \r\n              {\r\n                 return (<option key={cityval} \r\n                        value={cityval}\r\n                         selected={cityval===city}\r\n                        > \r\n                    {cityval} </option> \r\n               )})}\t \r\n\t           </select>\r\n              <label className= \"admin-class\">County</label>\r\n               <select className=\"form-control\"  \r\n                   name=\"county\"\r\n                   onChange= {handleCounty} \r\n              >\r\n               <option>Select the county</option>             \r\n               {counties.length > 0 && counties.map(countyval => \r\n              (\r\n                // {console.log(\"COUNTY\",countyval.county,county)}\r\n                <option key={countyval.county} \r\n                        value={countyval.county}\r\n                        selected={countyval.county===county}\r\n                        > \r\n                    {countyval.county} </option> \r\n               ))}                  \r\n               </select> \r\n\r\n                 <label className= \"admin-class\">Country</label>\r\n                 <input\r\n                  type= \"text\"\r\n                  name= \"country\"\r\n                  className= \"form-control\"\r\n                  value= {country}\r\n                  onChange= {handleChange}\r\n                 />\r\n                \r\n                <label className= \"admin-class\">Website</label>\r\n                 <input\r\n                  type= \"text\"\r\n                  name= \"website\"\r\n                  className= \"form-control\"\r\n                  value= {website}\r\n                  onChange= {handleChange}\r\n                 />\r\n                \r\n               </div>\r\n               <div className= \"d-flex justify-content-center mt-1 mb-2 \">\r\n                  <button type=\"submit\" className = \"btn btn-primary font-weight-bold \" name=\"category\">Save</button>  \r\n               </div> \r\n            </section>\r\n            </form>\r\n        ) \r\n    }            \r\n    \r\n   \r\n        return(   \r\n            <div>             \r\n               {renderFields()}        \r\n            </div>        \r\n        )\r\n    }\r\n\r\n\r\n\r\n export default VendorForm;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\cards\\VendorCalCard.js",["920","921"],"import React from \"react\";\r\nimport {Card} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { EditOutlined } from \"@ant-design/icons\";\r\nimport moment from \"moment\";\r\n\r\nconst {Meta} = Card;\r\n\r\nconst VendorCalCard = ({cal}) => {\r\n\r\n      const start = new Date(cal.availability[0].start).toLocaleDateString();      \r\n   \r\n  return (\r\n      <Card \r\n       actions= {[ <Link to= {`/vendor/vendorcaledit/${cal._id}`}>\r\n                      <EditOutlined  className= \"text-warning\" />\r\n                    </Link>                   \r\n                 ]} \r\n      >    \r\n      <b className= \"mb-2\">Booking Date: {start}    </b>\r\n      {cal.availability[0].timeslots && cal.availability[0].timeslots.map((ts, i) => (\r\n        <p key= {ts._id + \"_\" + i} className=\"bg-info font-weight-bold \">{ts.startSlot}-{ts.endSlot}</p>\r\n      )\r\n      )}\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default VendorCalCard;\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\AdminMenu.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\actions\\vendorInfo.js",["922","923","924"],"import axios from \"axios\";\r\nimport history from \"../history\";\r\n\r\nconst ROOT_URL = 'http://localhost:5000';\r\n\r\nexport const addVendorInfo = async (formvalues, authtoken) => {\r\n  const res = await axios.post(`${ROOT_URL}/api/vendorinfo`, formvalues,\r\n    { headers: { authtoken } });\r\n  history.push(`/vendor/dashboard`);\r\n};\r\n\r\nexport const fetchVendorsInfo = async () => {\r\n  return await axios.get(`${ROOT_URL}/api/vendorinfo`);\r\n};\r\n\r\n\r\nexport const fetchVendorInfo = async (email) => {\r\n  return await axios.get(`${ROOT_URL}/api/vendorinfo/${email}`);\r\n};\r\n\r\nexport const editVendorInfo = async (email, formvalues, authtoken) => {\r\n  const res = await axios.put(`${ROOT_URL}/api/vendorinfo/${email}`, formvalues,\r\n    { headers: { authtoken } });\r\n  history.push(`/vendor/dashboard`);\r\n};\r\n\r\nexport const deleteVendorInfo = async (email, authtoken) => {\r\n  const res = await axios.delete(`${ROOT_URL}/api/vendorinfo/${email}`,\r\n    { headers: { authtoken } });\r\n  history.push(`/admin/vendors/vendorinfolist`);\r\n};\r\n\r\nexport const fetchVendorInfoById = async (id) => {\r\n  console.log(`Response from InfoId`, id);\r\n  return await axios.get(`${ROOT_URL}/api/vendorinfo/${id}`);\r\n}\r\n\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\utils\\FileUpload.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorProducts\\VendorUpdateForm.js",["925"],"import React from \"react\";\r\nimport { Select } from \"antd\";\r\nconst {Option} = Select;\r\n\r\nconst VendorUpdateForm = ( {handleSubmit, \r\n                            handleChange,                    \r\n                            values,\r\n                            setValues,\r\n                            categories,\r\n                            subOptions,\r\n                            arrOfSubIds,\r\n                            setArrOfSubIds,\r\n                            handleCategoryChange,\r\n                            selectedCategory                                     \r\n                           }) =>  {\r\n\r\n const {   \r\n   description,  \r\n   subcategories,\r\n   category, \r\n   price,\r\n   pricetypes,\r\n   pricetype,\r\n   vendorInfoId  \r\n}  = values;\r\n\r\n \r\n    const renderFields= () => {\r\n        return (\r\n            <form onSubmit= {handleSubmit}>\r\n            <section >\r\n              <div className= \"form-group ml-2\">\r\n                <label className= \"admin-class\">Vendor</label>\r\n                <input\r\n                  type= \"text\"\r\n                  disabled= \"disabled\"\r\n                  name= \"vendorname\"\r\n                  className= \"form-control\"\r\n                  value= {vendorInfoId.name}                 \r\n                 />                  \r\n                                 \r\n                 <label className= \"admin-class\">Description</label>\r\n                <textarea\r\n                  name= \"description\"\r\n                  rows=\"2\"\r\n                  className= \"form-control\"\r\n                  value= {description}\r\n                  onChange= {handleChange}\r\n                 />  \r\n\r\n                 <label className= \"admin-class\">Category</label>\r\n                 <select\r\n                   name= \"category\"\r\n                   value= {selectedCategory ? selectedCategory : category._id}\r\n                   className= \"form-control\"\r\n                   onChange= { handleCategoryChange}\r\n                 >\r\n                  {/* <option>{ category ? category.name : \"Select a category\"}</option> */}\r\n                  {categories.length > 0 && categories.map( (c) => (\r\n                    <option key= {c._id} value= {c._id}> {c.name}</option>\r\n                 ))\r\n                 }\r\n                 </select> \r\n\r\n                 <div>\r\n                  <label className= \"admin-class mt-1 mb-1\">Subcategories</label>\r\n                  <Select mode= \"multiple\"\r\n                          style={{ width: '100%' }}\r\n                          placeholder= \"Select a Sub category\"\r\n                          className= \"font-weight:800 subdropdown\"\r\n                          value= {arrOfSubIds}\r\n                          onChange= { (value) => setArrOfSubIds( value) }\r\n                  >\r\n                     { subOptions.length && subOptions.map( (s) => (\r\n                         <Option key= {s._id} value= {s._id}>\r\n                            {s.name}\r\n                         </Option>\r\n                     ))}\r\n                  </Select>                  \r\n                 </div>\r\n                                   \r\n                 <label className= \"admin-class\">Price Type</label>``\r\n                 <select\r\n                   value= {pricetype}\r\n                   name= \"pricetype\"\r\n                   className= \"form-control\"\r\n                   onChange= {handleChange}\r\n                 >\r\n                 \r\n                  {pricetypes.map((c) => (\r\n                  <option key={c} value={c}>\r\n                  {c}\r\n                 </option>\r\n                 ))}         \r\n                 </select>\r\n                 <label className= \"admin-class\">Price</label>\r\n                 <input\r\n                  type= \"number\"\r\n                  name= \"price\"\r\n                  className= \"form-control\"\r\n                  value= {price}\r\n                  onChange= {handleChange}\r\n                 />  \r\n                                                   \r\n\r\n               </div>\r\n               <div className= \"d-flex justify-content-center mt-1\">\r\n                  <button type=\"submit\" className = \"btn btn-primary font-weight-bold \" name=\"category\">Save</button>  \r\n               </div> \r\n            </section>\r\n            </form>\r\n        ) \r\n    }            \r\n    \r\n   \r\n        return(   \r\n            <div>             \r\n               {renderFields()}        \r\n            </div>        \r\n        )\r\n    }\r\n\r\n\r\n\r\n export default VendorUpdateForm;\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorProducts\\VendorForm.js",["926","927","928"],"import React, {useState} from \"react\";\r\nimport { Select } from \"antd\";\r\nimport CalendarBooking from \"../../utils/CalendarBooking\";\r\nconst {Option} = Select;\r\n\r\nconst VendorForm = ( {handleSubmit, \r\n                     handleChange,\r\n                     vendorInfoId, \r\n                     vendorName,                    \r\n                     userId,\r\n                     values,\r\n                     setValues,\r\n                     handleCategoryChange,\r\n                     subOptions,\r\n                     showSubs,                    \r\n                    }) =>  {\r\n\r\n  \r\n const {   \r\n   description,\r\n  categories,\r\n  subcategories,\r\n  category, \r\n   price,\r\n   pricetypes,\r\n   pricetype     \r\n}  = values;\r\n\r\n {console.log(\"Vendor....\",vendorInfoId)}\r\n\r\n const [calendar,setCalendar] = useState(false);\r\n\r\n const showCalendar= () => {\r\n  setCalendar(!calendar)   \r\n }\r\n \r\n\r\n    const renderFields= () => {\r\n        return (\r\n            <form onSubmit= {handleSubmit}>\r\n            <section >\r\n              <div className= \"form-group\">\r\n                <label className= \"admin-class\">Vendor</label>\r\n                <input\r\n                  type= \"text\"\r\n                  disabled= \"disabled\"\r\n                  name= \"vendorname\"\r\n                  className= \"form-control\"\r\n                  value= {vendorName}                 \r\n                 />                            \r\n                \r\n                 <label className= \"admin-class\">Description</label>\r\n                <textarea\r\n                  name= \"description\"\r\n                  rows=\"2\"\r\n                  className= \"form-control\"\r\n                  value= {description}\r\n                  onChange= {handleChange}\r\n                 />  \r\n\r\n                  <label className= \"admin-class\">Category</label>\r\n                 <select\r\n                   name= \"category\"\r\n                   className= \"form-control\"\r\n                   onChange= { handleCategoryChange}\r\n                 >\r\n                 <option>Select a Category</option>\r\n                 {categories.length > 0 && categories.map( (c) => (\r\n                    <option key= {c._id} value= {c._id}> {c.name}</option>\r\n                 ))\r\n                 }\r\n                 </select> \r\n\r\n                 { showSubs && (\r\n                 <div>\r\n                  <label className= \"admin-class mt-1 mb-1\">Subcategories</label>\r\n                  <Select mode= \"multiple\"\r\n                          style={{ width: '100%' }}\r\n                          placeholder= \"Select a Sub category\"\r\n                          className= \"font-weight:800\"\r\n                          value= {subcategories}\r\n                          onChange= { (value) => setValues({...values, subcategories: value})}\r\n                  >\r\n                     { subOptions.length && subOptions.map( (s) => (\r\n                         <Option key= {s._id} value= {s._id}>\r\n                            {s.name}\r\n                         </Option>\r\n                     ))}\r\n                  </Select>                  \r\n                 </div>\r\n                 )}\r\n                 \r\n                 <label className= \"admin-class\">Price Type</label>``\r\n                 <select\r\n                   name= \"pricetype\"\r\n                   className= \"form-control\"\r\n                   onChange= {handleChange}\r\n                 >\r\n                  <option>Select a price type</option> \r\n                  {pricetypes.map((c) => (\r\n                  <option key={c} value={c}>\r\n                  {c}\r\n                 </option>\r\n                 ))}         \r\n                 </select>\r\n                 <label className= \"admin-class\">Price</label>\r\n                 <input\r\n                  type= \"number\"\r\n                  name= \"price\"\r\n                  className= \"form-control\"\r\n                  value= {price}\r\n                  onChange= {handleChange}\r\n                 />  \r\n                 <input\r\n                  type= \"hidden\"                  \r\n                  name= \"userId\"\r\n                  className= \"form-control\"\r\n                  value= {userId}                 \r\n                 />   \r\n                 <input\r\n                  type= \"hidden\"                  \r\n                  name= \"vendorInfoId\"\r\n                  className= \"form-control\"\r\n                  value= {vendorInfoId}                 \r\n                 />                                    \r\n               </div>\r\n               <div className= \"d-flex justify-content-center mt-1\">\r\n                  <button type=\"button\"\r\n                          className = \"btn btn-primary font-weight-bold mb-2\" \r\n                          name=\"booking\"\r\n                          onClick= {showCalendar}>Appointment Availability</button>  \r\n               </div> \r\n               {calendar && <CalendarBooking />}             \r\n\r\n               <div className= \"d-flex justify-content-center mt-1\">\r\n                  <button type=\"submit\" \r\n                          className = \"btn btn-primary font-weight-bold mt-2 \" \r\n                          name=\"category\">Save</button>  \r\n               </div> \r\n            </section>\r\n            </form>\r\n        ) \r\n    }            \r\n    \r\n   \r\n        return(   \r\n            <div>             \r\n               {renderFields()}        \r\n            </div>        \r\n        )\r\n    }\r\n\r\n\r\n\r\n export default VendorForm;\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorProducts\\PostcodeValues.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\routes\\CounterToRedirect.js",["929","930","931","932","933"],"import React, {useState, useEffect} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nlet interval = 0;\r\n\r\nconst CounterToRedirect = () => {\r\n\r\n    return ( \"hello\")\r\n\r\n    // const [count,setCount] = useState(5);\r\n    // const history = useHistory();\r\n\r\n    // useEffect(() => {\r\n\r\n    //   interval= setInterval( () => {\r\n    //         setCount( (currentCount) => --currentCount);\r\n    //     },1000);\r\n\r\n    //     count === 0 && history.push(\"/\");\r\n        \r\n    //     //cleanup\r\n    //     return () => clearInterval(interval);\r\n\r\n    // },[count,history]);\r\n\r\n    // return (\r\n    //     <div className= \"container  text-center\">\r\n    //        <h5>Redirecting you in {count} seconds....</h5>\r\n    //     </div>        \r\n    // )\r\n}\r\n\r\nexport default CounterToRedirect;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorProducts\\AddressList.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorProducts\\PostcodeSearch.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\navigation\\VendorNav.js",["934"],"import React, {useState,useEffect} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {fetchVendorInfo} from \"../../actions/vendorInfo\";\r\n\r\nconst VendorNav = () => {\r\n\r\n  const {user} = useSelector( state => ({...state}));  \r\n  const [vendor,setVendor] = useState(\"\");\r\n\r\n  useEffect( () => {\r\n    fetchVendorInfo(user.email)\r\n    .then ( res => setVendor(res.data));\r\n  },[]);\r\n\r\n   return(\r\n    <nav className=\"navbar mt-2  navlist\">\r\n      <ul className= \"nav flex-column font-weight-bold mt-2\">\r\n      { (vendor) ?\r\n        <li className= \"nav-item\">\r\n          <Link to= {`/vendor/vendorinfoedit/${user.email}`} className= \"nav-link\"> CHANGE YOUR DETAILS</Link>\r\n        </li>     \r\n      :<li className= \"nav-item\">\r\n          <Link to= \"/vendor/vendorinfocreate\" className= \"nav-link\">ADD YOUR DETAILS</Link>\r\n        </li>\r\n      }\r\n      <li className= \"nav-item\">\r\n          <Link to= {`/vendor/vendorcatlistuser/${user._id}`} className= \"nav-link\">CHANGE CATEGORIES</Link>\r\n      </li> \r\n      <li className= \"nav-item\">\r\n          <Link to= {`/vendor/vendorcallist/${user._id}`} className= \"nav-link\">AVAILABILITY CALENDAR</Link>\r\n      </li>        \r\n        <li className= \"nav-item\">\r\n          <Link to= \"/vendor/password\" className= \"nav-link\">PASSWORD RESET</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n   )\r\n  }\r\n\r\nexport default VendorNav;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\navigation\\AdminNav.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\booking\\ShowVendorBookings.js",["935"],"import React, {useState, useEffect} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {upcomingBookings} from \"../../actions/vendorCalendar\";\r\n\r\nconst ShowVendorBookings = () => {    \r\n\r\n    const {user} = useSelector( (state) => ({...state}));\r\n    const [bookings, setBookings] = useState([]);\r\n\r\n    console.log(\"VALUE OF MATCH\",user._id);\r\n\r\n    useEffect( () => {\r\n       upcomingBookings(user._id).then ( res => setBookings(res.data));\r\n    },[])\r\n\r\n    return (\r\n\r\n        <div className= \"row\">\r\n            <div className= \"col col-md-6\">\r\n\r\n                <h2>Your upcoming bookings</h2>\r\n                   \r\n                {JSON.stringify(bookings)}\r\n\r\n\r\n\r\n            </div>\r\n            \r\n        </div>\r\n\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default ShowVendorBookings;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorCategories.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\navigation\\ConnectNav.js",["936","937","938"],"import react, {useState,useEffect} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {Card,Avatar,Badge} from \"antd\";\r\nimport moment from \"moment\";\r\nimport {SettingOutlined} from \"@ant-design/icons\";\r\nimport {toast} from \"react-toastify\";\r\nimport {getAccountBalance, \r\n        currencyFormatter,\r\n        payoutSettings} from \"../../actions/stripe\";\r\n\r\nconst {Meta} = Card;\r\nconst {Ribbon}= Badge;\r\n\r\nconst ConnectNav= () => {\r\n\r\n    const {user} = useSelector( (state) => ({...state}));\r\n    const [balance, setBalance]= useState(0);\r\n    const [loading,setLoading] = useState(false);\r\n\r\n    useEffect( () => {\r\n      loadAccountBalance();     \r\n    },[]);\r\n\r\n    const loadAccountBalance= () => {\r\n        getAccountBalance(user.token).then ( res => setBalance(res.data));\r\n    }\r\n     \r\n\r\n    const handlePayoutSettings= async () => {\r\n         setLoading(true);\r\n         try {\r\n            const res= await payoutSettings(user.token);\r\n            window.location.href= res.data.url;\r\n            setLoading(false);\r\n         } catch (err) {\r\n             console.log(err);\r\n             setLoading(false);\r\n             toast.error(\"Unable to access settings. Please try again\")\r\n         }\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className= \"d-flex justify-content-around\">         \r\n         <Card>\r\n              <Meta avatar= {<Avatar>{user.name[0]}</Avatar>}\r\n                    title={user.name} \r\n                    description={`Joined on ${moment(user.createdAt).fromNow()}`}\r\n              />              \r\n          </Card>\r\n         \r\n          {user &&\r\n           user.stripe_seller &&\r\n           user.stripe_seller.charges_enabled && (\r\n            <>\r\n           <Ribbon text= \"Account Balance\" color=\"blue\">\r\n              <Card className=\"bg-light pt-1\">\r\n                {balance && balance.pending \r\n                         && balance.pending.map( (bal,i) => (\r\n                            <span key={i} className=\"lead\"\r\n                            >{currencyFormatter(bal)}</span> \r\n                         ))\r\n                }\r\n              </Card>\r\n           </Ribbon>\r\n            <Ribbon text=\"Payout Settings\" color=\"silver\">\r\n                <Card className= \"bg-light pointer\"\r\n                      onClick= {handlePayoutSettings}>\r\n                  <SettingOutlined className= \"h5 pt-2\"/>\r\n                </Card>\r\n            </Ribbon>\r\n            </>\r\n           ) }               \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default ConnectNav;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\navigation\\UserNav.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\cards\\ShowPaymentInfo.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\booking\\RenderTimeslot.js",["939","940","941","942","943","944","945","946","947","948","949","950"],"import React, {useState, useEffect} from \"react\";\r\nimport {useSelector,useDispatch} from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport _ from \"lodash\";\r\n\r\nconst RenderTimeslot = ({timeslotval,index,day,currentslots}) => {  \r\n\r\n     const {dayval} = useSelector( (state) => ({...state}));\r\n     const {timeslotsval}= useSelector( (state) => ({...state}));\r\n     const [caldata,setCaldata] = useState([]);\r\n     const [ color, setColor] = useState(false);\r\n    \r\n    const dispatch= useDispatch();\r\n    const timeslots= [];\r\n    \r\n    \r\n    //  {console.log(\"Current slots ZZZ\", currentslots,timeslotval,index,day)}\r\n\r\n    const handleClick= (e,timeslotval,index,day) => {\r\n      e.preventDefault();     \r\n      setColor(!color); \r\n      localStorage.setItem(\"dayval\", day);\r\n      if (typeof window !== \"undefined\")  {\r\n        if (localStorage.getItem(\"timeslots\")) {\r\n          timeslots= JSON.parse(localStorage.getItem(\"timeslots\"))\r\n        }\r\n        timeslots.push({ ...timeslotval,\r\n                         count: 1})\r\n      } \r\n      let unique=_.uniqWith(timeslots,_.isEqual);  \r\n      //add to redux store\r\n      dispatch({\r\n        type: \"SELECTED_DAY\",\r\n         payload:{ \r\n             dayval:  day\r\n         }\r\n      });\r\n\r\n      dispatch({\r\n            type: \"SELECTED_TIMESLOT\",\r\n             payload:{ \r\n                 tsday:day,\r\n                 tstimeslot:unique\r\n             }\r\n          });             \r\n        \r\n     } \r\n     \r\n     const disableButtons= (timeslots,key) => {\r\n      let newslots = new Set();\r\n      return timeslots.filter(item => {\r\n          let k = key(item);\r\n          return newslots.has(k) ? false : newslots.add(k);\r\n      });\r\n  } \r\n        \r\n  return (\r\n             <div>    \r\n              {/* {console.log(\"DAY\",day)} \r\n              {console.log(currentslots.map(slots => moment(slots?.availability[0].start).format('DD/MM/YYYY') == moment(day) \r\n                                            &&  slots?.availability[0].timeslots?.some(slot => {return(slot._id == timeslotval._id)})))}  */}\r\n              \r\n              <button className= \"btn btn-primary btn-sm font-weight-bold\"\r\n                      key={timeslotval._id}\r\n                      disabled = {currentslots.map(slots => moment(slots?.availability[0].start).format('DD/MM/YYYY') == day &&  slots?.availability[0].timeslots?.some(slot => {return(slot._id == timeslotval._id)})).includes(true)}  \r\n                      className=  { currentslots.map(slots => moment(slots?.availability[0].start).format('DD/MM/YYYY') == day &&  slots?.availability[0].timeslots?.some(slot => {return(slot._id == timeslotval._id)})).includes(true) ? \"btn btn-secondary mb-1\" : \r\n                                    day==dayval.dayval\r\n                                    && timeslotsval.timeslotsval.some(slot => {return slot.tstimeslot[0]._id == timeslotval._id})\r\n                                    ?  \"btn btn-danger mb-1\" :  \"btn btn-primary mb-1\"}\r\n                       value= {timeslotval._id}\r\n                        onClick= {(e) => handleClick(e,timeslotval,index,day)} \r\n                                             \r\n              >\r\n                    {timeslotval.startSlot}-{timeslotval.endSlot}\r\n                    \r\n               </button>\r\n             \r\n             </div>      \r\n     \r\n       \r\n  )\r\n}\r\n\r\nexport default RenderTimeslot;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\order\\Invoice.js",["951","952","953","954","955"],"import React from \"react\";\r\nimport {\r\n   Document, \r\n    Page, \r\n    Text, \r\n    StyleSheet\r\n   } from \"@react-pdf/renderer\";\r\n import {Table, \r\n         TableHeader, \r\n         TableCell, \r\n         TableBody, \r\n         DataTableCell} from  '@david.kucsai/react-pdf-table';\r\n\r\nconst Invoice = ({order}) => (\r\n  <Document>\r\n      <Page style= {styles.body} fixed>\r\n          <Text style={styles.header}>new Date().toLocaleString()</Text>\r\n          <Text style={styles.title}>Order Invoice</Text>\r\n          <Text style={styles.author}>Compare My Helper</Text>\r\n          <Text style={styles.subtitle}>Order Summary</Text>\r\n      </Page>\r\n  </Document>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n    body: {\r\n      paddingTop: 35,\r\n      paddingBottom: 65,\r\n      paddingHorizontal: 35,\r\n    },\r\n    title: {\r\n      fontSize: 24,\r\n      textAlign: \"center\",\r\n    },\r\n    author: {\r\n      fontSize: 12,\r\n      textAlign: \"center\",\r\n      marginBottom: 40,\r\n    },\r\n    subtitle: {\r\n      fontSize: 18,\r\n      margin: 12,\r\n    },\r\n    text: {\r\n      margin: 12,\r\n      fontSize: 14,\r\n      textAlign: \"justify\",\r\n    },\r\n    image: {\r\n      marginVertical: 15,\r\n      marginHorizontal: 100,\r\n    },\r\n    header: {\r\n      fontSize: 12,\r\n      marginBottom: 20,\r\n      textAlign: \"center\",\r\n      color: \"grey\",\r\n    },\r\n    footer: {\r\n      padding: \"100px\",\r\n      fontSize: 12,\r\n      marginBottom: 20,\r\n      textAlign: \"center\",\r\n      color: \"grey\",\r\n    },\r\n    pageNumber: {\r\n      position: \"absolute\",\r\n      fontSize: 12,\r\n      bottom: 30,\r\n      left: 0,\r\n      right: 0,\r\n      textAlign: \"center\",\r\n      color: \"grey\",\r\n    },\r\n  });\r\n\r\nexport default Invoice;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\booking\\SelectCalendar.js",["956"],"import React, {useState} from \"react\";\r\nimport { Calendar, Alert } from 'antd';\r\nimport {Link} from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport SelectTimeslot from \"../booking/SelectTimeslot\";\r\n\r\nconst SelectCalendar= ({vendor}) => {\r\n\r\n    \r\n    const [value, setValue] = useState(moment(new Date()));\r\n    const [selectedValue, setSelectedValue] = useState(moment(new Date));\r\n    \r\n    const onSelect = value => {\r\n        setValue(value);\r\n        setSelectedValue(value); \r\n        <SelectTimeslot \r\n          selectedValue= {value}\r\n          vendor= {vendor}\r\n        />             \r\n      }\r\n    const onPanelChange = value => {\r\n           setValue(value);\r\n      };\r\n    \r\n    return (        \r\n\r\n      <div className= \"row d-flex justify-content-center\">\r\n        <div className= \"col col-md-6 font-weight-bold mb-2\">\r\n        {!selectedValue \r\n        ? <button \r\n            className= \"btn btn-secondary mb-2 d-flex justify-content-center\"\r\n            disabled\r\n            >Book Timeslot\r\n           </button>        \r\n        :<Link to= {`/selectslot/${vendor}/${selectedValue}`} \r\n                 className= \"btn btn-danger mb-2 d-flex justify-content-center\">Book Timeslot\r\n          </Link>\r\n        }\r\n       <Alert\r\n          message={`You selected date: ${selectedValue}`}\r\n        />\r\n        \r\n        <Calendar value={value} \r\n                  onSelect={onSelect} \r\n                  onPanelChange={onPanelChange}   \r\n                  disabledDate= { (current => \r\n                    current && current.valueOf() < moment().subtract( 1 - \"days\"))}              \r\n         />\r\n        </div>\r\n      </div>\r\n  )\r\n\r\n}\r\n\r\nexport default SelectCalendar;\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\stripe\\StripeCheckout.js",["957","958"],"import React, {useState, useEffect} from \"react\";\r\nimport {CardElement, useStripe,useElements} from \"@stripe/react-stripe-js\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Card} from \"antd\";\r\nimport {PoundOutlined} from \"@ant-design/icons\";\r\nimport {createPaymentIntent, getSessionId} from \"../../actions/stripe\";\r\nimport {createOrder, emptyUserCart} from \"../../actions/user\";\r\n\r\nconst StripeCheckout= ({history}) => {\r\n\r\n    const dispatch= useDispatch();\r\n    const {user} = useSelector( state => ({...state}));\r\n\r\n    const [succeeded,setSucceeded]= useState(false);\r\n    const [error,setError]= useState(null);\r\n    const [processing,setProcessing]= useState(\"\");\r\n    const [disabled,setDisabled]= useState(true);\r\n    const [clientSecret,setClientSecret]= useState(false);\r\n\r\n    const stripe= useStripe();\r\n    const elements= useElements();\r\n\r\n    const [cartTotal,setCartTotal]= useState(0);\r\n   \r\n    useEffect( () => {\r\n       createPaymentIntent(user.token)\r\n       .then ( res => {\r\n           console.log(\"Response from payement intent\",res.data);\r\n           setClientSecret(res.data.clientSecret);\r\n           setCartTotal(res.data.cartTotal);\r\n       })\r\n    },[]);\r\n\r\n    const handleSubmit=  async (e) => {\r\n         e.preventDefault()\r\n         setProcessing(true);\r\n        \r\n         const res= await getSessionId(user.token,cartTotal);\r\n         console.log(\"SESSION ID\",res.data.sessionId);\r\n         const payload= await stripe.confirmCardPayment(clientSecret, {\r\n             payment_method: {\r\n                 card: elements.getElement(CardElement),\r\n                 billing_details: {\r\n                   name:  e.target.name.value\r\n                 }\r\n             }\r\n         })\r\n\r\n         {console.log(\"PAYLOAD\",payload)}\r\n\r\n         if (payload.error) {\r\n               setError(`Payment failed ${payload.error.message}`);\r\n               setProcessing(false);                  \r\n         } else {\r\n             //create order and save to the database for admin to process\r\n              createOrder(payload,user.token)\r\n              .then ((res) => {\r\n                if (res.data.ok) {\r\n                  //empty cart from local storage\r\n                   if ( typeof window !== \"undefined\") localStorage.removeItem(\"cart\");\r\n                   //empty cart from redux store\r\n                   dispatch({\r\n                     type: \"ADD_TO_CART\",\r\n                     payload: []\r\n                   });\r\n                   emptyUserCart(user.token);\r\n                }\r\n              });\r\n              \r\n               console.log(JSON.stringify(payload));\r\n               setError(null);\r\n               setProcessing(false);\r\n               setSucceeded(true);\r\n         }\r\n     }\r\n\r\n    const handleChange= async (e) => {\r\n        //listen to changes to card details and display errors as the customer enters card details\r\n        setDisabled(e.empty);\r\n        setError(e.error ? e.error.message : \"\");              \r\n    }\r\n\r\n    const cartStyle = {\r\n        style: {\r\n          base: {\r\n            color: \"#32325d\",\r\n            fontFamily: \"Arial, sans-serif\",\r\n            fontSmoothing: \"antialiased\",\r\n            fontSize: \"16px\",\r\n            \"::placeholder\": {\r\n              color: \"#32325d\",\r\n            },\r\n          },\r\n          invalid: {\r\n            color: \"#fa755a\",\r\n            iconColor: \"#fa755a\",\r\n          },\r\n        },\r\n      };\r\n\r\n    return (\r\n      <>\r\n       \r\n         <div className=\" pb-5\">\r\n\r\n          <Card\r\n              actions={[\r\n                <>\r\n                 <PoundOutlined className=\"text-info\" /> <br /> Total Payable: £\r\n                   {cartTotal}\r\n                </>               \r\n              ]}\r\n          />\r\n         </div>\r\n\r\n        <form id=\"payment-form\" className=\"stripe-form\" onSubmit= {handleSubmit} >\r\n          <CardElement id=\"card-element\" \r\n                       options={cartStyle} \r\n                       onChange= {handleChange}    \r\n          />\r\n          <button className=\"stripe-button\"\r\n                  disabled= {processing || disabled || succeeded}\r\n          >\r\n           <span id=\"button-text\">\r\n               {processing ? <div className=\"spinner\" id=\"spinner\"></div> : \"Pay\"}\r\n           </span>\r\n          </button>\r\n          <br />\r\n         { error && <div className=\"card-error\" role=\"alert\">{error}</div> }\r\n\r\n        <p className= {succeeded ? \"result-message\" :  \"result-message hidden\"}>\r\n           Payment Successful. <Link to= \"/user/history\">View your Purchase History</Link>\r\n        </p>\r\n\r\n        </form>\r\n\r\n        \r\n      </>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default StripeCheckout;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\actions\\area.js",["959"],"import axios from \"axios\";\r\nconst ROOT_URL = 'http://localhost:5000';\r\n\r\nexport const addArea =  async ( authtoken) =>  {\r\n    const res = await axios.get(`${ROOT_URL}/api/areas`, \r\n    {headers: {authtoken}});   \r\n    // history.push(\"/admin/categories/arealist\");\r\n  };\r\n\r\n  export const fetchAreas =  async () =>  {\r\n    return await axios.get(`${ROOT_URL}/api/areas/list`);     \r\n   };\r\n\r\n   export const fetchCities= async () =>  {\r\n     return await axios.get(`${ROOT_URL}/api/areas/listcities`);\r\n   }\r\n\r\n   export const fetchCounties= async (city) => {\r\n     console.log(city);\r\n     const res=  await axios.get(`${ROOT_URL}/api/areas/listcounties/${city}`);\r\n     console.log(\"IN fetch county\",res);\r\n     return res;\r\n   }","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\actions\\subcatquestions.js",["960","961","962"],"import axios from \"axios\";\r\nimport history from \"../history\";\r\n\r\nconst ROOT_URL = 'http://localhost:5000';\r\n\r\n//action creator for subcategory questions\r\nexport const addSubcatQuestion = async (values) =>  {\r\n    const res= await axios.post(`${ROOT_URL}/api/subcatquestions`,values);    \r\n     history.push(\"/admin/subcatquestions/subcatquestionslist\");       \r\n   };\r\n\r\n export const fetchSubcatQuestions = async () =>  {\r\n   return await axios.get(`${ROOT_URL}/api/subcatquestions`);     \r\n   }; \r\n\r\n export const fetchSubcatQuestion = async (id) =>  {\r\n   return await axios.get(`${ROOT_URL}/api/subcatquestions/${id}`); \r\n   }; \r\n\r\n export const editSubcatQuestion = async (id,formValues) =>  {\r\n   const res = await axios.patch(`${ROOT_URL}/api/subcatquestions/${id}`,formValues) ; \r\n   history.push(\"/admin/subcatquestions/subcatquestionslist\");\r\n  }; \r\n\r\n export const deleteSubcatQuestion = async (id) =>  {\r\n   const res = await axios.delete(`${ROOT_URL}/api/subcatquestions/${id}`);  \r\n   history.push(\"/admin/subcatquestions/subcatquestionslist\");\r\n   };","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\actions\\rating.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\SubcategoryQuestions\\SubcategoryQuestionsForm.js",["963","964","965","966","967","968","969","970","971","972","973","974","975","976"],"import React, {useState, useEffect} from \"react\";\r\nimport {useSelector } from \"react-redux\";\r\nimport {fetchCategories,fetchCategorySubs} from \"../../../actions/category\";\r\nimport { fetchQuestions} from \"../../../actions/questions\";\r\nimport {Select,Form, Input, Button} from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined} from '@ant-design/icons';\r\n\r\nconst {Option} = Select;\r\n\r\nconst SubcategoryQuestionsForm = () => {\r\n\r\n  const {user} = useSelector( state => ({...state}));\r\n  const [categories, setCategories] = useState([]); \r\n  const [subOptions, setSubOptions] = useState([]);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [ loading, setLoading] = useState(false);\r\n  const  [category,setCategory] = useState(\"\");\r\n  const [subcategory,setSubcategory]= useState(\"\");\r\n  const [question,setQuestion] = useState(\"\");\r\n  const [fields, setFields]= useState([]);\r\n\r\n  useEffect( () => {\r\n     loadCategories();\r\n     loadQuestions();\r\n  },[]);\r\n\r\n  \r\n  const loadCategories= () => {\r\n     setLoading(true);\r\n     fetchCategories().then ( (res) => setCategories(res.data)); \r\n     setLoading(false);    \r\n  } \r\n\r\n  const handleCategoryChange= (e) => {\r\n      e.preventDefault();\r\n      setCategory(e.target.value);\r\n      fetchCategorySubs(e.target.value)\r\n       .then ( (res) => setSubOptions(res.data)\r\n       )\r\n      .catch ( (err) => {\r\n         console.log(err);\r\n    })\r\n    // setShowSubs(true);\r\n  }\r\n\r\n  const loadQuestions= () => {\r\n     setLoading(true);\r\n     fetchQuestions().then( (res) => setQuestions(res.data));\r\n     setLoading(false);\r\n  }  \r\n\r\n  const handleSubmit = (formValues) => {\r\n    console.log(formValues);   \r\n  }         \r\n    \r\n  const renderQuestions = () => {              \r\n    return (\r\n      <div>\r\n      {fields.map( (question,index) => {\r\n       return (\r\n       <div className= \"row form-group\" key={index}> \r\n        <div className= \"col col-md-12 mt-0\">\r\n        <select\r\n          name={question}\r\n          className=\"form-control\"\r\n          value={`question${index+1}`}\r\n          label={`question #${index + 1}`}\r\n        >              \r\n         <option value=\"\">Select a Question</option>\r\n           {questions && questions.map( questionVal => {\r\n            return( <option key={questionVal._id} \r\n                          value= {questionVal._id}>{questionVal.question}\r\n                    </option>)\r\n         }) }  \r\n         </select> \r\n       </div>\r\n       </div>\r\n       )\r\n    })\r\n  }\r\n  </div>\r\n  )}\r\n  \r\n      \r\n        return(\r\n            <div>\r\n                <section className= \"question-center mb-2\">\r\n                \r\n                    <div className= \"card\" >\r\n                    <div className= \"card-body\">\r\n                    <form onSubmit = {handleSubmit} >\r\n                       <div className= \"row\">\r\n                         <div className= \" col col-md-12\">\r\n                         <label className= \"font-weight-bold h6 mt-2\">Select a Category </label>\r\n                         <select\r\n                              name= \"category\"\r\n                              className= \"form-control\"\r\n                             onChange= { handleCategoryChange}\r\n                          >\r\n                        <option value=\"\">Select a Category</option>          \r\n        \r\n                       { categories && categories.map( categoryVal => {\r\n                         return( <option key={categoryVal._id} \r\n                               value= {categoryVal._id}\r\n                        >{categoryVal.name}\r\n                       </option>) }\r\n                        )}  \r\n                     </select> \r\n                       </div>\r\n                      \r\n                   <div className= \"col col-md-12\">\r\n                      <label className= \"admin-class mt-1 mb-1\">Select a Sub category</label>\r\n                      \r\n                      <select \r\n                           name= \"subcategory\"   \r\n                           className= \"form-control\"\r\n                           onChange= { subcategory => setSubcategory(subcategory)}\r\n                       > \r\n                      <option value=\"\">Select a Sub Category</option>                  \r\n                     { subOptions && subOptions.map( (s) => {\r\n                     return (  <option key= {s._id} value= {s._id}>\r\n                            {s.name}\r\n                         </option> ) }\r\n                     )}\r\n                   </select>                  \r\n                   </div>\r\n                  </div>\r\n\r\n                  {renderQuestions()}\r\n                  {/* <div className=\"col col-md-12\">\r\n                      <button className= \"btn btn-warning mt-2\">Add a question</button>\r\n                  </div>\r\n                  <div className= \"col col-md-12 mt-2\">\r\n                   <select\r\n                              name= \"question\"\r\n                              className= \"form-control\"\r\n                              onChange= {question => setQuestion(question)}\r\n                   >                                 \r\n                  <option value=\"\">Select a Question</option>\r\n                   {questions && questions.map( (q) => {\r\n                    return( <option key={q._id} value= {q._id}>\r\n                                {q.question}\r\n                            </option> ) }\r\n                   ) }  \r\n                  </select> \r\n                  </div> */}\r\n                  <div className= \"d-flex justify-content-center mt-2\" >         \r\n                       <button type= \"Submit\" className= \"btn btn-primary font-weight-bold\"> Submit</button>\r\n                  </div>\r\n                \r\n                           \r\n                    \r\n                    </form> \r\n                    </div>\r\n                      \r\n                    </div> \r\n                   \r\n                    \r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(\"state from mapstate in subcat ques YYY\",state.questions);\r\n    return   {  catValues: Object.values(state.categories),\r\n                subcatValues: Object.values(state.subcategories),\r\n                questionsValues: Object.values(state.questions) }            \r\n      }  \r\n\r\n\r\nexport default SubcategoryQuestionsForm;\r\n\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\actions\\questions.js",["977","978"],"import axios from \"axios\";\r\nimport history from \"../history\";\r\nconst ROOT_URL = 'http://localhost:5000';\r\n//action creator for Questions Master\r\nexport const addQuestion = async (values, authtoken) => {\r\n   console.log(\"In questions action creator\", values);\r\n   const res = await axios.post(`${ROOT_URL}/api/question`, values,\r\n      { headers: { authtoken } });\r\n   history.push(\"/admin/questions/questionslist\");\r\n};\r\n\r\nexport const fetchQuestions = async () => {\r\n   return await axios.get(`${ROOT_URL}/api/questions`);\r\n};\r\n\r\nexport const fetchQuestion = async (id) => {\r\n   return await axios.get(`${ROOT_URL}/api/question/${id}`);\r\n};\r\n\r\nexport const editQuestion = (id, formValues) => async dispatch => {\r\n   const res = await axios.put(`${ROOT_URL}/api/questions/${id}`, formValues);\r\n   //    dispatch({ type: EDIT_QUESTION, payload: res.data });\r\n   history.push(\"/admin/questions/questionslist\");\r\n};\r\n\r\nexport const deleteQuestion = async (id, authtoken) => {\r\n   const res = await axios.delete(`${ROOT_URL}/api/question/${id}`,\r\n      { headers: { authtoken } });\r\n   console.log(\"Response from delete question:\", res.data);\r\n   history.push(\"/admin/questions/questionslist\");\r\n}; \r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Categories\\CategoriesForm.js",["979","980","981","982"],"import React from \"react\";\r\nimport {reduxForm,Field} from \"redux-form\";\r\nimport VendorField from \"../../vendor/VendorField\";\r\n\r\nconst CategoriesForm = ({handleSubmit, name, setName, imgURL, setImgURL}) =>\r\n{\r\n\r\nconst renderError = ({touched, error}) => {\r\n\r\n      if( touched && error)  {\r\n       return(\r\n        <div className= \"alert alert-danger mt-2\">\r\n          <div className= \"header\">{error}</div>\r\n       </div>\r\n       ) }\r\n }\r\n\r\n\r\n   return(\r\n    <form onSubmit= {handleSubmit}>   \r\n     <div className= \"form-group\">\r\n     <div className= \"row mt-2\">         \r\n         <div className= \"col col-md-12\">\r\n         <label className= \" admin-class\">Name</label>\r\n         <input \r\n                type = \"text\"\r\n                name= \"name\"\r\n                className= \"form-control\"\r\n                placeholder= \"Enter Category\" \r\n                onChange= {(e) => setName(e.target.value)}\r\n                value= {name}   \r\n                autoFocus         \r\n          />         \r\n          <label className= \"admin-class mt-2\">Image Link</label>         \r\n          <input\r\n                 type= \"text\"\r\n                 name= \"imgURL\"\r\n                 className= \"form-control\"\r\n                 placeholder= \"Enter Image Link\" \r\n                 onChange= {(e) => setImgURL(e.target.value)}\r\n                 value= {imgURL}              \r\n          />\r\n         </div> \r\n     </div>\r\n    </div>\r\n     <div className= \"d-flex justify-content-center mt-2  \">\r\n      <button type=\"submit\" className = \"btn btn-primary font-weight-bold \" name=\"category\">Save</button>  \r\n      </div>     \r\n  </form>\r\n    )\r\n   }\r\n    \r\n \r\n\r\nexport default  CategoriesForm;\r\n\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Questions\\QuestionsForm.js",["983","984"],"import React from \"react\";\r\nimport { Form, Input, Button} from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined} from '@ant-design/icons';\r\n\r\n\r\nconst QuestionsForm= ({handleSubmit,question,setQuestion,options,setOptions}) =>  {\r\n\r\n const [form] = Form.useForm();\r\n\r\n const onFinish = values => {\r\n   console.log( \"received values from form\", values.question);\r\n   console.log( \"received values from form\", values.options);  \r\n   \r\n }\r\n\r\n const onFinishFailed = (errorInfo) => {\r\n  console.log('Failed:', errorInfo);\r\n};\r\n\r\n const handleChange = () => {\r\n   form.setFieldsValue({options: []});\r\n }\r\n\r\n    \r\n     return (             \r\n      <div>        \r\n       <section className= \"vendor-center\">       \r\n        <div className= \"card mt-2\">\r\n        <div className= \"card-body admin-class\">              \r\n       <Form   name=\"question-form\" autoComplete=\"off\" \r\n               onFinish= {handleSubmit} \r\n               onFinishFailed= {onFinishFailed}\r\n               \r\n               layout= \"vertical\">\r\n        <Form.Item \r\n               name=\"question\" \r\n               size=\"large\"\r\n               label=\"Question\"  \r\n               onChange= {(e) => setQuestion(e.target.value)}\r\n               setFieldsValue={question}                               \r\n               rules={[{ required: true, Message: \"Please enter the question\"}]}  >\r\n         <Input  />        \r\n       </Form.Item>\r\n\r\n      <Form.List name=\"options\" >\r\n       { (fields, {add,remove}) => (\r\n        <>\r\n         { fields.map( (field,index)  => (    \r\n         <Form.Item           \r\n           key= {index}          >      \r\n          <Form.Item\r\n                  {...field}\r\n                  label=\"Option\"\r\n                  size=\"large\"\r\n                  name={[field.name, 'option']}                             \r\n                  fieldKey={[field.fieldKey, 'option']}\r\n                  onChange= {(e) => setOptions(e.target.value)}\r\n                  setFieldsValue={options}\r\n                  rules={[{ required: true, message: 'Please enter an option' }]}\r\n            >\r\n                <Input style={{ width: '100%' }}/>               \r\n          </Form.Item>\r\n           <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n           \r\n         </Form.Item>\r\n         ))}\r\n         <Form.Item>\r\n              <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                Add options\r\n              </Button>\r\n         </Form.Item>\r\n        </>\r\n       )}\r\n       </Form.List>      \r\n       <Form.Item>\r\n           <Button type=\"primary\" htmlType=\"submit\">\r\n             Submit\r\n          </Button>\r\n       </Form.Item>\r\n    </Form>\r\n                 \r\n     </div>\r\n     </div>          \r\n             \r\n     </section>\r\n    </div>\r\n    )\r\n   }\r\n\r\nexport default QuestionsForm;\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\apis\\addressDistance.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\reducers\\categoryReducer.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\cards\\Jumbotron.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\utils\\PostcodeSearch.js",["985","986","987","988","989","990"],"import React, { Component } from \"react\";\r\nimport { Map, Marker, GoogleApiWrapper } from \"google-maps-react\";\r\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng, } from 'react-places-autocomplete';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Card, Row, Col } from \"antd\";\r\nimport { FontSizeOutlined, SearchOutlined } from \"@ant-design/icons\";\r\nimport moment from \"moment\";\r\nimport keys from \"../../config/keys\";\r\nimport GetSubcategories from \"./GetSubcategories\";\r\n\r\nexport class PostcodeSearch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { address: '' };\r\n  }\r\n\r\n  handleChange = address => {\r\n    this.setState({ address });\r\n  };\r\n\r\n  handleSelect = address => {\r\n    geocodeByAddress(address)\r\n      .then(results => {\r\n        getLatLng(results[0])\r\n          .then(latLng => {\r\n            console.log('Success', latLng);\r\n            this.setState({ address })\r\n            console.log(\"Results\", results);\r\n          })\r\n      })\r\n      .catch(error => console.error('Error', error));\r\n  };\r\n\r\n  searchOptions = {\r\n    componentRestrictions: { country: ['gb'] }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Row justify=\"center\">\r\n        <Col span={5} >\r\n          <PlacesAutocomplete\r\n            value={this.state.address}\r\n            onChange={this.handleChange}\r\n            onSelect={this.handleSelect}\r\n            searchOptions={this.searchOptions}\r\n          >\r\n            {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n              <Col style={{ position: \"static\", display: \"inline-block\" }}>\r\n                <input\r\n                  {...getInputProps({\r\n                    placeholder: 'Search a Location ...',\r\n                    className: 'location-search-input mt-3 mb-3 font-weight-bold h6',\r\n                    style: { height: \"50px\", width: \"100%\" }\r\n                  })}\r\n                />\r\n                <Col span={32} style={{ position: \"absolute\", zIndex: 1 }} className=\"autocomplete-dropdown-container\">\r\n                  {loading && <div>Loading...</div>}\r\n                  {suggestions.map((suggestion, i) => {\r\n                    const className = suggestion.active\r\n                      ? 'suggestion-item--active'\r\n                      : 'suggestion-item';\r\n                    // inline style for demonstration purpose\r\n                    const style = suggestion.active\r\n                      ? { backgroundColor: '#fafafa', cursor: 'pointer' }\r\n                      : { backgroundColor: '#ffffff', cursor: 'pointer' };\r\n                    return (\r\n                      <Col span={32}\r\n                        key={i + \"_\" + suggestion.id}\r\n                        {...getSuggestionItemProps(suggestion, {\r\n                          className,\r\n                          style\r\n                        })}\r\n                      >\r\n                        <span>{suggestion.description}</span>\r\n                      </Col>\r\n                    );\r\n                  })}\r\n                </Col>\r\n\r\n              </Col>\r\n            )}\r\n\r\n          </PlacesAutocomplete>\r\n        </Col>\r\n        <Col span={5}  >\r\n          <GetSubcategories />\r\n        </Col>\r\n\r\n        <Col span={1}\r\n          className=\"h3 mt-3\" style={{marginLeft : '50px'}}  >\r\n          <SearchOutlined />\r\n        </Col>\r\n      </Row>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: keys.GOOGLE_MAPS_API_KEY\r\n})(PostcodeSearch);","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\utils\\ListSubcategories.js",["991"],"import React, {useState, useEffect} from \"react\";\r\nimport {fetchSubcategories} from \"../../actions/subcategory\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst ListSubcategories = (props) => \r\n{  \r\n const [subcat, setSubcat] = useState([]);\r\n\r\n useEffect( () => {    \r\n     fetchSubcategories().then ( (res) => setSubcat(res.data));\r\n },[]);\r\n\r\n\r\n   const renderSubcategories= () => {        \r\n    return(\r\n      subcat.map( subcategoryval => {\r\n          if(subcategoryval.category._id) {\r\n             if (subcategoryval.category._id === props.categoryValue) {\r\n             return(\r\n              <div  key= {subcategoryval._id} className= \"mb-1\">\r\n                 <Link to= {`/vendorcat/${subcategoryval.slug}`} >{subcategoryval.name} </Link>\r\n               </div>\r\n             ) }\r\n           }\r\n           } )\r\n         )\r\n     }\r\n    \r\n    return (\r\n      <div >\r\n         {renderSubcategories()}             \r\n      </div>\r\n    );\r\n\r\n}\r\nexport default ListSubcategories;\r\n\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\utils\\CalendarBooking.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\vendor\\VendorField.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\admin\\Subcategories\\SubcategoriesForm.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\utils\\searchBar.js",["992"],"import React, {useState} from \"react\";\r\n\r\nconst SearchBar = ({keyword,setKeyword}) =>\r\n{\r\n\r\n  const handleSearch = (e) => {\r\n   e.preventDefault();\r\n   setKeyword(e.target.value.toLowerCase());\r\n   }\r\n  \r\n   return (\r\n    <div className= \"pt-4 \">\r\n       <input\r\n          type= \"search\"\r\n          placeholder= \"Enter a keyword\"\r\n          value= {keyword}\r\n          className= \"form-control mb-4\"\r\n          onChange= {handleSearch}\r\n        />\r\n          </div>\r\n   )\r\n}\r\nexport default SearchBar;\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\cards\\LoadingCard.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\cards\\SingleVendor.js",["993","994","995","996","997","998","999","1000","1001","1002"],"import React, { useState } from \"react\";\r\nimport { Card, Tabs, Tooltip } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { HeartOutlined, ShoppingCartOutlined } from \"@ant-design/icons\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport VendorListItems from \"./VendorListItems\";\r\nimport StarRatings from \"react-star-ratings\";\r\nimport StarRatingModal from \"../Modal/StarRatingModal\";\r\nimport { showAverageRating } from \"../../actions/rating\";\r\nimport _ from \"lodash\";\r\nimport BookVendor from \"../pages/BookVendor\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst SingleVendor = ({ vendor, onRatingClick, rating, review }) => {\r\n  const { user, cart } = useSelector((state) => ({ ...state }));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { _id, vendorInfoId, images } = vendor;\r\n\r\n  {\r\n    console.log(\"vendor from single vendor XXXX\", vendor);\r\n  }\r\n\r\n  const handleAddToCart = ({ vendor }) => {\r\n    <BookVendor vendor={vendor} />;\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col col-md-6\">\r\n        <Carousel showArrows={true} autoPlay infiniteLoop>\r\n          {images && images.map((i) => <img src={i.url} key={i.public_id} />)}\r\n        </Carousel>\r\n      </div>\r\n\r\n      <div className=\"col col-md-6 font-weight-bold h6\">\r\n        {vendor ? (\r\n          <h1 className=\"bg-info p-3\">{vendorInfoId.name}</h1>\r\n        ) : (\r\n          <h1>Loading...</h1>\r\n        )}\r\n        {vendor && vendor.ratings && vendor.ratings.length > 0 ? (\r\n          showAverageRating(vendor)\r\n        ) : (\r\n          <div className=\"d-flex justify-content-center mt-1 mb-3\">\r\n            \"No rating yet\"\r\n          </div>\r\n        )}\r\n        <Card\r\n          actions={[\r\n            // <Tooltip title= {tooltip}>\r\n            //  <a onClick= {handleAddToCart}>\r\n            //   <ShoppingCartOutlined  className= \"text-info\" /><br />Select Vendor\r\n            //   </a>\r\n            // </Tooltip>,\r\n            <Link to={`/bookvendor/${_id}`}>\r\n              <ShoppingCartOutlined className=\"text-info\" />\r\n              <br />\r\n              Select Vendor\r\n            </Link>,\r\n            <StarRatingModal review={review}>\r\n              <StarRatings\r\n                starRatedColor=\"red\"\r\n                noOfStars={5}\r\n                rating={rating}\r\n                changeRating={onRatingClick}\r\n                name={_id}\r\n                isSelectable={true}\r\n              />\r\n            </StarRatingModal>,\r\n          ]}\r\n        >\r\n          <VendorListItems vendor={vendor} />\r\n        </Card>\r\n      </div>\r\n      <div className=\"row\">\r\n        <Tabs type=\"card\">\r\n          <TabPane tab=\"More Details\" key=\"1\">\r\n            For any further queries, please call us on XXXX-XXX-XXXX\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n      <section id=\"testimonials\">\r\n        {/*heading-*/}\r\n        <div className=\"testimonial-heading\">\r\n          <span>Reviews</span>\r\n        </div>\r\n        {/*testimonials-box-container----*/}\r\n        <div className=\"testimonial-box-container\">\r\n          {vendor ? (\r\n            vendor.ratings\r\n              .slice(0)\r\n              .reverse()\r\n              .map((r, i) => (\r\n                <div className=\"testimonial-box\">\r\n                  <div\r\n                    className=\"box-top\"\r\n                    style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                  >\r\n                    <div className=\"profile\">\r\n                      <div\r\n                        className=\"name-user\"\r\n                        style={{\r\n                          display: \"flex\",\r\n                          flexDirection: \"column\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        <strong>Liam Mendes</strong>\r\n                        <div className=\"reviews\">\r\n                          <i className=\"fas fa-star\" />\r\n                          <i className=\"fas fa-star\" />\r\n                          <i className=\"fas fa-star\" />\r\n                          <i className=\"fas fa-star\" />\r\n                          <i className=\"far fa-star\" />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  {/*Comments--------------------------------------*/}\r\n                  <div\r\n                    className=\"client-comment\"\r\n                    style={{ textAlign: \"center\" }}\r\n                  >\r\n                    <p>\r\n                      Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                      Exercitationem, quaerat quis? Provident\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              ))\r\n          ) : (\r\n            <h1>Loading...</h1>\r\n          )}\r\n          {}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleVendor;\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\cards\\VendorCardCheckout.js",["1003","1004","1005"],"import React from \"react\";\r\nimport ModalImage from \"react-modal-image\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {CloseCircleOutlined} from \"@ant-design/icons\";\r\n\r\nconst VendorCardCheckout= ({v}) => {\r\n\r\n    {console.log(\"VALUE OF V\",v)}\r\n\r\nconst dispatch= useDispatch();\r\n\r\n const handleQuantityChange= (e) => {\r\n     \r\n    let cart= [];\r\n    let count = e.target.value < 1 ? 1 : e.target.value\r\n     \r\n     if (typeof window !== \"undefined\") {\r\n         if (localStorage.getItem(\"cart\")) {\r\n             cart= JSON.parse(localStorage.getItem(\"cart\"));\r\n         }\r\n\r\n         cart.map( (vendor,i) => {\r\n            if (vendor._id === v._id)\r\n             cart[i].count= count            \r\n         });\r\n         localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n         dispatch({ \r\n                type: \"ADD_TO_CART\",\r\n                payload:cart\r\n         });\r\n     }     \r\n }\r\n\r\n const handleRemove= () => {\r\n    console.log(v._id);\r\n    let cart= [];\r\n\r\n    if (typeof window !== \"undefined\") {\r\n        if (localStorage.getItem(\"cart\")) {\r\n            cart= JSON.parse(localStorage.getItem(\"cart\"));\r\n        }\r\n    }\r\n    cart.map( (vendor,i) => {\r\n        if (vendor._id === v._id)\r\n         cart.splice(i,1);\r\n    });\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n         dispatch({ \r\n                type: \"ADD_TO_CART\",\r\n                payload:cart\r\n    });\r\n }  \r\n\r\n  return(\r\n      <tbody>\r\n         <tr>\r\n             <td>\r\n              <div style= {{ width: \"100px\", height:\"auto\"}}>\r\n               {v.images.length ? <ModalImage  small= {v.images[0].url}\r\n                                               large = {v.images[0].url}/> : \"\"}\r\n              </div>\r\n              \r\n             </td>\r\n             <td>{v.vendorInfoId.name} </td>\r\n             <td>{v.subcategories[0].name} </td>\r\n             <td>{v.vendorInfoId.city}</td>\r\n             <td> £{v.price} , {v.pricetype}</td>\r\n             <td>{v.bookingDate}</td>\r\n             <td>\r\n                 {v.bookingSlots && v.bookingSlots.map( bslot => (\r\n                     bslot.tstimeslot && bslot.tstimeslot.map ( tslot => (\r\n                           <p key= {tslot._id}>{tslot.startSlot}- {tslot.endSlot}</p> \r\n                     ))                       \r\n                     )\r\n                 )                  \r\n                 }\r\n             </td>\r\n             <td >\r\n              <input \r\n                  type=\"number\"\r\n                  style= {{width: \"80px\"}}\r\n                  className=\"form-control\"\r\n                  value={v.count}\r\n                  onChange= {handleQuantityChange}\r\n              />  \r\n             </td>\r\n             <td className= \"font-weight-bold\" >    \r\n               <CloseCircleOutlined  className= \"text-danger pointer mt-3 ml-3\" \r\n                               onClick= {handleRemove}   />\r\n               </td>\r\n         </tr>\r\n      </tbody>\r\n  )\r\n  \r\n}\r\n\r\nexport default VendorCardCheckout;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\utils\\GetSubcategories.js",["1006","1007"],"import React, {useState, useEffect} from \"react\";\r\nimport {fetchSubcategories} from \"../../actions/subcategory\";\r\nimport {Select} from \"antd\";\r\nconst {Option} = Select;\r\n\r\nconst GetSubcategories= () => {\r\n\r\n    const [subcategories, setSubcategories] = useState([]);\r\n    const [subcategory,setSubcategory]= useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetchSubcategories().then(res => setSubcategories(res.data));\r\n    },[]);\r\n\r\n return(                  \r\n    <select \r\n         name= \"subcategory\"   \r\n         className= \"form-control mt-3 mb-3 ml-4 font-weight-bold h6\"\r\n         style={{height:\"50px\"}}         \r\n         onChange= { subcategory => setSubcategory(subcategory)}\r\n     > \r\n    <option value=\"\">Select a Sub Category</option>                  \r\n   { subcategories && subcategories.map( (s) => {\r\n   return (  <option key= {s._id} value= {s._id}>\r\n          {s.name}\r\n     </option> ) }\r\n   )}\r\n   </select> \r\n\r\n )    \r\n\r\n}\r\n\r\nexport default GetSubcategories;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\cards\\VendorListItems.js",["1008"],"import { Descriptions } from \"antd\";\r\nimport React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst VendorListItems= ({vendor}) => {\r\n \r\n   const  {description,price, pricetype,category, vendorInfoId, subcategories} = vendor;\r\n           \r\n      return (\r\n        \r\n       \r\n        <ul className=\"list-group\">\r\n          { vendorInfoId &&\r\n           <li className=\"list-group-item\">\r\n              Area{\" \"} <span className= \"label label-default label-pill float-right\"> \r\n                          {vendorInfoId.city} \r\n                        </span>\r\n           </li>\r\n          }\r\n           <li className=\"list-group-item\">\r\n               Price{\" \"} <span className= \"label label-default label-pill float-right\"> \r\n                 £ {price} {pricetype} </span>\r\n           </li>\r\n           <li className=\"list-group-item\">\r\n              About Me:{\" \"} <span className= \"label label-default label-pill float-right\"> \r\n                 {description} </span>\r\n           </li>\r\n           { category && \r\n           <li className=\"list-group-item\">\r\n               Category{\" \"} <Link to= {`/category/${category._id}`}\r\n                             className= \"label label-default label-pill  float-right\">   \r\n                    {category.name}                     \r\n                </Link> \r\n           </li>\r\n           }\r\n\r\n           {subcategories &&\r\n            <li className=\"list-group-item\">\r\n               Sub Categories{\" \"} \r\n               {subcategories.map( (s) => (                \r\n                <Link \r\n                  key= {s._id}\r\n                  to= {`/vendorcat/${s.slug}`}\r\n                  className= \"label label-default label-pill mr-2 float-right\"> \r\n                  {s.name} </Link>\r\n               ))}\r\n            </li>\r\n           }\r\n\r\n           {/* <li className=\"list-group-item\">\r\n               Rating{\" \"} <span className= \"label label-default label-pill float-right\"> \r\n                    </span>\r\n           </li> */}\r\n        </ul>\r\n        )\r\n      \r\n      \r\n    }\r\n\r\nexport default VendorListItems;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\components\\Modal\\StarRatingModal.js",["1009"],"import React, { useState } from \"react\";\r\nimport { Modal, Button } from \"antd\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { StarOutlined } from \"@ant-design/icons\";\r\n\r\nconst StarRatingModal = ({ children }) => {\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  let history = useHistory();\r\n  let params = useParams();\r\n\r\n  console.log(\"children\", { children });\r\n\r\n  const handleChange = () => {\r\n    if (user && user.token) {\r\n      setModalVisible(true);\r\n    } else {\r\n      history.push({\r\n        pathname: \"/login\",\r\n        state: { from: `/vendordetails/${params.id}` },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div onClick={handleChange}>\r\n        <StarOutlined className=\"text-danger\" /> <br />{\" \"}\r\n        {user ? \"Leave a rating\" : \"Login to leave a rating\"}\r\n      </div>\r\n      <Modal\r\n        title=\"Leave a rating for the vendor\"\r\n        centered\r\n        visible={modalVisible}\r\n        onOk={() => {\r\n          setModalVisible(false);\r\n          toast.success(\r\n            \"Thank you for your review. It will appear on our website shortly\"\r\n          );\r\n        }}\r\n        onCancel={() => {\r\n          setModalVisible(false);\r\n        }}\r\n      >\r\n        {children}\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StarRatingModal;\r\n","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\reducers\\subcategoryReducer.js",["1010"],"import _ from \"lodash\";\r\nimport {\r\n    CREATE_SUBCATEGORY,\r\n    FETCH_SUBCATEGORIES,\r\n    FETCH_SUBCATEGORIES_NAME,\r\n    FETCH_SUBCATEGORIES_CATEGORIES,\r\n    EDIT_SUBCATEGORY,\r\n    DELETE_SUBCATEGORY\r\n} from \"../actions/types\";\r\n\r\n const subcategoryReducer =(state = [], action) => {\r\n    console.log(\"Action values from reducer 1:\",action.type);\r\n     switch (action.type) {\r\n         case CREATE_SUBCATEGORY:\r\n             console.log(\"Action values from reducer 2:\",state);\r\n             return {...state, [action.payload.id] : action.payload};\r\n         case FETCH_SUBCATEGORIES:\r\n             return {...state, ..._.mapKeys(action.payload, '_id')};\r\n         case FETCH_SUBCATEGORIES_NAME: \r\n             return {...state, subcategoryName:action.payload} ;         \r\n         case EDIT_SUBCATEGORY :          \r\n            return {...state, [action.payload.id] : action.payload};\r\n         case DELETE_SUBCATEGORY:\r\n             return _.omit( state, action.payload);\r\n         default:\r\n              return state;\r\n     }\r\n}\r\nexport default subcategoryReducer;","C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\reducers\\authReducer.js",[],"C:\\Users\\Anurag\\Desktop\\cmhlocalclient\\src\\config\\keys.js",[],{"ruleId":"1011","severity":1,"message":"1012","line":5,"column":10,"nodeType":"1013","messageId":"1014","endLine":5,"endColumn":29},{"ruleId":"1011","severity":1,"message":"1015","line":7,"column":8,"nodeType":"1013","messageId":"1014","endLine":7,"endColumn":14},{"ruleId":"1016","replacedBy":"1017"},{"ruleId":"1018","replacedBy":"1019"},{"ruleId":"1011","severity":1,"message":"1020","line":4,"column":10,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":15},{"ruleId":"1011","severity":1,"message":"1021","line":41,"column":8,"nodeType":"1013","messageId":"1014","endLine":41,"endColumn":14},{"ruleId":"1011","severity":1,"message":"1022","line":64,"column":8,"nodeType":"1013","messageId":"1014","endLine":64,"endColumn":21},{"ruleId":"1011","severity":1,"message":"1023","line":69,"column":8,"nodeType":"1013","messageId":"1014","endLine":69,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1024","line":93,"column":23,"nodeType":"1013","messageId":"1014","endLine":93,"endColumn":33},{"ruleId":"1025","severity":1,"message":"1026","line":127,"column":6,"nodeType":"1027","endLine":127,"endColumn":8,"suggestions":"1028"},{"ruleId":"1029","severity":1,"message":"1030","line":136,"column":42,"nodeType":"1031","messageId":"1032","endLine":136,"endColumn":43,"fix":"1033"},{"ruleId":"1029","severity":1,"message":"1030","line":156,"column":48,"nodeType":"1031","messageId":"1032","endLine":156,"endColumn":49,"fix":"1034"},{"ruleId":"1011","severity":1,"message":"1035","line":8,"column":59,"nodeType":"1013","messageId":"1014","endLine":8,"endColumn":76},{"ruleId":"1011","severity":1,"message":"1036","line":8,"column":78,"nodeType":"1013","messageId":"1014","endLine":8,"endColumn":97},{"ruleId":"1011","severity":1,"message":"1037","line":12,"column":18,"nodeType":"1013","messageId":"1014","endLine":12,"endColumn":27},{"ruleId":"1011","severity":1,"message":"1038","line":30,"column":12,"nodeType":"1013","messageId":"1014","endLine":30,"endColumn":24},{"ruleId":"1025","severity":1,"message":"1039","line":89,"column":8,"nodeType":"1027","endLine":89,"endColumn":12,"suggestions":"1040"},{"ruleId":"1041","severity":1,"message":"1042","line":260,"column":50,"nodeType":"1043","messageId":"1044","endLine":260,"endColumn":52},{"ruleId":"1041","severity":1,"message":"1042","line":319,"column":53,"nodeType":"1043","messageId":"1044","endLine":319,"endColumn":55},{"ruleId":"1011","severity":1,"message":"1045","line":4,"column":10,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":25},{"ruleId":"1011","severity":1,"message":"1046","line":11,"column":9,"nodeType":"1013","messageId":"1014","endLine":11,"endColumn":17},{"ruleId":"1047","severity":1,"message":"1048","line":21,"column":3,"nodeType":"1049","messageId":"1050","endLine":21,"endColumn":38},{"ruleId":"1025","severity":1,"message":"1051","line":19,"column":4,"nodeType":"1027","endLine":19,"endColumn":8,"suggestions":"1052"},{"ruleId":"1025","severity":1,"message":"1053","line":21,"column":2,"nodeType":"1013","endLine":21,"endColumn":11,"suggestions":"1054"},{"ruleId":"1025","severity":1,"message":"1055","line":16,"column":7,"nodeType":"1027","endLine":16,"endColumn":13,"suggestions":"1056"},{"ruleId":"1011","severity":1,"message":"1057","line":4,"column":8,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":19},{"ruleId":"1011","severity":1,"message":"1058","line":15,"column":26,"nodeType":"1013","messageId":"1014","endLine":15,"endColumn":41},{"ruleId":"1025","severity":1,"message":"1059","line":20,"column":7,"nodeType":"1027","endLine":20,"endColumn":9,"suggestions":"1060"},{"ruleId":"1011","severity":1,"message":"1061","line":1,"column":8,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":9},{"ruleId":"1025","severity":1,"message":"1062","line":21,"column":6,"nodeType":"1027","endLine":21,"endColumn":8,"suggestions":"1063"},{"ruleId":"1011","severity":1,"message":"1064","line":13,"column":8,"nodeType":"1013","messageId":"1014","endLine":13,"endColumn":15},{"ruleId":"1065","severity":1,"message":"1066","line":35,"column":67,"nodeType":"1067","messageId":"1068","endLine":35,"endColumn":69},{"ruleId":"1047","severity":1,"message":"1048","line":38,"column":7,"nodeType":"1049","messageId":"1050","endLine":57,"endColumn":8},{"ruleId":"1011","severity":1,"message":"1064","line":14,"column":11,"nodeType":"1013","messageId":"1014","endLine":14,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1069","line":15,"column":11,"nodeType":"1013","messageId":"1014","endLine":15,"endColumn":21},{"ruleId":"1011","severity":1,"message":"1070","line":4,"column":26,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":45},{"ruleId":"1011","severity":1,"message":"1071","line":13,"column":10,"nodeType":"1013","messageId":"1014","endLine":13,"endColumn":18},{"ruleId":"1065","severity":1,"message":"1066","line":41,"column":58,"nodeType":"1067","messageId":"1068","endLine":41,"endColumn":60},{"ruleId":"1047","severity":1,"message":"1048","line":43,"column":9,"nodeType":"1049","messageId":"1050","endLine":61,"endColumn":28},{"ruleId":"1011","severity":1,"message":"1064","line":13,"column":12,"nodeType":"1013","messageId":"1014","endLine":13,"endColumn":19},{"ruleId":"1011","severity":1,"message":"1061","line":1,"column":8,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":9},{"ruleId":"1011","severity":1,"message":"1072","line":8,"column":10,"nodeType":"1013","messageId":"1014","endLine":8,"endColumn":25},{"ruleId":"1025","severity":1,"message":"1073","line":23,"column":6,"nodeType":"1027","endLine":23,"endColumn":8,"suggestions":"1074"},{"ruleId":"1011","severity":1,"message":"1075","line":2,"column":9,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":16},{"ruleId":"1011","severity":1,"message":"1076","line":1,"column":36,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":44},{"ruleId":"1011","severity":1,"message":"1075","line":3,"column":9,"nodeType":"1013","messageId":"1014","endLine":3,"endColumn":16},{"ruleId":"1011","severity":1,"message":"1077","line":7,"column":8,"nodeType":"1013","messageId":"1014","endLine":7,"endColumn":23},{"ruleId":"1011","severity":1,"message":"1061","line":1,"column":8,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":9},{"ruleId":"1011","severity":1,"message":"1078","line":4,"column":16,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":30},{"ruleId":"1025","severity":1,"message":"1079","line":18,"column":6,"nodeType":"1027","endLine":18,"endColumn":8,"suggestions":"1080"},{"ruleId":"1011","severity":1,"message":"1075","line":2,"column":10,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":17},{"ruleId":"1011","severity":1,"message":"1081","line":13,"column":11,"nodeType":"1013","messageId":"1014","endLine":13,"endColumn":20},{"ruleId":"1025","severity":1,"message":"1082","line":20,"column":6,"nodeType":"1027","endLine":20,"endColumn":8,"suggestions":"1083"},{"ruleId":"1011","severity":1,"message":"1084","line":1,"column":26,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":35},{"ruleId":"1011","severity":1,"message":"1075","line":2,"column":9,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":16},{"ruleId":"1011","severity":1,"message":"1085","line":5,"column":10,"nodeType":"1013","messageId":"1014","endLine":5,"endColumn":27},{"ruleId":"1011","severity":1,"message":"1086","line":10,"column":12,"nodeType":"1013","messageId":"1014","endLine":10,"endColumn":24},{"ruleId":"1011","severity":1,"message":"1087","line":10,"column":25,"nodeType":"1013","messageId":"1014","endLine":10,"endColumn":40},{"ruleId":"1011","severity":1,"message":"1088","line":11,"column":12,"nodeType":"1013","messageId":"1014","endLine":11,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1089","line":11,"column":19,"nodeType":"1013","messageId":"1014","endLine":11,"endColumn":28},{"ruleId":"1011","severity":1,"message":"1090","line":39,"column":7,"nodeType":"1013","messageId":"1014","endLine":39,"endColumn":22},{"ruleId":"1011","severity":1,"message":"1075","line":2,"column":9,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":16},{"ruleId":"1065","severity":1,"message":"1066","line":31,"column":68,"nodeType":"1067","messageId":"1068","endLine":31,"endColumn":70},{"ruleId":"1047","severity":1,"message":"1048","line":33,"column":13,"nodeType":"1049","messageId":"1050","endLine":72,"endColumn":18},{"ruleId":"1091","severity":1,"message":"1092","line":46,"column":73,"nodeType":"1031","messageId":"1093","endLine":46,"endColumn":89,"fix":"1094"},{"ruleId":"1011","severity":1,"message":"1084","line":1,"column":25,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":34},{"ruleId":"1011","severity":1,"message":"1064","line":12,"column":11,"nodeType":"1013","messageId":"1014","endLine":12,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1064","line":11,"column":12,"nodeType":"1013","messageId":"1014","endLine":11,"endColumn":19},{"ruleId":"1011","severity":1,"message":"1064","line":13,"column":10,"nodeType":"1013","messageId":"1014","endLine":13,"endColumn":17},{"ruleId":"1011","severity":1,"message":"1095","line":14,"column":10,"nodeType":"1013","messageId":"1014","endLine":14,"endColumn":19},{"ruleId":"1047","severity":1,"message":"1048","line":17,"column":3,"nodeType":"1049","messageId":"1050","endLine":17,"endColumn":44},{"ruleId":"1011","severity":1,"message":"1096","line":4,"column":8,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":17},{"ruleId":"1011","severity":1,"message":"1064","line":13,"column":12,"nodeType":"1013","messageId":"1014","endLine":13,"endColumn":19},{"ruleId":"1025","severity":1,"message":"1097","line":19,"column":7,"nodeType":"1027","endLine":19,"endColumn":9,"suggestions":"1098"},{"ruleId":"1011","severity":1,"message":"1099","line":29,"column":11,"nodeType":"1013","messageId":"1014","endLine":29,"endColumn":19},{"ruleId":"1011","severity":1,"message":"1100","line":8,"column":10,"nodeType":"1013","messageId":"1014","endLine":8,"endColumn":15},{"ruleId":"1011","severity":1,"message":"1101","line":1,"column":8,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":13},{"ruleId":"1011","severity":1,"message":"1102","line":8,"column":10,"nodeType":"1013","messageId":"1014","endLine":8,"endColumn":16},{"ruleId":"1011","severity":1,"message":"1103","line":13,"column":10,"nodeType":"1013","messageId":"1014","endLine":13,"endColumn":14},{"ruleId":"1011","severity":1,"message":"1104","line":13,"column":16,"nodeType":"1013","messageId":"1014","endLine":13,"endColumn":23},{"ruleId":"1011","severity":1,"message":"1105","line":18,"column":9,"nodeType":"1013","messageId":"1014","endLine":18,"endColumn":21},{"ruleId":"1025","severity":1,"message":"1106","line":33,"column":6,"nodeType":"1027","endLine":33,"endColumn":8,"suggestions":"1107"},{"ruleId":"1108","severity":1,"message":"1109","line":370,"column":53,"nodeType":"1110","endLine":380,"endColumn":55},{"ruleId":"1111","severity":1,"message":"1112","line":598,"column":39,"nodeType":"1110","endLine":618,"endColumn":40},{"ruleId":"1111","severity":1,"message":"1112","line":629,"column":39,"nodeType":"1110","endLine":648,"endColumn":40},{"ruleId":"1011","severity":1,"message":"1113","line":3,"column":9,"nodeType":"1013","messageId":"1014","endLine":3,"endColumn":17},{"ruleId":"1011","severity":1,"message":"1114","line":8,"column":7,"nodeType":"1013","messageId":"1014","endLine":8,"endColumn":14},{"ruleId":"1011","severity":1,"message":"1115","line":2,"column":9,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":20},{"ruleId":"1011","severity":1,"message":"1116","line":4,"column":9,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":28},{"ruleId":"1011","severity":1,"message":"1095","line":9,"column":12,"nodeType":"1013","messageId":"1014","endLine":9,"endColumn":21},{"ruleId":"1047","severity":1,"message":"1048","line":12,"column":5,"nodeType":"1049","messageId":"1050","endLine":12,"endColumn":44},{"ruleId":"1025","severity":1,"message":"1117","line":25,"column":7,"nodeType":"1027","endLine":25,"endColumn":9,"suggestions":"1118"},{"ruleId":"1047","severity":1,"message":"1048","line":28,"column":5,"nodeType":"1049","messageId":"1050","endLine":28,"endColumn":41},{"ruleId":"1011","severity":1,"message":"1119","line":29,"column":11,"nodeType":"1013","messageId":"1014","endLine":29,"endColumn":21},{"ruleId":"1011","severity":1,"message":"1101","line":1,"column":8,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":13},{"ruleId":"1011","severity":1,"message":"1120","line":2,"column":16,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":22},{"ruleId":"1108","severity":1,"message":"1109","line":27,"column":17,"nodeType":"1110","endLine":29,"endColumn":19},{"ruleId":"1011","severity":1,"message":"1121","line":2,"column":10,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":14},{"ruleId":"1047","severity":1,"message":"1048","line":14,"column":4,"nodeType":"1049","messageId":"1050","endLine":14,"endColumn":88},{"ruleId":"1011","severity":1,"message":"1064","line":19,"column":12,"nodeType":"1013","messageId":"1014","endLine":19,"endColumn":19},{"ruleId":"1011","severity":1,"message":"1122","line":20,"column":12,"nodeType":"1013","messageId":"1014","endLine":20,"endColumn":19},{"ruleId":"1025","severity":1,"message":"1123","line":44,"column":7,"nodeType":"1027","endLine":44,"endColumn":9,"suggestions":"1124"},{"ruleId":"1025","severity":1,"message":"1125","line":49,"column":5,"nodeType":"1027","endLine":49,"endColumn":7,"suggestions":"1126"},{"ruleId":"1047","severity":1,"message":"1048","line":59,"column":4,"nodeType":"1049","messageId":"1050","endLine":59,"endColumn":60},{"ruleId":"1047","severity":1,"message":"1048","line":60,"column":4,"nodeType":"1049","messageId":"1050","endLine":60,"endColumn":46},{"ruleId":"1047","severity":1,"message":"1048","line":65,"column":7,"nodeType":"1049","messageId":"1050","endLine":65,"endColumn":108},{"ruleId":"1011","severity":1,"message":"1078","line":5,"column":15,"nodeType":"1013","messageId":"1014","endLine":5,"endColumn":29},{"ruleId":"1011","severity":1,"message":"1127","line":2,"column":9,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":20},{"ruleId":"1011","severity":1,"message":"1078","line":4,"column":15,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":29},{"ruleId":"1011","severity":1,"message":"1078","line":4,"column":16,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":30},{"ruleId":"1011","severity":1,"message":"1128","line":13,"column":10,"nodeType":"1013","messageId":"1014","endLine":13,"endColumn":14},{"ruleId":"1011","severity":1,"message":"1064","line":14,"column":10,"nodeType":"1013","messageId":"1014","endLine":14,"endColumn":17},{"ruleId":"1011","severity":1,"message":"1129","line":14,"column":18,"nodeType":"1013","messageId":"1014","endLine":14,"endColumn":28},{"ruleId":"1130","severity":1,"message":"1131","line":37,"column":11,"nodeType":"1013","messageId":"1132","endLine":37,"endColumn":16},{"ruleId":"1011","severity":1,"message":"1127","line":6,"column":23,"nodeType":"1013","messageId":"1014","endLine":6,"endColumn":34},{"ruleId":"1011","severity":1,"message":"1020","line":7,"column":10,"nodeType":"1013","messageId":"1014","endLine":7,"endColumn":15},{"ruleId":"1025","severity":1,"message":"1133","line":17,"column":6,"nodeType":"1027","endLine":17,"endColumn":8,"suggestions":"1134"},{"ruleId":"1011","severity":1,"message":"1135","line":79,"column":9,"nodeType":"1013","messageId":"1014","endLine":79,"endColumn":25},{"ruleId":"1011","severity":1,"message":"1078","line":4,"column":15,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":29},{"ruleId":"1011","severity":1,"message":"1064","line":13,"column":10,"nodeType":"1013","messageId":"1014","endLine":13,"endColumn":17},{"ruleId":"1011","severity":1,"message":"1136","line":12,"column":11,"nodeType":"1013","messageId":"1014","endLine":12,"endColumn":23},{"ruleId":"1047","severity":1,"message":"1048","line":20,"column":5,"nodeType":"1049","messageId":"1050","endLine":20,"endColumn":74},{"ruleId":"1025","severity":1,"message":"1051","line":24,"column":7,"nodeType":"1027","endLine":24,"endColumn":9,"suggestions":"1137"},{"ruleId":"1108","severity":1,"message":"1109","line":65,"column":17,"nodeType":"1110","endLine":69,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1138","line":4,"column":8,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":25},{"ruleId":"1011","severity":1,"message":"1136","line":12,"column":11,"nodeType":"1013","messageId":"1014","endLine":12,"endColumn":23},{"ruleId":"1011","severity":1,"message":"1064","line":13,"column":11,"nodeType":"1013","messageId":"1014","endLine":13,"endColumn":18},{"ruleId":"1025","severity":1,"message":"1139","line":38,"column":7,"nodeType":"1027","endLine":38,"endColumn":9,"suggestions":"1140"},{"ruleId":"1065","severity":1,"message":"1141","line":48,"column":46,"nodeType":"1067","messageId":"1142","endLine":48,"endColumn":48},{"ruleId":"1011","severity":1,"message":"1143","line":2,"column":16,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":24},{"ruleId":"1025","severity":1,"message":"1144","line":39,"column":5,"nodeType":"1027","endLine":39,"endColumn":7,"suggestions":"1145"},{"ruleId":"1011","severity":1,"message":"1084","line":1,"column":26,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":35},{"ruleId":"1011","severity":1,"message":"1146","line":30,"column":3,"nodeType":"1013","messageId":"1014","endLine":30,"endColumn":8},{"ruleId":"1011","severity":1,"message":"1147","line":31,"column":3,"nodeType":"1013","messageId":"1014","endLine":31,"endColumn":9},{"ruleId":"1047","severity":1,"message":"1048","line":16,"column":2,"nodeType":"1049","messageId":"1050","endLine":16,"endColumn":30},{"ruleId":"1025","severity":1,"message":"1148","line":19,"column":4,"nodeType":"1027","endLine":19,"endColumn":6,"suggestions":"1149"},{"ruleId":"1011","severity":1,"message":"1150","line":14,"column":12,"nodeType":"1013","messageId":"1014","endLine":14,"endColumn":19},{"ruleId":"1011","severity":1,"message":"1064","line":15,"column":12,"nodeType":"1013","messageId":"1014","endLine":15,"endColumn":19},{"ruleId":"1011","severity":1,"message":"1151","line":16,"column":13,"nodeType":"1013","messageId":"1014","endLine":16,"endColumn":19},{"ruleId":"1025","severity":1,"message":"1152","line":24,"column":8,"nodeType":"1027","endLine":24,"endColumn":10,"suggestions":"1153"},{"ruleId":"1011","severity":1,"message":"1154","line":6,"column":29,"nodeType":"1013","messageId":"1014","endLine":6,"endColumn":47},{"ruleId":"1011","severity":1,"message":"1155","line":16,"column":10,"nodeType":"1013","messageId":"1014","endLine":16,"endColumn":24},{"ruleId":"1011","severity":1,"message":"1156","line":20,"column":7,"nodeType":"1013","messageId":"1014","endLine":20,"endColumn":18},{"ruleId":"1065","severity":1,"message":"1066","line":48,"column":42,"nodeType":"1067","messageId":"1068","endLine":48,"endColumn":44},{"ruleId":"1065","severity":1,"message":"1141","line":58,"column":9,"nodeType":"1157","messageId":"1158","endLine":58,"endColumn":16},{"ruleId":"1041","severity":1,"message":"1042","line":100,"column":31,"nodeType":"1043","messageId":"1044","endLine":100,"endColumn":33},{"ruleId":"1025","severity":1,"message":"1159","line":16,"column":7,"nodeType":"1027","endLine":16,"endColumn":9,"suggestions":"1160"},{"ruleId":"1025","severity":1,"message":"1161","line":16,"column":5,"nodeType":"1027","endLine":16,"endColumn":7,"suggestions":"1162"},{"ruleId":"1011","severity":1,"message":"1163","line":5,"column":24,"nodeType":"1013","messageId":"1014","endLine":5,"endColumn":36},{"ruleId":"1011","severity":1,"message":"1064","line":16,"column":12,"nodeType":"1013","messageId":"1014","endLine":16,"endColumn":19},{"ruleId":"1011","severity":1,"message":"1164","line":50,"column":10,"nodeType":"1013","messageId":"1014","endLine":50,"endColumn":27},{"ruleId":"1011","severity":1,"message":"1165","line":5,"column":9,"nodeType":"1013","messageId":"1014","endLine":5,"endColumn":21},{"ruleId":"1011","severity":1,"message":"1166","line":5,"column":23,"nodeType":"1013","messageId":"1014","endLine":5,"endColumn":37},{"ruleId":"1047","severity":1,"message":"1048","line":10,"column":2,"nodeType":"1049","messageId":"1050","endLine":10,"endColumn":53},{"ruleId":"1011","severity":1,"message":"1064","line":14,"column":8,"nodeType":"1013","messageId":"1014","endLine":14,"endColumn":15},{"ruleId":"1065","severity":1,"message":"1066","line":24,"column":43,"nodeType":"1067","messageId":"1068","endLine":24,"endColumn":45},{"ruleId":"1065","severity":1,"message":"1141","line":34,"column":9,"nodeType":"1157","messageId":"1158","endLine":34,"endColumn":16},{"ruleId":"1011","severity":1,"message":"1167","line":1,"column":16,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":24},{"ruleId":"1025","severity":1,"message":"1168","line":21,"column":8,"nodeType":"1027","endLine":21,"endColumn":14,"suggestions":"1169"},{"ruleId":"1047","severity":1,"message":"1048","line":27,"column":1,"nodeType":"1049","messageId":"1050","endLine":27,"endColumn":40},{"ruleId":"1025","severity":1,"message":"1117","line":36,"column":3,"nodeType":"1027","endLine":36,"endColumn":5,"suggestions":"1170"},{"ruleId":"1065","severity":1,"message":"1066","line":56,"column":43,"nodeType":"1067","messageId":"1068","endLine":56,"endColumn":45},{"ruleId":"1065","severity":1,"message":"1141","line":66,"column":9,"nodeType":"1157","messageId":"1158","endLine":66,"endColumn":16},{"ruleId":"1041","severity":1,"message":"1042","line":155,"column":83,"nodeType":"1043","messageId":"1044","endLine":155,"endColumn":85},{"ruleId":"1041","severity":1,"message":"1042","line":159,"column":79,"nodeType":"1043","messageId":"1044","endLine":159,"endColumn":81},{"ruleId":"1011","severity":1,"message":"1167","line":1,"column":16,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":24},{"ruleId":"1011","severity":1,"message":"1171","line":4,"column":9,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":20},{"ruleId":"1047","severity":1,"message":"1048","line":11,"column":5,"nodeType":"1049","messageId":"1050","endLine":11,"endColumn":66},{"ruleId":"1025","severity":1,"message":"1172","line":35,"column":7,"nodeType":"1027","endLine":35,"endColumn":28,"suggestions":"1173"},{"ruleId":"1011","severity":1,"message":"1174","line":8,"column":9,"nodeType":"1013","messageId":"1014","endLine":8,"endColumn":12},{"ruleId":"1011","severity":1,"message":"1175","line":3,"column":10,"nodeType":"1013","messageId":"1014","endLine":3,"endColumn":25},{"ruleId":"1011","severity":1,"message":"1176","line":4,"column":10,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":26},{"ruleId":"1011","severity":1,"message":"1177","line":5,"column":10,"nodeType":"1013","messageId":"1014","endLine":5,"endColumn":24},{"ruleId":"1011","severity":1,"message":"1178","line":7,"column":10,"nodeType":"1013","messageId":"1014","endLine":7,"endColumn":23},{"ruleId":"1011","severity":1,"message":"1179","line":8,"column":10,"nodeType":"1013","messageId":"1014","endLine":8,"endColumn":25},{"ruleId":"1180","severity":1,"message":"1181","line":16,"column":5,"nodeType":"1182","messageId":"1183","endLine":16,"endColumn":37},{"ruleId":"1011","severity":1,"message":"1174","line":32,"column":11,"nodeType":"1013","messageId":"1014","endLine":32,"endColumn":14},{"ruleId":"1011","severity":1,"message":"1174","line":48,"column":9,"nodeType":"1013","messageId":"1014","endLine":48,"endColumn":12},{"ruleId":"1011","severity":1,"message":"1174","line":7,"column":9,"nodeType":"1013","messageId":"1014","endLine":7,"endColumn":12},{"ruleId":"1011","severity":1,"message":"1174","line":40,"column":9,"nodeType":"1013","messageId":"1014","endLine":40,"endColumn":12},{"ruleId":"1011","severity":1,"message":"1174","line":54,"column":9,"nodeType":"1013","messageId":"1014","endLine":54,"endColumn":12},{"ruleId":"1011","severity":1,"message":"1184","line":1,"column":10,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":28},{"ruleId":"1041","severity":1,"message":"1042","line":16,"column":58,"nodeType":"1043","messageId":"1044","endLine":16,"endColumn":60},{"ruleId":"1016","replacedBy":"1185"},{"ruleId":"1018","replacedBy":"1186"},{"ruleId":"1011","severity":1,"message":"1187","line":2,"column":10,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":20},{"ruleId":"1011","severity":1,"message":"1188","line":3,"column":8,"nodeType":"1013","messageId":"1014","endLine":3,"endColumn":15},{"ruleId":"1011","severity":1,"message":"1189","line":9,"column":3,"nodeType":"1013","messageId":"1014","endLine":9,"endColumn":16},{"ruleId":"1011","severity":1,"message":"1190","line":10,"column":3,"nodeType":"1013","messageId":"1014","endLine":10,"endColumn":24},{"ruleId":"1011","severity":1,"message":"1191","line":12,"column":3,"nodeType":"1013","messageId":"1014","endLine":12,"endColumn":33},{"ruleId":"1011","severity":1,"message":"1192","line":14,"column":3,"nodeType":"1013","messageId":"1014","endLine":14,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1193","line":15,"column":3,"nodeType":"1013","messageId":"1014","endLine":15,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1194","line":16,"column":3,"nodeType":"1013","messageId":"1014","endLine":16,"endColumn":17},{"ruleId":"1011","severity":1,"message":"1195","line":17,"column":3,"nodeType":"1013","messageId":"1014","endLine":17,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1196","line":18,"column":3,"nodeType":"1013","messageId":"1014","endLine":18,"endColumn":16},{"ruleId":"1011","severity":1,"message":"1197","line":19,"column":3,"nodeType":"1013","messageId":"1014","endLine":19,"endColumn":25},{"ruleId":"1011","severity":1,"message":"1198","line":20,"column":3,"nodeType":"1013","messageId":"1014","endLine":20,"endColumn":25},{"ruleId":"1011","severity":1,"message":"1199","line":21,"column":3,"nodeType":"1013","messageId":"1014","endLine":21,"endColumn":24},{"ruleId":"1011","severity":1,"message":"1200","line":22,"column":3,"nodeType":"1013","messageId":"1014","endLine":22,"endColumn":23},{"ruleId":"1011","severity":1,"message":"1201","line":23,"column":3,"nodeType":"1013","messageId":"1014","endLine":23,"endColumn":25},{"ruleId":"1011","severity":1,"message":"1174","line":64,"column":9,"nodeType":"1013","messageId":"1014","endLine":64,"endColumn":12},{"ruleId":"1011","severity":1,"message":"1128","line":12,"column":11,"nodeType":"1013","messageId":"1014","endLine":12,"endColumn":15},{"ruleId":"1011","severity":1,"message":"1202","line":12,"column":17,"nodeType":"1013","messageId":"1014","endLine":12,"endColumn":21},{"ruleId":"1011","severity":1,"message":"1203","line":14,"column":19,"nodeType":"1013","messageId":"1014","endLine":14,"endColumn":29},{"ruleId":"1011","severity":1,"message":"1204","line":16,"column":38,"nodeType":"1013","messageId":"1014","endLine":16,"endColumn":49},{"ruleId":"1025","severity":1,"message":"1205","line":22,"column":6,"nodeType":"1027","endLine":22,"endColumn":8,"suggestions":"1206"},{"ruleId":"1065","severity":1,"message":"1141","line":25,"column":29,"nodeType":"1067","messageId":"1142","endLine":25,"endColumn":31},{"ruleId":"1108","severity":1,"message":"1109","line":66,"column":9,"nodeType":"1110","endLine":68,"endColumn":11},{"ruleId":"1111","severity":1,"message":"1207","line":74,"column":11,"nodeType":"1110","endLine":74,"endColumn":40},{"ruleId":"1041","severity":1,"message":"1208","line":10,"column":50,"nodeType":"1043","messageId":"1044","endLine":10,"endColumn":52},{"ruleId":"1011","severity":1,"message":"1061","line":1,"column":8,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":9},{"ruleId":"1011","severity":1,"message":"1190","line":2,"column":10,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":31},{"ruleId":"1011","severity":1,"message":"1077","line":7,"column":8,"nodeType":"1013","messageId":"1014","endLine":7,"endColumn":23},{"ruleId":"1011","severity":1,"message":"1209","line":4,"column":9,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":27},{"ruleId":"1011","severity":1,"message":"1210","line":6,"column":9,"nodeType":"1013","messageId":"1014","endLine":6,"endColumn":17},{"ruleId":"1011","severity":1,"message":"1211","line":14,"column":8,"nodeType":"1013","messageId":"1014","endLine":14,"endColumn":12},{"ruleId":"1011","severity":1,"message":"1212","line":15,"column":7,"nodeType":"1013","messageId":"1014","endLine":15,"endColumn":16},{"ruleId":"1065","severity":1,"message":"1066","line":49,"column":48,"nodeType":"1067","messageId":"1068","endLine":49,"endColumn":50},{"ruleId":"1011","severity":1,"message":"1167","line":1,"column":16,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":24},{"ruleId":"1011","severity":1,"message":"1213","line":34,"column":11,"nodeType":"1013","messageId":"1014","endLine":34,"endColumn":16},{"ruleId":"1011","severity":1,"message":"1214","line":8,"column":10,"nodeType":"1013","messageId":"1014","endLine":8,"endColumn":14},{"ruleId":"1011","severity":1,"message":"1174","line":22,"column":10,"nodeType":"1013","messageId":"1014","endLine":22,"endColumn":13},{"ruleId":"1011","severity":1,"message":"1174","line":28,"column":10,"nodeType":"1013","messageId":"1014","endLine":28,"endColumn":13},{"ruleId":"1011","severity":1,"message":"1188","line":2,"column":8,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":15},{"ruleId":"1011","severity":1,"message":"1071","line":9,"column":39,"nodeType":"1013","messageId":"1014","endLine":9,"endColumn":47},{"ruleId":"1011","severity":1,"message":"1215","line":9,"column":49,"nodeType":"1013","messageId":"1014","endLine":9,"endColumn":62},{"ruleId":"1108","severity":1,"message":"1109","line":12,"column":11,"nodeType":"1110","endLine":14,"endColumn":13},{"ruleId":"1011","severity":1,"message":"1216","line":3,"column":8,"nodeType":"1013","messageId":"1014","endLine":3,"endColumn":22},{"ruleId":"1011","severity":1,"message":"1217","line":59,"column":13,"nodeType":"1013","messageId":"1014","endLine":59,"endColumn":33},{"ruleId":"1011","severity":1,"message":"1218","line":5,"column":8,"nodeType":"1013","messageId":"1014","endLine":5,"endColumn":14},{"ruleId":"1011","severity":1,"message":"1211","line":7,"column":8,"nodeType":"1013","messageId":"1014","endLine":7,"endColumn":12},{"ruleId":"1011","severity":1,"message":"1174","line":7,"column":9,"nodeType":"1013","messageId":"1014","endLine":7,"endColumn":12},{"ruleId":"1011","severity":1,"message":"1174","line":22,"column":9,"nodeType":"1013","messageId":"1014","endLine":22,"endColumn":12},{"ruleId":"1011","severity":1,"message":"1174","line":28,"column":9,"nodeType":"1013","messageId":"1014","endLine":28,"endColumn":12},{"ruleId":"1011","severity":1,"message":"1215","line":19,"column":4,"nodeType":"1013","messageId":"1014","endLine":19,"endColumn":17},{"ruleId":"1011","severity":1,"message":"1071","line":23,"column":3,"nodeType":"1013","messageId":"1014","endLine":23,"endColumn":11},{"ruleId":"1011","severity":1,"message":"1219","line":26,"column":4,"nodeType":"1013","messageId":"1014","endLine":26,"endColumn":13},{"ruleId":"1047","severity":1,"message":"1048","line":29,"column":2,"nodeType":"1049","messageId":"1050","endLine":29,"endColumn":42},{"ruleId":"1011","severity":1,"message":"1220","line":1,"column":8,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":13},{"ruleId":"1011","severity":1,"message":"1167","line":1,"column":16,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":24},{"ruleId":"1011","severity":1,"message":"1084","line":1,"column":26,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":35},{"ruleId":"1011","severity":1,"message":"1221","line":2,"column":9,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":19},{"ruleId":"1011","severity":1,"message":"1222","line":4,"column":5,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":13},{"ruleId":"1025","severity":1,"message":"1223","line":14,"column":5,"nodeType":"1027","endLine":14,"endColumn":7,"suggestions":"1224"},{"ruleId":"1025","severity":1,"message":"1225","line":14,"column":7,"nodeType":"1027","endLine":14,"endColumn":9,"suggestions":"1226"},{"ruleId":"1011","severity":1,"message":"1101","line":1,"column":8,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":13},{"ruleId":"1011","severity":1,"message":"1064","line":18,"column":12,"nodeType":"1013","messageId":"1014","endLine":18,"endColumn":19},{"ruleId":"1025","severity":1,"message":"1227","line":22,"column":7,"nodeType":"1027","endLine":22,"endColumn":9,"suggestions":"1228"},{"ruleId":"1011","severity":1,"message":"1084","line":1,"column":26,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":35},{"ruleId":"1011","severity":1,"message":"1229","line":10,"column":13,"nodeType":"1013","messageId":"1014","endLine":10,"endColumn":20},{"ruleId":"1011","severity":1,"message":"1230","line":10,"column":21,"nodeType":"1013","messageId":"1014","endLine":10,"endColumn":31},{"ruleId":"1130","severity":1,"message":"1231","line":25,"column":11,"nodeType":"1013","messageId":"1132","endLine":25,"endColumn":20},{"ruleId":"1011","severity":1,"message":"1232","line":49,"column":12,"nodeType":"1013","messageId":"1014","endLine":49,"endColumn":26},{"ruleId":"1041","severity":1,"message":"1042","line":65,"column":119,"nodeType":"1043","messageId":"1044","endLine":65,"endColumn":121},{"ruleId":"1041","severity":1,"message":"1042","line":65,"column":194,"nodeType":"1043","messageId":"1044","endLine":65,"endColumn":196},{"ruleId":"1233","severity":1,"message":"1234","line":66,"column":23,"nodeType":"1235","endLine":69,"endColumn":88},{"ruleId":"1041","severity":1,"message":"1042","line":66,"column":121,"nodeType":"1043","messageId":"1044","endLine":66,"endColumn":123},{"ruleId":"1041","severity":1,"message":"1042","line":66,"column":196,"nodeType":"1043","messageId":"1044","endLine":66,"endColumn":198},{"ruleId":"1041","severity":1,"message":"1042","line":67,"column":40,"nodeType":"1043","messageId":"1044","endLine":67,"endColumn":42},{"ruleId":"1041","severity":1,"message":"1042","line":68,"column":110,"nodeType":"1043","messageId":"1044","endLine":68,"endColumn":112},{"ruleId":"1011","severity":1,"message":"1236","line":8,"column":10,"nodeType":"1013","messageId":"1014","endLine":8,"endColumn":15},{"ruleId":"1011","severity":1,"message":"1237","line":9,"column":10,"nodeType":"1013","messageId":"1014","endLine":9,"endColumn":21},{"ruleId":"1011","severity":1,"message":"1238","line":10,"column":10,"nodeType":"1013","messageId":"1014","endLine":10,"endColumn":19},{"ruleId":"1011","severity":1,"message":"1239","line":11,"column":10,"nodeType":"1013","messageId":"1014","endLine":11,"endColumn":19},{"ruleId":"1011","severity":1,"message":"1240","line":12,"column":10,"nodeType":"1013","messageId":"1014","endLine":12,"endColumn":23},{"ruleId":"1241","severity":1,"message":"1242","line":11,"column":63,"nodeType":"1243","messageId":"1244","endLine":11,"endColumn":71,"fix":"1245"},{"ruleId":"1025","severity":1,"message":"1106","line":33,"column":7,"nodeType":"1027","endLine":33,"endColumn":9,"suggestions":"1246"},{"ruleId":"1047","severity":1,"message":"1048","line":50,"column":10,"nodeType":"1049","messageId":"1050","endLine":50,"endColumn":42},{"ruleId":"1011","severity":1,"message":"1174","line":5,"column":11,"nodeType":"1013","messageId":"1014","endLine":5,"endColumn":14},{"ruleId":"1011","severity":1,"message":"1174","line":8,"column":11,"nodeType":"1013","messageId":"1014","endLine":8,"endColumn":14},{"ruleId":"1011","severity":1,"message":"1174","line":21,"column":10,"nodeType":"1013","messageId":"1014","endLine":21,"endColumn":13},{"ruleId":"1011","severity":1,"message":"1174","line":26,"column":10,"nodeType":"1013","messageId":"1014","endLine":26,"endColumn":13},{"ruleId":"1011","severity":1,"message":"1247","line":5,"column":16,"nodeType":"1013","messageId":"1014","endLine":5,"endColumn":20},{"ruleId":"1011","severity":1,"message":"1248","line":5,"column":22,"nodeType":"1013","messageId":"1014","endLine":5,"endColumn":27},{"ruleId":"1011","severity":1,"message":"1120","line":5,"column":29,"nodeType":"1013","messageId":"1014","endLine":5,"endColumn":35},{"ruleId":"1011","severity":1,"message":"1249","line":6,"column":10,"nodeType":"1013","messageId":"1014","endLine":6,"endColumn":29},{"ruleId":"1011","severity":1,"message":"1250","line":6,"column":31,"nodeType":"1013","messageId":"1014","endLine":6,"endColumn":43},{"ruleId":"1011","severity":1,"message":"1251","line":8,"column":8,"nodeType":"1013","messageId":"1014","endLine":8,"endColumn":14},{"ruleId":"1011","severity":1,"message":"1128","line":12,"column":10,"nodeType":"1013","messageId":"1014","endLine":12,"endColumn":14},{"ruleId":"1011","severity":1,"message":"1064","line":16,"column":11,"nodeType":"1013","messageId":"1014","endLine":16,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1071","line":17,"column":11,"nodeType":"1013","messageId":"1014","endLine":17,"endColumn":19},{"ruleId":"1011","severity":1,"message":"1252","line":18,"column":10,"nodeType":"1013","messageId":"1014","endLine":18,"endColumn":21},{"ruleId":"1011","severity":1,"message":"1253","line":19,"column":10,"nodeType":"1013","messageId":"1014","endLine":19,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1254","line":19,"column":19,"nodeType":"1013","messageId":"1014","endLine":19,"endColumn":30},{"ruleId":"1011","severity":1,"message":"1255","line":20,"column":18,"nodeType":"1013","messageId":"1014","endLine":20,"endColumn":27},{"ruleId":"1011","severity":1,"message":"1090","line":167,"column":7,"nodeType":"1013","messageId":"1014","endLine":167,"endColumn":22},{"ruleId":"1011","severity":1,"message":"1174","line":7,"column":10,"nodeType":"1013","messageId":"1014","endLine":7,"endColumn":13},{"ruleId":"1011","severity":1,"message":"1174","line":21,"column":10,"nodeType":"1013","messageId":"1014","endLine":21,"endColumn":13},{"ruleId":"1011","severity":1,"message":"1256","line":2,"column":9,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1257","line":2,"column":19,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":24},{"ruleId":"1011","severity":1,"message":"1258","line":3,"column":8,"nodeType":"1013","messageId":"1014","endLine":3,"endColumn":19},{"ruleId":"1011","severity":1,"message":"1259","line":8,"column":7,"nodeType":"1013","messageId":"1014","endLine":8,"endColumn":18},{"ruleId":"1011","severity":1,"message":"1260","line":10,"column":8,"nodeType":"1013","messageId":"1014","endLine":10,"endColumn":16},{"ruleId":"1011","severity":1,"message":"1261","line":20,"column":8,"nodeType":"1013","messageId":"1014","endLine":20,"endColumn":20},{"ruleId":"1011","severity":1,"message":"1262","line":2,"column":10,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":13},{"ruleId":"1011","severity":1,"message":"1263","line":2,"column":15,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":21},{"ruleId":"1011","severity":1,"message":"1221","line":4,"column":10,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":20},{"ruleId":"1011","severity":1,"message":"1264","line":5,"column":10,"nodeType":"1013","messageId":"1014","endLine":5,"endColumn":14},{"ruleId":"1011","severity":1,"message":"1265","line":6,"column":10,"nodeType":"1013","messageId":"1014","endLine":6,"endColumn":26},{"ruleId":"1011","severity":1,"message":"1218","line":7,"column":8,"nodeType":"1013","messageId":"1014","endLine":7,"endColumn":14},{"ruleId":"1065","severity":1,"message":"1066","line":16,"column":34,"nodeType":"1067","messageId":"1068","endLine":16,"endColumn":36},{"ruleId":"1011","severity":1,"message":"1167","line":1,"column":16,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":24},{"ruleId":"1011","severity":1,"message":"1167","line":1,"column":17,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":25},{"ruleId":"1011","severity":1,"message":"1266","line":2,"column":22,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":29},{"ruleId":"1011","severity":1,"message":"1267","line":5,"column":10,"nodeType":"1013","messageId":"1014","endLine":5,"endColumn":23},{"ruleId":"1011","severity":1,"message":"1061","line":12,"column":8,"nodeType":"1013","messageId":"1014","endLine":12,"endColumn":9},{"ruleId":"1011","severity":1,"message":"1128","line":18,"column":11,"nodeType":"1013","messageId":"1014","endLine":18,"endColumn":15},{"ruleId":"1011","severity":1,"message":"1202","line":18,"column":17,"nodeType":"1013","messageId":"1014","endLine":18,"endColumn":21},{"ruleId":"1011","severity":1,"message":"1046","line":20,"column":9,"nodeType":"1013","messageId":"1014","endLine":20,"endColumn":17},{"ruleId":"1047","severity":1,"message":"1048","line":24,"column":3,"nodeType":"1049","messageId":"1050","endLine":26,"endColumn":4},{"ruleId":"1011","severity":1,"message":"1268","line":28,"column":9,"nodeType":"1013","messageId":"1014","endLine":28,"endColumn":24},{"ruleId":"1108","severity":1,"message":"1109","line":35,"column":40,"nodeType":"1110","endLine":35,"endColumn":77},{"ruleId":"1047","severity":1,"message":"1048","line":8,"column":5,"nodeType":"1049","messageId":"1050","endLine":8,"endColumn":34},{"ruleId":"1065","severity":1,"message":"1141","line":22,"column":31,"nodeType":"1067","messageId":"1142","endLine":22,"endColumn":33},{"ruleId":"1065","severity":1,"message":"1141","line":43,"column":26,"nodeType":"1067","messageId":"1142","endLine":43,"endColumn":28},{"ruleId":"1011","severity":1,"message":"1251","line":4,"column":8,"nodeType":"1013","messageId":"1014","endLine":4,"endColumn":14},{"ruleId":"1011","severity":1,"message":"1252","line":9,"column":12,"nodeType":"1013","messageId":"1014","endLine":9,"endColumn":23},{"ruleId":"1011","severity":1,"message":"1269","line":1,"column":10,"nodeType":"1013","messageId":"1014","endLine":1,"endColumn":22},{"ruleId":"1011","severity":1,"message":"1120","line":2,"column":17,"nodeType":"1013","messageId":"1014","endLine":2,"endColumn":23},{"ruleId":"1011","severity":1,"message":"1191","line":6,"column":5,"nodeType":"1013","messageId":"1014","endLine":6,"endColumn":35},"no-unused-vars","'composeWithDevTools' is defined but never used.","Identifier","unusedVar","'styles' is defined but never used.","no-native-reassign",["1270"],"no-negated-in-lhs",["1271"],"'toast' is defined but never used.","'Footer' is defined but never used.","'VendorHistory' is defined but never used.","'Vendorsign' is defined but never used.","'admintUser' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["1272"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"1273","text":"1274"},{"range":"1275","text":"1276"},"'RightCircleFilled' is defined but never used.","'CheckCircleOutlined' is defined but never used.","'ItemGroup' is assigned a value but never used.","'selectedArea' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleFilters'. Either include it or remove the dependency array.",["1277"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'getVendorsTotal' is defined but never used.","'dispatch' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has a missing dependency: 'loadVendorDetails'. Either include it or remove the dependency array.",["1278"],"React Hook useEffect contains a call to 'setStar'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [vendor.ratings, user] as a second argument to the useEffect Hook.",["1279"],"React Hook useEffect has a missing dependency: 'loadAllVendorCats'. Either include it or remove the dependency array.",["1280"],"'LoadingCard' is defined but never used.","'setVendorsTotal' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadSubcat' and 'loadVendorsSubcat'. Either include them or remove the dependency array.",["1281"],"'_' is defined but never used.","React Hook useEffect has a missing dependency: 'getCategory'. Either include it or remove the dependency array.",["1282"],"'loading' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'categories' is assigned a value but never used.","'fetchCategoriesName' is defined but never used.","'category' is assigned a value but never used.","'fetchCategories' is defined but never used.","React Hook useEffect has a missing dependency: 'getSubcat'. Either include it or remove the dependency array.",["1283"],"'connect' is defined but never used.","'Fragment' is defined but never used.","'categoryReducer' is defined but never used.","'ToastContainer' is defined but never used.","React Hook useEffect has a missing dependency: 'loadQuestion'. Either include it or remove the dependency array.",["1284"],"'questions' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getQuestion'. Either include it or remove the dependency array.",["1285"],"'useEffect' is defined but never used.","'addSubcatQuestion' is defined but never used.","'subquestions' is assigned a value but never used.","'setSubquestions' is assigned a value but never used.","'loader' is assigned a value but never used.","'setLoader' is assigned a value but never used.","'mapStateToProps' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property _id.","unexpectedWhitespace",{"range":"1286","text":"1287"},"'timeslots' is assigned a value but never used.","'AdminMenu' is defined but never used.","React Hook useEffect has a missing dependency: 'loadTimeslot'. Either include it or remove the dependency array.",["1288"],"'addRoute' is assigned a value but never used.","'areas' is assigned a value but never used.","'react' is defined but never used.","'assign' is defined but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'getCartTotal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.token'. Either include it or remove the dependency array.",["1289"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Elements' is defined but never used.","'promise' is assigned a value but never used.","'useSelector' is defined but never used.","'fetchVendorCalendar' is defined but never used.","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["1290"],"'renderList' is assigned a value but never used.","'Button' is defined but never used.","'List' is defined but never used.","'tooltip' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'endDate._d', 'match.params.vendor', and 'startDate'. Either include them or remove the dependency array.",["1291"],"React Hook useEffect has a missing dependency: 'match.params.vendor'. Either include it or remove the dependency array.",["1292"],"'useDispatch' is defined but never used.","'user' is assigned a value but never used.","'setLoading' is assigned a value but never used.","no-const-assign","'email' is constant.","const","React Hook useEffect has a missing dependency: 'loadUserOrders'. Either include it or remove the dependency array.",["1293"],"'showDownloadLink' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.",["1294"],"'CounterToRedirect' is defined but never used.","React Hook useEffect has a missing dependency: 'loadVendorCategory'. Either include it or remove the dependency array.",["1295"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","'Redirect' is defined but never used.","React Hook useEffect has missing dependencies: 'getCategories' and 'getVendorInfo'. Either include them or remove the dependency array.",["1296"],"'email' is assigned a value but never used.","'userId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getVendorInfo'. Either include it or remove the dependency array.",["1297"],"'vendors' is assigned a value but never used.","'vendor' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadVendorCategories'. Either include it or remove the dependency array.",["1298"],"'readVendorCalendar' is defined but never used.","'currentBooking' is assigned a value but never used.","'currentDate' is assigned a value but never used.","ReturnStatement","expectedReturnValue","React Hook useEffect has a missing dependency: 'loadVendorCalendar'. Either include it or remove the dependency array.",["1299"],"React Hook useEffect has a missing dependency: 'loadVendorCategoriesUser'. Either include it or remove the dependency array.",["1300"],"'addBulkAvail' is defined but never used.","'handleSubmitAvail' is assigned a value but never used.","'EditOutlined' is defined but never used.","'DeleteOutlined' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'loadAccountStatus'. Either include it or remove the dependency array.",["1301"],["1302"],"'createOrder' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'user.token'. Either include them or remove the dependency array.",["1303"],"'res' is assigned a value but never used.","'CREATE_CATEGORY' is defined but never used.","'FETCH_CATEGORIES' is defined but never used.","'FETCH_CATEGORY' is defined but never used.","'EDIT_CATEGORY' is defined but never used.","'DELETE_CATEGORY' is defined but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'CheckSquareTwoTone' is defined but never used.",["1270"],["1271"],"'formValues' is defined but never used.","'history' is defined but never used.","'CREATE_VENDOR' is defined but never used.","'FETCH_CATEGORIES_NAME' is defined but never used.","'FETCH_SUBCATEGORIES_CATEGORIES' is defined but never used.","'CREATE_QUESTION' is defined but never used.","'FETCH_QUESTIONS' is defined but never used.","'FETCH_QUESTION' is defined but never used.","'DELETE_QUESTION' is defined but never used.","'EDIT_QUESTION' is defined but never used.","'CREATE_SUBCAT_QUESTION' is defined but never used.","'FETCH_SUBCAT_QUESTIONS' is defined but never used.","'FETCH_SUBCAT_QUESTION' is defined but never used.","'EDIT_SUBCAT_QUESTION' is defined but never used.","'DELETE_SUBCAT_QUESTION' is defined but never used.","'cart' is assigned a value but never used.","'setSubcats' is assigned a value but never used.","'description' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchSubcats'. Either include it or remove the dependency array.",["1304"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Expected '!==' and instead saw '!='.","'fetchSubcategories' is defined but never used.","'Carousel' is defined but never used.","'Meta' is assigned a value but never used.","'gridStyle' is assigned a value but never used.","'token' is assigned a value but never used.","'slot' is assigned a value but never used.","'subcategories' is assigned a value but never used.","'PostcodeSearch' is defined but never used.","'handlePostcodeChange' is assigned a value but never used.","'moment' is defined but never used.","'pricetype' is assigned a value but never used.","'React' is defined but never used.","'useHistory' is defined but never used.","'interval' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.email'. Either include it or remove the dependency array.",["1305"],"React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.",["1306"],"React Hook useEffect has a missing dependency: 'loadAccountBalance'. Either include it or remove the dependency array.",["1307"],"'caldata' is assigned a value but never used.","'setCaldata' is assigned a value but never used.","'timeslots' is constant.","'disableButtons' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Table' is defined but never used.","'TableHeader' is defined but never used.","'TableCell' is defined but never used.","'TableBody' is defined but never used.","'DataTableCell' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"1308","text":"1309"},["1310"],"'Form' is defined but never used.","'Input' is defined but never used.","'MinusCircleOutlined' is defined but never used.","'PlusOutlined' is defined but never used.","'Option' is assigned a value but never used.","'subcategory' is assigned a value but never used.","'question' is assigned a value but never used.","'setQuestion' is assigned a value but never used.","'setFields' is assigned a value but never used.","'reduxForm' is defined but never used.","'Field' is defined but never used.","'VendorField' is defined but never used.","'renderError' is assigned a value but never used.","'onFinish' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'Map' is defined but never used.","'Marker' is defined but never used.","'Card' is defined but never used.","'FontSizeOutlined' is defined but never used.","'Tooltip' is defined but never used.","'HeartOutlined' is defined but never used.","'handleAddToCart' is assigned a value but never used.","'Descriptions' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"1311","fix":"1312"},[6104,6123],"\r\n                .",[7058,7085],"\r\n                        .",{"desc":"1313","fix":"1314"},{"desc":"1315","fix":"1316"},{"desc":"1317","fix":"1318"},{"desc":"1319","fix":"1320"},{"desc":"1321","fix":"1322"},{"desc":"1323","fix":"1324"},{"desc":"1325","fix":"1326"},{"desc":"1327","fix":"1328"},{"desc":"1329","fix":"1330"},[1789,1791],".",{"desc":"1331","fix":"1332"},{"desc":"1333","fix":"1334"},{"desc":"1335","fix":"1336"},{"desc":"1337","fix":"1338"},{"desc":"1339","fix":"1340"},{"desc":"1341","fix":"1342"},{"desc":"1343","fix":"1344"},{"desc":"1345","fix":"1346"},{"desc":"1347","fix":"1348"},{"desc":"1349","fix":"1350"},{"desc":"1351","fix":"1352"},{"desc":"1353","fix":"1354"},{"desc":"1355","fix":"1356"},{"desc":"1357","fix":"1358"},{"desc":"1335","fix":"1359"},{"desc":"1360","fix":"1361"},{"desc":"1362","fix":"1363"},{"desc":"1364","fix":"1365"},{"desc":"1366","fix":"1367"},{"desc":"1368","fix":"1369"},[388,388],"()",{"desc":"1333","fix":"1370"},"Update the dependencies array to be: [dispatch]",{"range":"1371","text":"1372"},"Update the dependencies array to be: [handleFilters, ok]",{"range":"1373","text":"1374"},"Update the dependencies array to be: [id, loadVendorDetails]",{"range":"1375","text":"1376"},"Add dependencies array: [vendor.ratings, user]",{"range":"1377","text":"1378"},"Update the dependencies array to be: [loadAllVendorCats, page]",{"range":"1379","text":"1380"},"Update the dependencies array to be: [loadSubcat, loadVendorsSubcat]",{"range":"1381","text":"1382"},"Update the dependencies array to be: [getCategory]",{"range":"1383","text":"1384"},"Update the dependencies array to be: [getSubcat]",{"range":"1385","text":"1386"},"Update the dependencies array to be: [loadQuestion]",{"range":"1387","text":"1388"},"Update the dependencies array to be: [getQuestion]",{"range":"1389","text":"1390"},"Update the dependencies array to be: [loadTimeslot]",{"range":"1391","text":"1392"},"Update the dependencies array to be: [user.token]",{"range":"1393","text":"1394"},"Update the dependencies array to be: [match.params.id]",{"range":"1395","text":"1396"},"Update the dependencies array to be: [endDate._d, match.params.vendor, startDate]",{"range":"1397","text":"1398"},"Update the dependencies array to be: [match.params.vendor]",{"range":"1399","text":"1400"},"Update the dependencies array to be: [loadUserOrders]",{"range":"1401","text":"1402"},"Update the dependencies array to be: [loadVendorDetails]",{"range":"1403","text":"1404"},"Update the dependencies array to be: [loadVendorCategory]",{"range":"1405","text":"1406"},"Update the dependencies array to be: [getCategories, getVendorInfo]",{"range":"1407","text":"1408"},"Update the dependencies array to be: [getVendorInfo]",{"range":"1409","text":"1410"},"Update the dependencies array to be: [loadVendorCategories]",{"range":"1411","text":"1412"},"Update the dependencies array to be: [loadVendorCalendar]",{"range":"1413","text":"1414"},"Update the dependencies array to be: [loadVendorCategoriesUser]",{"range":"1415","text":"1416"},"Update the dependencies array to be: [loadAccountStatus, user]",{"range":"1417","text":"1418"},{"range":"1419","text":"1396"},"Update the dependencies array to be: [dispatch, history, match.params.vendor, user.token]",{"range":"1420","text":"1421"},"Update the dependencies array to be: [fetchSubcats]",{"range":"1422","text":"1423"},"Update the dependencies array to be: [user.email]",{"range":"1424","text":"1425"},"Update the dependencies array to be: [user._id]",{"range":"1426","text":"1427"},"Update the dependencies array to be: [loadAccountBalance]",{"range":"1428","text":"1429"},{"range":"1430","text":"1394"},[5764,5766],"[dispatch]",[3147,3151],"[handleFilters, ok]",[642,646],"[id, loadVendorDetails]",[924,924],", [vendor.ratings, user]",[540,546],"[loadAllVendorCats, page]",[679,681],"[loadSubcat, loadVendorsSubcat]",[701,703],"[getCategory]",[796,798],"[getSubcat]",[640,642],"[loadQuestion]",[715,717],"[getQuestion]",[633,635],"[loadTimeslot]",[1078,1080],"[user.token]",[896,898],"[match.params.id]",[1575,1577],"[endDate._d, match.params.vendor, startDate]",[1702,1704],"[match.params.vendor]",[643,645],"[loadUserOrders]",[874,876],"[loadVendorDetails]",[1278,1280],"[loadVendorCategory]",[1218,1220],"[getCategories, getVendorInfo]",[622,624],"[getVendorInfo]",[832,834],"[loadVendorCategories]",[576,578],"[loadVendorCalendar]",[573,575],"[loadVendorCategoriesUser]",[791,797],"[loadAccountStatus, user]",[1268,1270],[1415,1436],"[dispatch, history, match.params.vendor, user.token]",[768,770],"[fetchSubcats]",[426,428],"[user.email]",[463,465],"[user._id]",[667,669],"[loadAccountBalance]",[1238,1240]]